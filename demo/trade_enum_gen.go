package main

import (
	"strings"

	
)

// Code generated by GeneratedFile enum - DO NOT EDIT.

type TradeKind byte

const (
	SmokeKind TradeKind = iota
	WineKind
	MeatKind
	DiskKind
	SheepKind
	GiftKind
	CashKind
	FirecrackersKind
	OtherKind
	InvalidTradeKind
)

func ConvertInteger2TradeKind[T stream.Integer](v T) TradeKind {
	return TradeKind(v)
}

func (k TradeKind) AssertKind(kinds string) TradeKind {
	for _, kind := range k.Kinds() {
		if strings.ToLower(kinds) == strings.ToLower(kind.String()) {
			return kind
		}
	}
	return InvalidTradeKind
}

func (k TradeKind) String() string {
	switch k {
	case SmokeKind:
		return "Smoke"
	case WineKind:
		return "Wine"
	case MeatKind:
		return "Meat"
	case DiskKind:
		return "Disk"
	case SheepKind:
		return "Sheep"
	case GiftKind:
		return "Gift"
	case CashKind:
		return "Cash"
	case FirecrackersKind:
		return "Firecrackers"
	case OtherKind:
		return "Other"
	default:
		return "InvalidTradeKind"
	}
}

func (k TradeKind) Tooltip() string {
	switch k {
	case SmokeKind:
		return "烟"
	case WineKind:
		return "酒"
	case MeatKind:
		return "肉"
	case DiskKind:
		return "菜"
	case SheepKind:
		return "羊"
	case GiftKind:
		return "礼金"
	case CashKind:
		return "取钱"
	case FirecrackersKind:
		return "鞭炮"
	case OtherKind:
		return "其它"
	default:
		return "InvalidTradeKind"
	}
}

func (k TradeKind) Keys() []string {
	return []string{
		"Smoke",
		"Wine",
		"Meat",
		"Disk",
		"Sheep",
		"Gift",
		"Cash",
		"Firecrackers",
		"Other",
	}
}

func (k TradeKind) Kinds() []TradeKind {
	return []TradeKind{
		SmokeKind,
		WineKind,
		MeatKind,
		DiskKind,
		SheepKind,
		GiftKind,
		CashKind,
		FirecrackersKind,
		OtherKind,
	}
}

func (k TradeKind) PngFileName() string {
	switch k {
	case SmokeKind:
		return "Smoke"
	case WineKind:
		return "Wine"
	case MeatKind:
		return "Meat"
	case DiskKind:
		return "Disk"
	case SheepKind:
		return "Sheep"
	case GiftKind:
		return "Gift"
	case CashKind:
		return "Cash"
	case FirecrackersKind:
		return "Firecrackers"
	case OtherKind:
		return "Other"
	default:
		return "InvalidTradeKind"
	}
}
