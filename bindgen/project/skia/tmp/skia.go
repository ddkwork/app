// Code generated by bindgen. DO NOT EDIT.
package skia

import (
	"unsafe"
	"github.com/ddkwork/app/bindgen/bindlib"
)

const GengoLibraryName = "skia"

var GengoLibrary = bindlib.NewLibrary(GengoLibraryName)

type  int32

const (
	UNKNOWN_SK_COLORTYPE            = 0
	ALPHA_8_SK_COLORTYPE            = 1
	RGB_565_SK_COLORTYPE            = 2
	ARGB_4444_SK_COLORTYPE          = 3
	RGBA_8888_SK_COLORTYPE          = 4
	RGB_888X_SK_COLORTYPE           = 5
	BGRA_8888_SK_COLORTYPE          = 6
	RGBA_1010102_SK_COLORTYPE       = 7
	BGRA_1010102_SK_COLORTYPE       = 8
	RGB_101010X_SK_COLORTYPE        = 9
	BGR_101010X_SK_COLORTYPE        = 10
	BGR_101010X_XR_SK_COLORTYPE     = 11
	GRAY_8_SK_COLORTYPE             = 12
	RGBA_F16_NORM_SK_COLORTYPE      = 13
	RGBA_F16_SK_COLORTYPE           = 14
	RGBA_F32_SK_COLORTYPE           = 15
	R8G8_UNORM_SK_COLORTYPE         = 16
	A16_FLOAT_SK_COLORTYPE          = 17
	R16G16_FLOAT_SK_COLORTYPE       = 18
	A16_UNORM_SK_COLORTYPE          = 19
	R16G16_UNORM_SK_COLORTYPE       = 20
	R16G16B16A16_UNORM_SK_COLORTYPE = 21
	SRGBA_8888_SK_COLORTYPE         = 22
	R8_UNORM_SK_COLORTYPE           = 23
)

type  int32

const (
	UNKNOWN_SK_ALPHATYPE  = 0
	OPAQUE_SK_ALPHATYPE   = 1
	PREMUL_SK_ALPHATYPE   = 2
	UNPREMUL_SK_ALPHATYPE = 3
)

type  int32

const (
	UNKNOWN_SK_PIXELGEOMETRY = 0
	RGB_H_SK_PIXELGEOMETRY   = 1
	BGR_H_SK_PIXELGEOMETRY   = 2
	RGB_V_SK_PIXELGEOMETRY   = 3
	BGR_V_SK_PIXELGEOMETRY   = 4
)

type  int32

const (
	NONE_SK_SURFACE_PROPS_FLAGS                         = 0
	USE_DEVICE_INDEPENDENT_FONTS_SK_SURFACE_PROPS_FLAGS = 1
)

type  int32

const (
	CLEAR_SK_BLENDMODE      = 0
	SRC_SK_BLENDMODE        = 1
	DST_SK_BLENDMODE        = 2
	SRCOVER_SK_BLENDMODE    = 3
	DSTOVER_SK_BLENDMODE    = 4
	SRCIN_SK_BLENDMODE      = 5
	DSTIN_SK_BLENDMODE      = 6
	SRCOUT_SK_BLENDMODE     = 7
	DSTOUT_SK_BLENDMODE     = 8
	SRCATOP_SK_BLENDMODE    = 9
	DSTATOP_SK_BLENDMODE    = 10
	XOR_SK_BLENDMODE        = 11
	PLUS_SK_BLENDMODE       = 12
	MODULATE_SK_BLENDMODE   = 13
	SCREEN_SK_BLENDMODE     = 14
	OVERLAY_SK_BLENDMODE    = 15
	DARKEN_SK_BLENDMODE     = 16
	LIGHTEN_SK_BLENDMODE    = 17
	COLORDODGE_SK_BLENDMODE = 18
	COLORBURN_SK_BLENDMODE  = 19
	HARDLIGHT_SK_BLENDMODE  = 20
	SOFTLIGHT_SK_BLENDMODE  = 21
	DIFFERENCE_SK_BLENDMODE = 22
	EXCLUSION_SK_BLENDMODE  = 23
	MULTIPLY_SK_BLENDMODE   = 24
	HUE_SK_BLENDMODE        = 25
	SATURATION_SK_BLENDMODE = 26
	COLOR_SK_BLENDMODE      = 27
	LUMINOSITY_SK_BLENDMODE = 28
)

type  int32

const (
	POINTS_SK_POINT_MODE  = 0
	LINES_SK_POINT_MODE   = 1
	POLYGON_SK_POINT_MODE = 2
)

type  int32

const (
	LEFT_SK_TEXT_ALIGN   = 0
	CENTER_SK_TEXT_ALIGN = 1
	RIGHT_SK_TEXT_ALIGN  = 2
)

type  int32

const (
	UTF8_SK_TEXT_ENCODING     = 0
	UTF16_SK_TEXT_ENCODING    = 1
	UTF32_SK_TEXT_ENCODING    = 2
	GLYPH_ID_SK_TEXT_ENCODING = 3
)

type  int32

const (
	WINDING_SK_PATH_FILLTYPE         = 0
	EVENODD_SK_PATH_FILLTYPE         = 1
	INVERSE_WINDING_SK_PATH_FILLTYPE = 2
	INVERSE_EVENODD_SK_PATH_FILLTYPE = 3
)

type  int32

const (
	UPRIGHT_SK_FONT_STYLE_SLANT = 0
	ITALIC_SK_FONT_STYLE_SLANT  = 1
	OBLIQUE_SK_FONT_STYLE_SLANT = 2
)

type  int32

const (
	R_SK_COLOR_CHANNEL = 0
	G_SK_COLOR_CHANNEL = 1
	B_SK_COLOR_CHANNEL = 2
	A_SK_COLOR_CHANNEL = 3
)

// The logical operations that can be performed when combining two regions.
type  int32

const (
	// subtract the op region from the first region
	DIFFERENCE_SK_REGION_OP = 0
	// intersect the two regions
	INTERSECT_SK_REGION_OP = 1
	// union (inclusive-or) the two regions
	UNION_SK_REGION_OP = 2
	// exclusive-or the two regions
	XOR_SK_REGION_OP = 3
	// subtract the first region from the op region
	REVERSE_DIFFERENCE_SK_REGION_OP = 4
	// replace the dst region with the op region
	REPLACE_SK_REGION_OP = 5
)

type  int32

const (
	DIFFERENCE_SK_CLIPOP = 0
	INTERSECT_SK_CLIPOP  = 1
)

// Enum describing format of encoded data.
type  int32

const (
	BMP_SK_ENCODED_FORMAT    = 0
	GIF_SK_ENCODED_FORMAT    = 1
	ICO_SK_ENCODED_FORMAT    = 2
	JPEG_SK_ENCODED_FORMAT   = 3
	PNG_SK_ENCODED_FORMAT    = 4
	WBMP_SK_ENCODED_FORMAT   = 5
	WEBP_SK_ENCODED_FORMAT   = 6
	PKM_SK_ENCODED_FORMAT    = 7
	KTX_SK_ENCODED_FORMAT    = 8
	ASTC_SK_ENCODED_FORMAT   = 9
	DNG_SK_ENCODED_FORMAT    = 10
	HEIF_SK_ENCODED_FORMAT   = 11
	AVIF_SK_ENCODED_FORMAT   = 12
	JPEGXL_SK_ENCODED_FORMAT = 13
)

type  int32

const (
	TOP_LEFT_SK_ENCODED_ORIGIN     = 1
	TOP_RIGHT_SK_ENCODED_ORIGIN    = 2
	BOTTOM_RIGHT_SK_ENCODED_ORIGIN = 3
	BOTTOM_LEFT_SK_ENCODED_ORIGIN  = 4
	LEFT_TOP_SK_ENCODED_ORIGIN     = 5
	RIGHT_TOP_SK_ENCODED_ORIGIN    = 6
	RIGHT_BOTTOM_SK_ENCODED_ORIGIN = 7
	LEFT_BOTTOM_SK_ENCODED_ORIGIN  = 8
	DEFAULT_SK_ENCODED_ORIGIN      = 1
)

type  int32

const (
	SUCCESS_SK_CODEC_RESULT            = 0
	INCOMPLETE_INPUT_SK_CODEC_RESULT   = 1
	ERROR_IN_INPUT_SK_CODEC_RESULT     = 2
	INVALID_CONVERSION_SK_CODEC_RESULT = 3
	INVALID_SCALE_SK_CODEC_RESULT      = 4
	INVALID_PARAMETERS_SK_CODEC_RESULT = 5
	INVALID_INPUT_SK_CODEC_RESULT      = 6
	COULD_NOT_REWIND_SK_CODEC_RESULT   = 7
	INTERNAL_ERROR_SK_CODEC_RESULT     = 8
	UNIMPLEMENTED_SK_CODEC_RESULT      = 9
)

type  int32

const (
	YES_SK_CODEC_ZERO_INITIALIZED = 0
	NO_SK_CODEC_ZERO_INITIALIZED  = 1
)

type  int32

const (
	TOP_DOWN_SK_CODEC_SCANLINE_ORDER  = 0
	BOTTOM_UP_SK_CODEC_SCANLINE_ORDER = 1
)

type  int32

const (
	MOVE_SK_PATH_VERB  = 0
	LINE_SK_PATH_VERB  = 1
	QUAD_SK_PATH_VERB  = 2
	CONIC_SK_PATH_VERB = 3
	CUBIC_SK_PATH_VERB = 4
	CLOSE_SK_PATH_VERB = 5
	DONE_SK_PATH_VERB  = 6
)

type  int32

const (
	APPEND_SK_PATH_ADD_MODE = 0
	EXTEND_SK_PATH_ADD_MODE = 1
)

type  int32

const (
	LINE_SK_PATH_SEGMENT_MASK  = 1
	QUAD_SK_PATH_SEGMENT_MASK  = 2
	CONIC_SK_PATH_SEGMENT_MASK = 4
	CUBIC_SK_PATH_SEGMENT_MASK = 8
)

type  int32

const (
	TRANSLATE_SK_PATH_EFFECT_1D_STYLE = 0
	ROTATE_SK_PATH_EFFECT_1D_STYLE    = 1
	MORPH_SK_PATH_EFFECT_1D_STYLE     = 2
)

type  int32

const (
	NORMAL_SK_PATH_EFFECT_TRIM_MODE   = 0
	INVERTED_SK_PATH_EFFECT_TRIM_MODE = 1
)

type  int32

const (
	BUTT_SK_STROKE_CAP   = 0
	ROUND_SK_STROKE_CAP  = 1
	SQUARE_SK_STROKE_CAP = 2
)

type  int32

const (
	MITER_SK_STROKE_JOIN = 0
	ROUND_SK_STROKE_JOIN = 1
	BEVEL_SK_STROKE_JOIN = 2
)

type  int32

const (
	CLAMP_SK_SHADER_TILEMODE  = 0
	REPEAT_SK_SHADER_TILEMODE = 1
	MIRROR_SK_SHADER_TILEMODE = 2
	DECAL_SK_SHADER_TILEMODE  = 3
)

type  int32

const (
	// fuzzy inside and outside
	NORMAL_SK_BLUR_STYLE = 0
	// solid inside, fuzzy outside
	SOLID_SK_BLUR_STYLE = 1
	// nothing inside, fuzzy outside
	OUTER_SK_BLUR_STYLE = 2
	// fuzzy inside, nothing outside
	INNER_SK_BLUR_STYLE = 3
)

type  int32

const (
	CW_SK_PATH_DIRECTION  = 0
	CCW_SK_PATH_DIRECTION = 1
)

type  int32

const (
	SMALL_SK_PATH_ARC_SIZE = 0
	LARGE_SK_PATH_ARC_SIZE = 1
)

type  int32

const (
	FILL_SK_PAINT_STYLE            = 0
	STROKE_SK_PAINT_STYLE          = 1
	STROKE_AND_FILL_SK_PAINT_STYLE = 2
)

type  int32

const (
	NONE_SK_FONT_HINTING   = 0
	SLIGHT_SK_FONT_HINTING = 1
	NORMAL_SK_FONT_HINTING = 2
	FULL_SK_FONT_HINTING   = 3
)

type  int32

const (
	ALIAS_SK_FONT_EDGING              = 0
	ANTIALIAS_SK_FONT_EDGING          = 1
	SUBPIXEL_ANTIALIAS_SK_FONT_EDGING = 2
)

type  int32

const (
	TOP_LEFT_GR_SURFACE_ORIGIN    = 0
	BOTTOM_LEFT_GR_SURFACE_ORIGIN = 1
)

type  int32

const (
	OPENGL_GR_BACKEND   = 0
	VULKAN_GR_BACKEND   = 1
	METAL_GR_BACKEND    = 2
	DIRECT3D_GR_BACKEND = 3
	DAWN_GR_BACKEND     = 4
)

type  int32

const (
	DIFFERENCE_SK_PATHOP         = 0
	INTERSECT_SK_PATHOP          = 1
	UNION_SK_PATHOP              = 2
	XOR_SK_PATHOP                = 3
	REVERSE_DIFFERENCE_SK_PATHOP = 4
)

type  int32

const (
	DEFAULT_SK_LATTICE_RECT_TYPE     = 0
	TRANSPARENT_SK_LATTICE_RECT_TYPE = 1
	FIXED_COLOR_SK_LATTICE_RECT_TYPE = 2
)

type  int32

const (
	GET_POSITION_SK_PATHMEASURE_MATRIXFLAGS    = 1
	GET_TANGENT_SK_PATHMEASURE_MATRIXFLAGS     = 2
	GET_POS_AND_TAN_SK_PATHMEASURE_MATRIXFLAGS = 3
)

type  int32

const (
	ALLOW_SK_IMAGE_CACHING_HINT    = 0
	DISALLOW_SK_IMAGE_CACHING_HINT = 1
)

type  int32

const (
	NONE_SK_BITMAP_ALLOC_FLAGS        = 0
	ZERO_PIXELS_SK_BITMAP_ALLOC_FLAGS = 1
)

type  int32

const (
	KEEP_SK_CODEC_ANIMATION_DISPOSAL_METHOD             = 1
	RESTORE_BG_COLOR_SK_CODEC_ANIMATION_DISPOSAL_METHOD = 2
	RESTORE_PREVIOUS_SK_CODEC_ANIMATION_DISPOSAL_METHOD = 3
)

type  int32

const (
	SRC_OVER_SK_CODEC_ANIMATION_BLEND = 0
	SRC_SK_CODEC_ANIMATION_BLEND      = 1
)

type  int32

const (
	TRIANGLES_SK_VERTICES_VERTEX_MODE      = 0
	TRIANGLE_STRIP_SK_VERTICES_VERTEX_MODE = 1
	TRIANGLE_FAN_SK_VERTICES_VERTEX_MODE   = 2
)

type  int32

const (
	NO_INVERT_SK_HIGH_CONTRAST_CONFIG_INVERT_STYLE         = 0
	INVERT_BRIGHTNESS_SK_HIGH_CONTRAST_CONFIG_INVERT_STYLE = 1
	INVERT_LIGHTNESS_SK_HIGH_CONTRAST_CONFIG_INVERT_STYLE  = 2
)

type  int32

const (
	ZERO_SK_PNGENCODER_FILTER_FLAGS  = 0
	NONE_SK_PNGENCODER_FILTER_FLAGS  = 8
	SUB_SK_PNGENCODER_FILTER_FLAGS   = 16
	UP_SK_PNGENCODER_FILTER_FLAGS    = 32
	AVG_SK_PNGENCODER_FILTER_FLAGS   = 64
	PAETH_SK_PNGENCODER_FILTER_FLAGS = 128
	ALL_SK_PNGENCODER_FILTER_FLAGS   = 248
)

type  int32

const (
	DOWNSAMPLE_420_SK_JPEGENCODER_DOWNSAMPLE = 0
	DOWNSAMPLE_422_SK_JPEGENCODER_DOWNSAMPLE = 1
	DOWNSAMPLE_444_SK_JPEGENCODER_DOWNSAMPLE = 2
)

type  int32

const (
	IGNORE_SK_JPEGENCODER_ALPHA_OPTION         = 0
	BLEND_ON_BLACK_SK_JPEGENCODER_ALPHA_OPTION = 1
)

type  int32

const (
	LOSSY_SK_WEBPENCODER_COMPTRESSION    = 0
	LOSSLESS_SK_WEBPENCODER_COMPTRESSION = 1
)

type  int32

const (
	EMPTY_SK_RRECT_TYPE      = 0
	RECT_SK_RRECT_TYPE       = 1
	OVAL_SK_RRECT_TYPE       = 2
	SIMPLE_SK_RRECT_TYPE     = 3
	NINE_PATCH_SK_RRECT_TYPE = 4
	COMPLEX_SK_RRECT_TYPE    = 5
)

type  int32

const (
	UPPER_LEFT_SK_RRECT_CORNER  = 0
	UPPER_RIGHT_SK_RRECT_CORNER = 1
	LOWER_RIGHT_SK_RRECT_CORNER = 2
	LOWER_LEFT_SK_RRECT_CORNER  = 3
)

type  int32

const (
	FLOAT_SK_RUNTIMEEFFECT_UNIFORM_TYPE    = 0
	FLOAT2_SK_RUNTIMEEFFECT_UNIFORM_TYPE   = 1
	FLOAT3_SK_RUNTIMEEFFECT_UNIFORM_TYPE   = 2
	FLOAT4_SK_RUNTIMEEFFECT_UNIFORM_TYPE   = 3
	FLOAT2X2_SK_RUNTIMEEFFECT_UNIFORM_TYPE = 4
	FLOAT3X3_SK_RUNTIMEEFFECT_UNIFORM_TYPE = 5
	FLOAT4X4_SK_RUNTIMEEFFECT_UNIFORM_TYPE = 6
	INT_SK_RUNTIMEEFFECT_UNIFORM_TYPE      = 7
	INT2_SK_RUNTIMEEFFECT_UNIFORM_TYPE     = 8
	INT3_SK_RUNTIMEEFFECT_UNIFORM_TYPE     = 9
	INT4_SK_RUNTIMEEFFECT_UNIFORM_TYPE     = 10
)

type  int32

const (
	SHADER_SK_RUNTIMEEFFECT_CHILD_TYPE       = 0
	COLOR_FILTER_SK_RUNTIMEEFFECT_CHILD_TYPE = 1
	BLENDER_SK_RUNTIMEEFFECT_CHILD_TYPE      = 2
)

type  int32

const (
	NONE_SK_RUNTIMEEFFECT_UNIFORM_FLAGS           = 0
	ARRAY_SK_RUNTIMEEFFECT_UNIFORM_FLAGS          = 1
	COLOR_SK_RUNTIMEEFFECT_UNIFORM_FLAGS          = 2
	VERTEX_SK_RUNTIMEEFFECT_UNIFORM_FLAGS         = 4
	FRAGMENT_SK_RUNTIMEEFFECT_UNIFORM_FLAGS       = 8
	HALF_PRECISION_SK_RUNTIMEEFFECT_UNIFORM_FLAGS = 16
)

type  int32

const (
	NEAREST_SK_FILTER_MODE = 0
	LINEAR_SK_FILTER_MODE  = 1
)

type  int32

const (
	NONE_SK_MIPMAP_MODE    = 0
	NEAREST_SK_MIPMAP_MODE = 1
	LINEAR_SK_MIPMAP_MODE  = 2
)

type  int32

const (
	SKIP_TOP_LEVEL_ISOLATION   = 1
	DISABLE_TOP_LEVEL_CLIPPING = 2
)

type  int32

const (
	NONE_SKOTTIE_ANIMATION_BUILDER_FLAGS                  = 0
	DEFER_IMAGE_LOADING_SKOTTIE_ANIMATION_BUILDER_FLAGS   = 1
	PREFER_EMBEDDED_FONTS_SKOTTIE_ANIMATION_BUILDER_FLAGS = 2
)

type SkColor4fT struct {
	fR float32
	fG float32
	fB float32
	fA float32
}
type Anon149_9 struct {
	X float32
	Y float32
}
type Anon156_9 struct {
	Left   int32
	Top    int32
	Right  int32
	Bottom int32
}
type Anon163_9 struct {
	Left   float32
	Top    float32
	Right  float32
	Bottom float32
}
type Anon170_9 struct {
	scaleX float32
	skewX  float32
	transX float32
	skewY  float32
	scaleY float32
	transY float32
	Persp0 float32
	Persp1 float32
	Persp2 float32
}
type Anon177_9 struct {
	M00 float32
	M01 float32
	M02 float32
	M03 float32
	M10 float32
	M11 float32
	M12 float32
	M13 float32
	M20 float32
	M21 float32
	M22 float32
	M23 float32
	M30 float32
	M31 float32
	M32 float32
	M33 float32
}
type Anon310_9 struct {
	X float32
	Y float32
	Z float32
}
type Anon316_9 struct {
	X int32
	Y int32
}
type Anon321_9 struct {
	W float32
	H float32
}
type Anon326_9 struct {
	W int32
	H int32
}
type Anon331_9 struct {
	fFlags              int32
	fTop                float32
	fAscent             float32
	fDescent            float32
	fBottom             float32
	fLeading            float32
	fAvgCharWidth       float32
	fMaxCharWidth       float32
	fXMin               float32
	fXMax               float32
	fXHeight            float32
	fCapHeight          float32
	fUnderlineThickness float32
	fUnderlinePosition  float32
	fStrikeoutThickness float32
	fStrikeoutPosition  float32
}
type Anon509_9 struct {
	fZeroInitialized SkCodecZeroInitializedT
	fSubset          *SkIrectT
	fFrameIndex      int32
	fPriorFrame      int32
}
type Anon622_9 struct {
	fAvoidStencilBuffers           bool
	fRuntimeProgramCacheSize       int32
	fGlyphCacheTextureMaximumBytes uint
	fAllowPathMaskCaching          bool
	fDoManualMipmapping            bool
	fBufferMapThreshold            int32
}
type Anon654_9 struct {
	fTarget    uint32
	fID        uint32
	fFormat    uint32
	fProtected bool
}
type Anon661_9 struct {
	fFBOID     uint32
	fFormat    uint32
	fProtected bool
}
type Anon681_9 struct {
	fInstance              unsafe.Pointer
	fPhysicalDevice        unsafe.Pointer
	fDevice                unsafe.Pointer
	fQueue                 unsafe.Pointer
	fGraphicsQueueIndex    int32
	fMinAPIVersion         int32
	fInstanceVersion       int32
	fMaxAPIVersion         int32
	fExtensions            int32
	fVkExtensions          unsafe.Pointer
	fFeatures              int32
	fDeviceFeatures        unsafe.Pointer
	fDeviceFeatures2       unsafe.Pointer
	fMemoryAllocator       unsafe.Pointer
	fGetProc               GrVkGetProc
	fGetProcUserData       unsafe.Pointer
	fOwnsInstanceAndDevice bool
	fProtectedContext      bool
}
type Anon704_9 struct {
	fMemory                  int32
	fOffset                  int32
	fSize                    int32
	fFlags                   int32
	fBackendMemory           GrVkBackendmemoryT
	_private_fUsesSystemHeap bool
}
type Anon713_9 struct {
	fFormat                      int32
	fExternalFormat              int32
	fYcbcrModel                  int32
	fYcbcrRange                  int32
	fXChromaOffset               int32
	fYChromaOffset               int32
	fChromaFilter                int32
	fForceExplicitReconstruction int32
	fFormatFeatures              int32
}
type Anon725_9 struct {
	fImage               int32
	fAlloc               Anon704_9
	fImageTiling         int32
	fImageLayout         int32
	fFormat              int32
	fImageUsageFlags     int32
	fSampleCount         int32
	fLevelCount          int32
	fCurrentQueueFamily  int32
	fProtected           bool
	fYcbcrConversionInfo Anon713_9
	fSharingMode         int32
}
type Anon747_9 struct {
	fTexture unsafe.Pointer
}
type Anon767_9 struct {
	fXDivs     *int32
	fYDivs     *int32
	fRectTypes *SkLatticeRecttypeT
	fXCount    int32
	fYCount    int32
	fBounds    *SkIrectT
	fColors    *SkColorT
}
type Anon806_9 struct {
	fTimeZoneMinutes int32
	fYear            int32
	fMonth           int32
	fDayOfWeek       int32
	fDay             int32
	fHour            int32
	fMinute          int32
	fSecond          int32
}
type Anon817_9 struct {
	fTitle           unsafe.Pointer
	fAuthor          unsafe.Pointer
	fSubject         unsafe.Pointer
	fKeywords        unsafe.Pointer
	fCreator         unsafe.Pointer
	fProducer        unsafe.Pointer
	fCreation        *SkTimeDatetimeT
	fModified        *SkTimeDatetimeT
	fRasterDPI       float32
	fPDFA            bool
	fEncodingQuality int32
}
type Anon831_9 struct {
	Colorspace unsafe.Pointer
	Width      int32
	Height     int32
	colorType  SkColortypeT
	alphaType  SkAlphatypeT
}
type Anon850_9 struct {
	fRequiredFrame        int32
	fDuration             int32
	fFullyReceived        bool
	fAlphaType            SkAlphatypeT
	fHasAlphaWithinBounds bool
	fDisposalMethod       SkCodecanimationDisposalmethodT
	fBlend                SkCodecanimationBlendT
	fFrameRect            Anon156_9
}
type SkColorspaceTransferFnT struct {
	fG float32
	fA float32
	fB float32
	fC float32
	fD float32
	fE float32
	fF float32
}
type SkColorspacePrimariesT struct {
	fRX float32
	fRY float32
	fGX float32
	fGY float32
	fBX float32
	fBY float32
	fWX float32
	fWY float32
}
type SkColorspaceXyzT struct {
	fM00 float32
	fM01 float32
	fM02 float32
	fM10 float32
	fM11 float32
	fM12 float32
	fM20 float32
	fM21 float32
	fM22 float32
}
type Anon912_9 struct {
	fGrayscale   bool
	fInvertStyle SkHighcontrastconfigInvertstyleT
	fContrast    float32
}
type Anon932_9 struct {
	fFilterFlags           SkPngencoderFilterflagsT
	fZLibLevel             int32
	fComments              unsafe.Pointer
	fICCProfile            unsafe.Pointer
	fICCProfileDescription *byte
}
type Anon951_9 struct {
	fQuality               int32
	fDownsample            SkJpegencoderDownsampleT
	fAlphaOption           SkJpegencoderAlphaoptionT
	xmpMetadata            unsafe.Pointer
	fICCProfile            unsafe.Pointer
	fICCProfileDescription *byte
}
type Anon965_9 struct {
	fCompression           SkWebpencoderCompressionT
	fQuality               float32
	fICCProfile            unsafe.Pointer
	fICCProfileDescription *byte
}
type Anon993_9 struct {
	Glyphs   unsafe.Pointer
	Pos      unsafe.Pointer
	Utf8text unsafe.Pointer
	Clusters unsafe.Pointer
}
type Anon1000_9 struct {
	fSCos float32
	fSSin float32
	fTX   float32
	fTY   float32
}
type Anon1040_9 struct {
	fName       *byte
	fNameLength uint
	fOffset     uint
	fType       SkRuntimeeffectUniformTypeT
	fCount      int32
	fFlags      SkRuntimeeffectUniformFlagsT
}
type Anon1049_9 struct {
	fName       *byte
	fNameLength uint
	fType       SkRuntimeeffectChildTypeT
	fIndex      int32
}
type Anon1067_9 struct {
	fB float32
	fC float32
}
type Anon1072_9 struct {
	fMaxAniso int32
	fUseCubic bool
	fCubic    any
	fFilter   SkFilterModeT
	fMipmap   SkMipmapModeT
}
type Anon1103_9 struct {
	fTotalLoadTimeMS  float32
	fJsonParseTimeMS  float32
	fSceneParseTimeMS float32
	fJsonSize         uint
	fAnimatorCount    uint
}
type _Int128T = any
type _Uint128T = any
type __NSConstantString = any
type SizeT = uint64
type _BuiltinMsVaList = *byte
type _BuiltinVaList = *byte
type SkColorT = int32
type SkPmcolorT = int32
type SkColortypeT = any
type SkAlphatypeT = any
type SkPixelgeometryT = any
type SkSurfacepropsFlagsT = any
type SkVectorT = any
type SkIrectT = Anon156_9
type SkBlendmodeT = any
type SkIpointT = Anon316_9
type SkIsizeT = Anon326_9
type SkFontmetricsT = Anon331_9
type SkFontTableTagT = int32
type SkPointModeT = any
type SkTextAlignT = any
type SkTextEncodingT = any
type SkPathFilltypeT = any
type SkFontStyleSlantT = any
type SkColorChannelT = any

// The logical operations that can be performed when combining two regions.
type SkRegionOpT = any
type SkClipopT = any

// Enum describing format of encoded data.
type SkEncodedImageFormatT = any
type SkEncodedoriginT = any
type SkCodecResultT = any
type SkCodecZeroInitializedT = any
type SkCodecScanlineOrderT = any
type SkPathVerbT = any
type SkPathAddModeT = any
type SkPathSegmentMaskT = any
type SkPathEffect1dStyleT = any
type SkPathEffectTrimModeT = any
type SkStrokeCapT = any
type SkStrokeJoinT = any
type SkShaderTilemodeT = any
type SkBlurstyleT = any
type SkPathDirectionT = any
type SkPathArcSizeT = any
type SkPaintStyleT = any
type SkFontHintingT = any
type SkFontEdgingT = any
type GrSurfaceoriginT = any
type GrBackendobjectT = int32
type GrBackendT = any
type GrBackendcontextT = int32
type GrGlFuncPtr = unsafe.Pointer
type GrGlGetProc = unsafe.Pointer
type GrVkFuncPtr = unsafe.Pointer
type GrVkGetProc = unsafe.Pointer
type GrVkBackendcontextT = Anon681_9
type GrVkBackendmemoryT = int32
type GrVkAllocT = Anon704_9
type GrVkYcbcrconversioninfoT = Anon713_9
type GrVkImageinfoT = Anon725_9
type SkPathopT = any
type SkLatticeRecttypeT = any
type SkPathmeasureMatrixflagsT = any
type SkBitmapReleaseProc = unsafe.Pointer
type SkDataReleaseProc = unsafe.Pointer
type SkImageRasterReleaseProc = unsafe.Pointer
type SkImageTextureReleaseProc = unsafe.Pointer
type SkSurfaceRasterReleaseProc = unsafe.Pointer
type SkGlyphPathProc = unsafe.Pointer
type SkImageCachingHintT = any
type SkBitmapAllocflagsT = any
type SkTimeDatetimeT = Anon806_9
type SkImageinfoT = Anon831_9
type SkCodecanimationDisposalmethodT = any
type SkCodecanimationBlendT = any
type SkCodecFrameinfoT = Anon850_9
type SkVerticesVertexModeT = any
type SkHighcontrastconfigInvertstyleT = any
type SkPngencoderFilterflagsT = any
type SkJpegencoderDownsampleT = any
type SkJpegencoderAlphaoptionT = any
type SkWebpencoderCompressionT = any
type SkRrectTypeT = any
type SkRrectCornerT = any
type SkRuntimeeffectUniformTypeT = any
type SkRuntimeeffectChildTypeT = any
type SkRuntimeeffectUniformFlagsT = any
type SkFilterModeT = any
type SkMipmapModeT = any
type SkottieAnimationRenderflagsT = any
type SkottieAnimationBuilderFlagsT = any

var __imp_gr_recording_context_unref bindlib.PreloadProc

//  Gengo init function.
func init() {
	__imp_gr_recording_context_unref = GengoLibrary.ImportNow("gr_recording_context_unref")
	__imp_gr_recording_context_get_max_surface_sample_count_for_color_type = GengoLibrary.ImportNow("gr_recording_context_get_max_surface_sample_count_for_color_type")
	__imp_gr_recording_context_get_backend = GengoLibrary.ImportNow("gr_recording_context_get_backend")
	__imp_gr_recording_context_is_abandoned = GengoLibrary.ImportNow("gr_recording_context_is_abandoned")
	__imp_gr_recording_context_max_texture_size = GengoLibrary.ImportNow("gr_recording_context_max_texture_size")
	__imp_gr_recording_context_max_render_target_size = GengoLibrary.ImportNow("gr_recording_context_max_render_target_size")
	__imp_gr_direct_context_make_gl = GengoLibrary.ImportNow("gr_direct_context_make_gl")
	__imp_gr_direct_context_make_gl_with_options = GengoLibrary.ImportNow("gr_direct_context_make_gl_with_options")
	__imp_gr_direct_context_make_vulkan = GengoLibrary.ImportNow("gr_direct_context_make_vulkan")
	__imp_gr_direct_context_make_vulkan_with_options = GengoLibrary.ImportNow("gr_direct_context_make_vulkan_with_options")
	__imp_gr_direct_context_make_metal = GengoLibrary.ImportNow("gr_direct_context_make_metal")
	__imp_gr_direct_context_make_metal_with_options = GengoLibrary.ImportNow("gr_direct_context_make_metal_with_options")
	__imp_gr_direct_context_is_abandoned = GengoLibrary.ImportNow("gr_direct_context_is_abandoned")
	__imp_gr_direct_context_abandon_context = GengoLibrary.ImportNow("gr_direct_context_abandon_context")
	__imp_gr_direct_context_release_resources_and_abandon_context = GengoLibrary.ImportNow("gr_direct_context_release_resources_and_abandon_context")
	__imp_gr_direct_context_get_resource_cache_limit = GengoLibrary.ImportNow("gr_direct_context_get_resource_cache_limit")
	__imp_gr_direct_context_set_resource_cache_limit = GengoLibrary.ImportNow("gr_direct_context_set_resource_cache_limit")
	__imp_gr_direct_context_get_resource_cache_usage = GengoLibrary.ImportNow("gr_direct_context_get_resource_cache_usage")
	__imp_gr_direct_context_flush = GengoLibrary.ImportNow("gr_direct_context_flush")
	__imp_gr_direct_context_submit = GengoLibrary.ImportNow("gr_direct_context_submit")
	__imp_gr_direct_context_flush_and_submit = GengoLibrary.ImportNow("gr_direct_context_flush_and_submit")
	__imp_gr_direct_context_flush_image = GengoLibrary.ImportNow("gr_direct_context_flush_image")
	__imp_gr_direct_context_flush_surface = GengoLibrary.ImportNow("gr_direct_context_flush_surface")
	__imp_gr_direct_context_reset_context = GengoLibrary.ImportNow("gr_direct_context_reset_context")
	__imp_gr_direct_context_dump_memory_statistics = GengoLibrary.ImportNow("gr_direct_context_dump_memory_statistics")
	__imp_gr_direct_context_free_gpu_resources = GengoLibrary.ImportNow("gr_direct_context_free_gpu_resources")
	__imp_gr_direct_context_perform_deferred_cleanup = GengoLibrary.ImportNow("gr_direct_context_perform_deferred_cleanup")
	__imp_gr_direct_context_purge_unlocked_resources_bytes = GengoLibrary.ImportNow("gr_direct_context_purge_unlocked_resources_bytes")
	__imp_gr_direct_context_purge_unlocked_resources = GengoLibrary.ImportNow("gr_direct_context_purge_unlocked_resources")
	__imp_gr_glinterface_create_native_interface = GengoLibrary.ImportNow("gr_glinterface_create_native_interface")
	__imp_gr_glinterface_assemble_interface = GengoLibrary.ImportNow("gr_glinterface_assemble_interface")
	__imp_gr_glinterface_assemble_gl_interface = GengoLibrary.ImportNow("gr_glinterface_assemble_gl_interface")
	__imp_gr_glinterface_assemble_gles_interface = GengoLibrary.ImportNow("gr_glinterface_assemble_gles_interface")
	__imp_gr_glinterface_assemble_webgl_interface = GengoLibrary.ImportNow("gr_glinterface_assemble_webgl_interface")
	__imp_gr_glinterface_unref = GengoLibrary.ImportNow("gr_glinterface_unref")
	__imp_gr_glinterface_validate = GengoLibrary.ImportNow("gr_glinterface_validate")
	__imp_gr_glinterface_has_extension = GengoLibrary.ImportNow("gr_glinterface_has_extension")
	__imp_gr_vk_extensions_new = GengoLibrary.ImportNow("gr_vk_extensions_new")
	__imp_gr_vk_extensions_delete = GengoLibrary.ImportNow("gr_vk_extensions_delete")
	__imp_gr_vk_extensions_init = GengoLibrary.ImportNow("gr_vk_extensions_init")
	__imp_gr_vk_extensions_has_extension = GengoLibrary.ImportNow("gr_vk_extensions_has_extension")
	__imp_gr_backendtexture_new_gl = GengoLibrary.ImportNow("gr_backendtexture_new_gl")
	__imp_gr_backendtexture_new_vulkan = GengoLibrary.ImportNow("gr_backendtexture_new_vulkan")
	__imp_gr_backendtexture_new_metal = GengoLibrary.ImportNow("gr_backendtexture_new_metal")
	__imp_gr_backendtexture_delete = GengoLibrary.ImportNow("gr_backendtexture_delete")
	__imp_gr_backendtexture_is_valid = GengoLibrary.ImportNow("gr_backendtexture_is_valid")
	__imp_gr_backendtexture_get_width = GengoLibrary.ImportNow("gr_backendtexture_get_width")
	__imp_gr_backendtexture_get_height = GengoLibrary.ImportNow("gr_backendtexture_get_height")
	__imp_gr_backendtexture_has_mipmaps = GengoLibrary.ImportNow("gr_backendtexture_has_mipmaps")
	__imp_gr_backendtexture_get_backend = GengoLibrary.ImportNow("gr_backendtexture_get_backend")
	__imp_gr_backendtexture_get_gl_textureinfo = GengoLibrary.ImportNow("gr_backendtexture_get_gl_textureinfo")
	__imp_gr_backendrendertarget_new_gl = GengoLibrary.ImportNow("gr_backendrendertarget_new_gl")
	__imp_gr_backendrendertarget_new_vulkan = GengoLibrary.ImportNow("gr_backendrendertarget_new_vulkan")
	__imp_gr_backendrendertarget_new_metal = GengoLibrary.ImportNow("gr_backendrendertarget_new_metal")
	__imp_gr_backendrendertarget_delete = GengoLibrary.ImportNow("gr_backendrendertarget_delete")
	__imp_gr_backendrendertarget_is_valid = GengoLibrary.ImportNow("gr_backendrendertarget_is_valid")
	__imp_gr_backendrendertarget_get_width = GengoLibrary.ImportNow("gr_backendrendertarget_get_width")
	__imp_gr_backendrendertarget_get_height = GengoLibrary.ImportNow("gr_backendrendertarget_get_height")
	__imp_gr_backendrendertarget_get_samples = GengoLibrary.ImportNow("gr_backendrendertarget_get_samples")
	__imp_gr_backendrendertarget_get_stencils = GengoLibrary.ImportNow("gr_backendrendertarget_get_stencils")
	__imp_gr_backendrendertarget_get_backend = GengoLibrary.ImportNow("gr_backendrendertarget_get_backend")
	__imp_gr_backendrendertarget_get_gl_framebufferinfo = GengoLibrary.ImportNow("gr_backendrendertarget_get_gl_framebufferinfo")
	__imp_sk_bitmap_destructor = GengoLibrary.ImportNow("sk_bitmap_destructor")
	__imp_sk_bitmap_new = GengoLibrary.ImportNow("sk_bitmap_new")
	__imp_sk_bitmap_get_info = GengoLibrary.ImportNow("sk_bitmap_get_info")
	__imp_sk_bitmap_get_pixels = GengoLibrary.ImportNow("sk_bitmap_get_pixels")
	__imp_sk_bitmap_get_row_bytes = GengoLibrary.ImportNow("sk_bitmap_get_row_bytes")
	__imp_sk_bitmap_get_byte_count = GengoLibrary.ImportNow("sk_bitmap_get_byte_count")
	__imp_sk_bitmap_reset = GengoLibrary.ImportNow("sk_bitmap_reset")
	__imp_sk_bitmap_is_null = GengoLibrary.ImportNow("sk_bitmap_is_null")
	__imp_sk_bitmap_is_immutable = GengoLibrary.ImportNow("sk_bitmap_is_immutable")
	__imp_sk_bitmap_set_immutable = GengoLibrary.ImportNow("sk_bitmap_set_immutable")
	__imp_sk_bitmap_erase = GengoLibrary.ImportNow("sk_bitmap_erase")
	__imp_sk_bitmap_erase_rect = GengoLibrary.ImportNow("sk_bitmap_erase_rect")
	__imp_sk_bitmap_get_addr_8 = GengoLibrary.ImportNow("sk_bitmap_get_addr_8")
	__imp_sk_bitmap_get_addr_16 = GengoLibrary.ImportNow("sk_bitmap_get_addr_16")
	__imp_sk_bitmap_get_addr_32 = GengoLibrary.ImportNow("sk_bitmap_get_addr_32")
	__imp_sk_bitmap_get_addr = GengoLibrary.ImportNow("sk_bitmap_get_addr")
	__imp_sk_bitmap_get_pixel_color = GengoLibrary.ImportNow("sk_bitmap_get_pixel_color")
	__imp_sk_bitmap_ready_to_draw = GengoLibrary.ImportNow("sk_bitmap_ready_to_draw")
	__imp_sk_bitmap_get_pixel_colors = GengoLibrary.ImportNow("sk_bitmap_get_pixel_colors")
	__imp_sk_bitmap_install_pixels = GengoLibrary.ImportNow("sk_bitmap_install_pixels")
	__imp_sk_bitmap_install_pixels_with_pixmap = GengoLibrary.ImportNow("sk_bitmap_install_pixels_with_pixmap")
	__imp_sk_bitmap_try_alloc_pixels = GengoLibrary.ImportNow("sk_bitmap_try_alloc_pixels")
	__imp_sk_bitmap_try_alloc_pixels_with_flags = GengoLibrary.ImportNow("sk_bitmap_try_alloc_pixels_with_flags")
	__imp_sk_bitmap_set_pixels = GengoLibrary.ImportNow("sk_bitmap_set_pixels")
	__imp_sk_bitmap_peek_pixels = GengoLibrary.ImportNow("sk_bitmap_peek_pixels")
	__imp_sk_bitmap_extract_subset = GengoLibrary.ImportNow("sk_bitmap_extract_subset")
	__imp_sk_bitmap_extract_alpha = GengoLibrary.ImportNow("sk_bitmap_extract_alpha")
	__imp_sk_bitmap_notify_pixels_changed = GengoLibrary.ImportNow("sk_bitmap_notify_pixels_changed")
	__imp_sk_bitmap_swap = GengoLibrary.ImportNow("sk_bitmap_swap")
	__imp_sk_bitmap_make_shader = GengoLibrary.ImportNow("sk_bitmap_make_shader")
	__imp_sk_blender_ref = GengoLibrary.ImportNow("sk_blender_ref")
	__imp_sk_blender_unref = GengoLibrary.ImportNow("sk_blender_unref")
	__imp_sk_blender_new_mode = GengoLibrary.ImportNow("sk_blender_new_mode")
	__imp_sk_blender_new_arithmetic = GengoLibrary.ImportNow("sk_blender_new_arithmetic")
	__imp_sk_canvas_destroy = GengoLibrary.ImportNow("sk_canvas_destroy")
	__imp_sk_canvas_clear = GengoLibrary.ImportNow("sk_canvas_clear")
	__imp_sk_canvas_clear_color4f = GengoLibrary.ImportNow("sk_canvas_clear_color4f")
	__imp_sk_canvas_discard = GengoLibrary.ImportNow("sk_canvas_discard")
	__imp_sk_canvas_get_save_count = GengoLibrary.ImportNow("sk_canvas_get_save_count")
	__imp_sk_canvas_restore_to_count = GengoLibrary.ImportNow("sk_canvas_restore_to_count")
	__imp_sk_canvas_draw_color = GengoLibrary.ImportNow("sk_canvas_draw_color")
	__imp_sk_canvas_draw_color4f = GengoLibrary.ImportNow("sk_canvas_draw_color4f")
	__imp_sk_canvas_draw_points = GengoLibrary.ImportNow("sk_canvas_draw_points")
	__imp_sk_canvas_draw_point = GengoLibrary.ImportNow("sk_canvas_draw_point")
	__imp_sk_canvas_draw_line = GengoLibrary.ImportNow("sk_canvas_draw_line")
	__imp_sk_canvas_draw_simple_text = GengoLibrary.ImportNow("sk_canvas_draw_simple_text")
	__imp_sk_canvas_draw_text_blob = GengoLibrary.ImportNow("sk_canvas_draw_text_blob")
	__imp_sk_canvas_reset_matrix = GengoLibrary.ImportNow("sk_canvas_reset_matrix")
	__imp_sk_canvas_set_matrix = GengoLibrary.ImportNow("sk_canvas_set_matrix")
	__imp_sk_canvas_get_matrix = GengoLibrary.ImportNow("sk_canvas_get_matrix")
	__imp_sk_canvas_draw_round_rect = GengoLibrary.ImportNow("sk_canvas_draw_round_rect")
	__imp_sk_canvas_clip_rect_with_operation = GengoLibrary.ImportNow("sk_canvas_clip_rect_with_operation")
	__imp_sk_canvas_clip_path_with_operation = GengoLibrary.ImportNow("sk_canvas_clip_path_with_operation")
	__imp_sk_canvas_clip_rrect_with_operation = GengoLibrary.ImportNow("sk_canvas_clip_rrect_with_operation")
	__imp_sk_canvas_get_local_clip_bounds = GengoLibrary.ImportNow("sk_canvas_get_local_clip_bounds")
	__imp_sk_canvas_get_device_clip_bounds = GengoLibrary.ImportNow("sk_canvas_get_device_clip_bounds")
	__imp_sk_canvas_save = GengoLibrary.ImportNow("sk_canvas_save")
	__imp_sk_canvas_save_layer = GengoLibrary.ImportNow("sk_canvas_save_layer")
	__imp_sk_canvas_restore = GengoLibrary.ImportNow("sk_canvas_restore")
	__imp_sk_canvas_translate = GengoLibrary.ImportNow("sk_canvas_translate")
	__imp_sk_canvas_scale = GengoLibrary.ImportNow("sk_canvas_scale")
	__imp_sk_canvas_rotate_degrees = GengoLibrary.ImportNow("sk_canvas_rotate_degrees")
	__imp_sk_canvas_rotate_radians = GengoLibrary.ImportNow("sk_canvas_rotate_radians")
	__imp_sk_canvas_skew = GengoLibrary.ImportNow("sk_canvas_skew")
	__imp_sk_canvas_concat = GengoLibrary.ImportNow("sk_canvas_concat")
	__imp_sk_canvas_quick_reject = GengoLibrary.ImportNow("sk_canvas_quick_reject")
	__imp_sk_canvas_clip_region = GengoLibrary.ImportNow("sk_canvas_clip_region")
	__imp_sk_canvas_draw_paint = GengoLibrary.ImportNow("sk_canvas_draw_paint")
	__imp_sk_canvas_draw_region = GengoLibrary.ImportNow("sk_canvas_draw_region")
	__imp_sk_canvas_draw_rect = GengoLibrary.ImportNow("sk_canvas_draw_rect")
	__imp_sk_canvas_draw_rrect = GengoLibrary.ImportNow("sk_canvas_draw_rrect")
	__imp_sk_canvas_draw_circle = GengoLibrary.ImportNow("sk_canvas_draw_circle")
	__imp_sk_canvas_draw_oval = GengoLibrary.ImportNow("sk_canvas_draw_oval")
	__imp_sk_canvas_draw_path = GengoLibrary.ImportNow("sk_canvas_draw_path")
	__imp_sk_canvas_draw_image = GengoLibrary.ImportNow("sk_canvas_draw_image")
	__imp_sk_canvas_draw_image_rect = GengoLibrary.ImportNow("sk_canvas_draw_image_rect")
	__imp_sk_canvas_draw_picture = GengoLibrary.ImportNow("sk_canvas_draw_picture")
	__imp_sk_canvas_draw_drawable = GengoLibrary.ImportNow("sk_canvas_draw_drawable")
	__imp_sk_canvas_flush = GengoLibrary.ImportNow("sk_canvas_flush")
	__imp_sk_canvas_new_from_bitmap = GengoLibrary.ImportNow("sk_canvas_new_from_bitmap")
	__imp_sk_canvas_new_from_raster = GengoLibrary.ImportNow("sk_canvas_new_from_raster")
	__imp_sk_canvas_draw_annotation = GengoLibrary.ImportNow("sk_canvas_draw_annotation")
	__imp_sk_canvas_draw_url_annotation = GengoLibrary.ImportNow("sk_canvas_draw_url_annotation")
	__imp_sk_canvas_draw_named_destination_annotation = GengoLibrary.ImportNow("sk_canvas_draw_named_destination_annotation")
	__imp_sk_canvas_draw_link_destination_annotation = GengoLibrary.ImportNow("sk_canvas_draw_link_destination_annotation")
	__imp_sk_canvas_draw_image_lattice = GengoLibrary.ImportNow("sk_canvas_draw_image_lattice")
	__imp_sk_canvas_draw_image_nine = GengoLibrary.ImportNow("sk_canvas_draw_image_nine")
	__imp_sk_canvas_draw_vertices = GengoLibrary.ImportNow("sk_canvas_draw_vertices")
	__imp_sk_canvas_draw_arc = GengoLibrary.ImportNow("sk_canvas_draw_arc")
	__imp_sk_canvas_draw_drrect = GengoLibrary.ImportNow("sk_canvas_draw_drrect")
	__imp_sk_canvas_draw_atlas = GengoLibrary.ImportNow("sk_canvas_draw_atlas")
	__imp_sk_canvas_draw_patch = GengoLibrary.ImportNow("sk_canvas_draw_patch")
	__imp_sk_canvas_is_clip_empty = GengoLibrary.ImportNow("sk_canvas_is_clip_empty")
	__imp_sk_canvas_is_clip_rect = GengoLibrary.ImportNow("sk_canvas_is_clip_rect")
	__imp_sk_nodraw_canvas_new = GengoLibrary.ImportNow("sk_nodraw_canvas_new")
	__imp_sk_nodraw_canvas_destroy = GengoLibrary.ImportNow("sk_nodraw_canvas_destroy")
	__imp_sk_nway_canvas_new = GengoLibrary.ImportNow("sk_nway_canvas_new")
	__imp_sk_nway_canvas_destroy = GengoLibrary.ImportNow("sk_nway_canvas_destroy")
	__imp_sk_nway_canvas_add_canvas = GengoLibrary.ImportNow("sk_nway_canvas_add_canvas")
	__imp_sk_nway_canvas_remove_canvas = GengoLibrary.ImportNow("sk_nway_canvas_remove_canvas")
	__imp_sk_nway_canvas_remove_all = GengoLibrary.ImportNow("sk_nway_canvas_remove_all")
	__imp_sk_overdraw_canvas_new = GengoLibrary.ImportNow("sk_overdraw_canvas_new")
	__imp_sk_overdraw_canvas_destroy = GengoLibrary.ImportNow("sk_overdraw_canvas_destroy")
	__imp_sk_codec_min_buffered_bytes_needed = GengoLibrary.ImportNow("sk_codec_min_buffered_bytes_needed")
	__imp_sk_codec_new_from_stream = GengoLibrary.ImportNow("sk_codec_new_from_stream")
	__imp_sk_codec_new_from_data = GengoLibrary.ImportNow("sk_codec_new_from_data")
	__imp_sk_codec_destroy = GengoLibrary.ImportNow("sk_codec_destroy")
	__imp_sk_codec_get_info = GengoLibrary.ImportNow("sk_codec_get_info")
	__imp_sk_codec_get_origin = GengoLibrary.ImportNow("sk_codec_get_origin")
	__imp_sk_codec_get_scaled_dimensions = GengoLibrary.ImportNow("sk_codec_get_scaled_dimensions")
	__imp_sk_codec_get_valid_subset = GengoLibrary.ImportNow("sk_codec_get_valid_subset")
	__imp_sk_codec_get_encoded_format = GengoLibrary.ImportNow("sk_codec_get_encoded_format")
	__imp_sk_codec_get_pixels = GengoLibrary.ImportNow("sk_codec_get_pixels")
	__imp_sk_codec_start_incremental_decode = GengoLibrary.ImportNow("sk_codec_start_incremental_decode")
	__imp_sk_codec_incremental_decode = GengoLibrary.ImportNow("sk_codec_incremental_decode")
	__imp_sk_codec_start_scanline_decode = GengoLibrary.ImportNow("sk_codec_start_scanline_decode")
	__imp_sk_codec_get_scanlines = GengoLibrary.ImportNow("sk_codec_get_scanlines")
	__imp_sk_codec_skip_scanlines = GengoLibrary.ImportNow("sk_codec_skip_scanlines")
	__imp_sk_codec_get_scanline_order = GengoLibrary.ImportNow("sk_codec_get_scanline_order")
	__imp_sk_codec_next_scanline = GengoLibrary.ImportNow("sk_codec_next_scanline")
	__imp_sk_codec_output_scanline = GengoLibrary.ImportNow("sk_codec_output_scanline")
	__imp_sk_codec_get_frame_count = GengoLibrary.ImportNow("sk_codec_get_frame_count")
	__imp_sk_codec_get_frame_info = GengoLibrary.ImportNow("sk_codec_get_frame_info")
	__imp_sk_codec_get_frame_info_for_index = GengoLibrary.ImportNow("sk_codec_get_frame_info_for_index")
	__imp_sk_codec_get_repetition_count = GengoLibrary.ImportNow("sk_codec_get_repetition_count")
	__imp_sk_colorfilter_unref = GengoLibrary.ImportNow("sk_colorfilter_unref")
	__imp_sk_colorfilter_new_mode = GengoLibrary.ImportNow("sk_colorfilter_new_mode")
	__imp_sk_colorfilter_new_lighting = GengoLibrary.ImportNow("sk_colorfilter_new_lighting")
	__imp_sk_colorfilter_new_compose = GengoLibrary.ImportNow("sk_colorfilter_new_compose")
	__imp_sk_colorfilter_new_color_matrix = GengoLibrary.ImportNow("sk_colorfilter_new_color_matrix")
	__imp_sk_colorfilter_new_luma_color = GengoLibrary.ImportNow("sk_colorfilter_new_luma_color")
	__imp_sk_colorfilter_new_high_contrast = GengoLibrary.ImportNow("sk_colorfilter_new_high_contrast")
	__imp_sk_colorfilter_new_table = GengoLibrary.ImportNow("sk_colorfilter_new_table")
	__imp_sk_colorfilter_new_table_argb = GengoLibrary.ImportNow("sk_colorfilter_new_table_argb")
	__imp_sk_colorspace_ref = GengoLibrary.ImportNow("sk_colorspace_ref")
	__imp_sk_colorspace_unref = GengoLibrary.ImportNow("sk_colorspace_unref")
	__imp_sk_colorspace_new_srgb = GengoLibrary.ImportNow("sk_colorspace_new_srgb")
	__imp_sk_colorspace_new_srgb_linear = GengoLibrary.ImportNow("sk_colorspace_new_srgb_linear")
	__imp_sk_colorspace_new_rgb = GengoLibrary.ImportNow("sk_colorspace_new_rgb")
	__imp_sk_colorspace_new_icc = GengoLibrary.ImportNow("sk_colorspace_new_icc")
	__imp_sk_colorspace_to_profile = GengoLibrary.ImportNow("sk_colorspace_to_profile")
	__imp_sk_colorspace_gamma_close_to_srgb = GengoLibrary.ImportNow("sk_colorspace_gamma_close_to_srgb")
	__imp_sk_colorspace_gamma_is_linear = GengoLibrary.ImportNow("sk_colorspace_gamma_is_linear")
	__imp_sk_colorspace_is_numerical_transfer_fn = GengoLibrary.ImportNow("sk_colorspace_is_numerical_transfer_fn")
	__imp_sk_colorspace_to_xyzd50 = GengoLibrary.ImportNow("sk_colorspace_to_xyzd50")
	__imp_sk_colorspace_make_linear_gamma = GengoLibrary.ImportNow("sk_colorspace_make_linear_gamma")
	__imp_sk_colorspace_make_srgb_gamma = GengoLibrary.ImportNow("sk_colorspace_make_srgb_gamma")
	__imp_sk_colorspace_is_srgb = GengoLibrary.ImportNow("sk_colorspace_is_srgb")
	__imp_sk_colorspace_equals = GengoLibrary.ImportNow("sk_colorspace_equals")
	__imp_sk_colorspace_transfer_fn_named_srgb = GengoLibrary.ImportNow("sk_colorspace_transfer_fn_named_srgb")
	__imp_sk_colorspace_transfer_fn_named_2dot2 = GengoLibrary.ImportNow("sk_colorspace_transfer_fn_named_2dot2")
	__imp_sk_colorspace_transfer_fn_named_linear = GengoLibrary.ImportNow("sk_colorspace_transfer_fn_named_linear")
	__imp_sk_colorspace_transfer_fn_named_rec2020 = GengoLibrary.ImportNow("sk_colorspace_transfer_fn_named_rec2020")
	__imp_sk_colorspace_transfer_fn_named_pq = GengoLibrary.ImportNow("sk_colorspace_transfer_fn_named_pq")
	__imp_sk_colorspace_transfer_fn_named_hlg = GengoLibrary.ImportNow("sk_colorspace_transfer_fn_named_hlg")
	__imp_sk_colorspace_transfer_fn_eval = GengoLibrary.ImportNow("sk_colorspace_transfer_fn_eval")
	__imp_sk_colorspace_transfer_fn_invert = GengoLibrary.ImportNow("sk_colorspace_transfer_fn_invert")
	__imp_sk_colorspace_primaries_to_xyzd50 = GengoLibrary.ImportNow("sk_colorspace_primaries_to_xyzd50")
	__imp_sk_colorspace_xyz_named_srgb = GengoLibrary.ImportNow("sk_colorspace_xyz_named_srgb")
	__imp_sk_colorspace_xyz_named_adobe_rgb = GengoLibrary.ImportNow("sk_colorspace_xyz_named_adobe_rgb")
	__imp_sk_colorspace_xyz_named_display_p3 = GengoLibrary.ImportNow("sk_colorspace_xyz_named_display_p3")
	__imp_sk_colorspace_xyz_named_rec2020 = GengoLibrary.ImportNow("sk_colorspace_xyz_named_rec2020")
	__imp_sk_colorspace_xyz_named_xyz = GengoLibrary.ImportNow("sk_colorspace_xyz_named_xyz")
	__imp_sk_colorspace_xyz_invert = GengoLibrary.ImportNow("sk_colorspace_xyz_invert")
	__imp_sk_colorspace_xyz_concat = GengoLibrary.ImportNow("sk_colorspace_xyz_concat")
	__imp_sk_colorspace_icc_profile_delete = GengoLibrary.ImportNow("sk_colorspace_icc_profile_delete")
	__imp_sk_colorspace_icc_profile_new = GengoLibrary.ImportNow("sk_colorspace_icc_profile_new")
	__imp_sk_colorspace_icc_profile_parse = GengoLibrary.ImportNow("sk_colorspace_icc_profile_parse")
	__imp_sk_colorspace_icc_profile_get_buffer = GengoLibrary.ImportNow("sk_colorspace_icc_profile_get_buffer")
	__imp_sk_colorspace_icc_profile_get_to_xyzd50 = GengoLibrary.ImportNow("sk_colorspace_icc_profile_get_to_xyzd50")
	__imp_sk_color4f_to_color = GengoLibrary.ImportNow("sk_color4f_to_color")
	__imp_sk_color4f_from_color = GengoLibrary.ImportNow("sk_color4f_from_color")
	__imp_sk_data_new_empty = GengoLibrary.ImportNow("sk_data_new_empty")
	__imp_sk_data_new_with_copy = GengoLibrary.ImportNow("sk_data_new_with_copy")
	__imp_sk_data_new_subset = GengoLibrary.ImportNow("sk_data_new_subset")
	__imp_sk_data_ref = GengoLibrary.ImportNow("sk_data_ref")
	__imp_sk_data_unref = GengoLibrary.ImportNow("sk_data_unref")
	__imp_sk_data_get_size = GengoLibrary.ImportNow("sk_data_get_size")
	__imp_sk_data_get_data = GengoLibrary.ImportNow("sk_data_get_data")
	__imp_sk_data_new_from_file = GengoLibrary.ImportNow("sk_data_new_from_file")
	__imp_sk_data_new_from_stream = GengoLibrary.ImportNow("sk_data_new_from_stream")
	__imp_sk_data_get_bytes = GengoLibrary.ImportNow("sk_data_get_bytes")
	__imp_sk_data_new_with_proc = GengoLibrary.ImportNow("sk_data_new_with_proc")
	__imp_sk_data_new_uninitialized = GengoLibrary.ImportNow("sk_data_new_uninitialized")
	__imp_sk_document_unref = GengoLibrary.ImportNow("sk_document_unref")
	__imp_sk_document_create_pdf_from_stream = GengoLibrary.ImportNow("sk_document_create_pdf_from_stream")
	__imp_sk_document_create_pdf_from_stream_with_metadata = GengoLibrary.ImportNow("sk_document_create_pdf_from_stream_with_metadata")
	__imp_sk_document_create_xps_from_stream = GengoLibrary.ImportNow("sk_document_create_xps_from_stream")
	__imp_sk_document_begin_page = GengoLibrary.ImportNow("sk_document_begin_page")
	__imp_sk_document_end_page = GengoLibrary.ImportNow("sk_document_end_page")
	__imp_sk_document_close = GengoLibrary.ImportNow("sk_document_close")
	__imp_sk_document_abort = GengoLibrary.ImportNow("sk_document_abort")
	__imp_sk_drawable_unref = GengoLibrary.ImportNow("sk_drawable_unref")
	__imp_sk_drawable_get_generation_id = GengoLibrary.ImportNow("sk_drawable_get_generation_id")
	__imp_sk_drawable_get_bounds = GengoLibrary.ImportNow("sk_drawable_get_bounds")
	__imp_sk_drawable_draw = GengoLibrary.ImportNow("sk_drawable_draw")
	__imp_sk_drawable_new_picture_snapshot = GengoLibrary.ImportNow("sk_drawable_new_picture_snapshot")
	__imp_sk_drawable_notify_drawing_changed = GengoLibrary.ImportNow("sk_drawable_notify_drawing_changed")
	__imp_sk_drawable_approximate_bytes_used = GengoLibrary.ImportNow("sk_drawable_approximate_bytes_used")
	__imp_sk_font_new = GengoLibrary.ImportNow("sk_font_new")
	__imp_sk_font_new_with_values = GengoLibrary.ImportNow("sk_font_new_with_values")
	__imp_sk_font_delete = GengoLibrary.ImportNow("sk_font_delete")
	__imp_sk_font_is_force_auto_hinting = GengoLibrary.ImportNow("sk_font_is_force_auto_hinting")
	__imp_sk_font_set_force_auto_hinting = GengoLibrary.ImportNow("sk_font_set_force_auto_hinting")
	__imp_sk_font_is_embedded_bitmaps = GengoLibrary.ImportNow("sk_font_is_embedded_bitmaps")
	__imp_sk_font_set_embedded_bitmaps = GengoLibrary.ImportNow("sk_font_set_embedded_bitmaps")
	__imp_sk_font_is_subpixel = GengoLibrary.ImportNow("sk_font_is_subpixel")
	__imp_sk_font_set_subpixel = GengoLibrary.ImportNow("sk_font_set_subpixel")
	__imp_sk_font_is_linear_metrics = GengoLibrary.ImportNow("sk_font_is_linear_metrics")
	__imp_sk_font_set_linear_metrics = GengoLibrary.ImportNow("sk_font_set_linear_metrics")
	__imp_sk_font_is_embolden = GengoLibrary.ImportNow("sk_font_is_embolden")
	__imp_sk_font_set_embolden = GengoLibrary.ImportNow("sk_font_set_embolden")
	__imp_sk_font_is_baseline_snap = GengoLibrary.ImportNow("sk_font_is_baseline_snap")
	__imp_sk_font_set_baseline_snap = GengoLibrary.ImportNow("sk_font_set_baseline_snap")
	__imp_sk_font_get_edging = GengoLibrary.ImportNow("sk_font_get_edging")
	__imp_sk_font_set_edging = GengoLibrary.ImportNow("sk_font_set_edging")
	__imp_sk_font_get_hinting = GengoLibrary.ImportNow("sk_font_get_hinting")
	__imp_sk_font_set_hinting = GengoLibrary.ImportNow("sk_font_set_hinting")
	__imp_sk_font_get_typeface = GengoLibrary.ImportNow("sk_font_get_typeface")
	__imp_sk_font_set_typeface = GengoLibrary.ImportNow("sk_font_set_typeface")
	__imp_sk_font_get_size = GengoLibrary.ImportNow("sk_font_get_size")
	__imp_sk_font_set_size = GengoLibrary.ImportNow("sk_font_set_size")
	__imp_sk_font_get_scale_x = GengoLibrary.ImportNow("sk_font_get_scale_x")
	__imp_sk_font_set_scale_x = GengoLibrary.ImportNow("sk_font_set_scale_x")
	__imp_sk_font_get_skew_x = GengoLibrary.ImportNow("sk_font_get_skew_x")
	__imp_sk_font_set_skew_x = GengoLibrary.ImportNow("sk_font_set_skew_x")
	__imp_sk_font_text_to_glyphs = GengoLibrary.ImportNow("sk_font_text_to_glyphs")
	__imp_sk_font_unichar_to_glyph = GengoLibrary.ImportNow("sk_font_unichar_to_glyph")
	__imp_sk_font_unichars_to_glyphs = GengoLibrary.ImportNow("sk_font_unichars_to_glyphs")
	__imp_sk_font_measure_text = GengoLibrary.ImportNow("sk_font_measure_text")
	__imp_sk_font_measure_text_no_return = GengoLibrary.ImportNow("sk_font_measure_text_no_return")
	__imp_sk_font_break_text = GengoLibrary.ImportNow("sk_font_break_text")
	__imp_sk_font_get_widths_bounds = GengoLibrary.ImportNow("sk_font_get_widths_bounds")
	__imp_sk_font_get_pos = GengoLibrary.ImportNow("sk_font_get_pos")
	__imp_sk_font_get_xpos = GengoLibrary.ImportNow("sk_font_get_xpos")
	__imp_sk_font_get_path = GengoLibrary.ImportNow("sk_font_get_path")
	__imp_sk_font_get_paths = GengoLibrary.ImportNow("sk_font_get_paths")
	__imp_sk_font_get_metrics = GengoLibrary.ImportNow("sk_font_get_metrics")
	__imp_sk_text_utils_get_path = GengoLibrary.ImportNow("sk_text_utils_get_path")
	__imp_sk_text_utils_get_pos_path = GengoLibrary.ImportNow("sk_text_utils_get_pos_path")
	__imp_sk_refcnt_unique = GengoLibrary.ImportNow("sk_refcnt_unique")
	__imp_sk_refcnt_get_ref_count = GengoLibrary.ImportNow("sk_refcnt_get_ref_count")
	__imp_sk_refcnt_safe_ref = GengoLibrary.ImportNow("sk_refcnt_safe_ref")
	__imp_sk_refcnt_safe_unref = GengoLibrary.ImportNow("sk_refcnt_safe_unref")
	__imp_sk_nvrefcnt_unique = GengoLibrary.ImportNow("sk_nvrefcnt_unique")
	__imp_sk_nvrefcnt_get_ref_count = GengoLibrary.ImportNow("sk_nvrefcnt_get_ref_count")
	__imp_sk_nvrefcnt_safe_ref = GengoLibrary.ImportNow("sk_nvrefcnt_safe_ref")
	__imp_sk_nvrefcnt_safe_unref = GengoLibrary.ImportNow("sk_nvrefcnt_safe_unref")
	__imp_sk_colortype_get_default_8888 = GengoLibrary.ImportNow("sk_colortype_get_default_8888")
	__imp_sk_version_get_milestone = GengoLibrary.ImportNow("sk_version_get_milestone")
	__imp_sk_version_get_increment = GengoLibrary.ImportNow("sk_version_get_increment")
	__imp_sk_version_get_string = GengoLibrary.ImportNow("sk_version_get_string")
	__imp_sk_graphics_init = GengoLibrary.ImportNow("sk_graphics_init")
	__imp_sk_graphics_purge_font_cache = GengoLibrary.ImportNow("sk_graphics_purge_font_cache")
	__imp_sk_graphics_purge_resource_cache = GengoLibrary.ImportNow("sk_graphics_purge_resource_cache")
	__imp_sk_graphics_purge_all_caches = GengoLibrary.ImportNow("sk_graphics_purge_all_caches")
	__imp_sk_graphics_get_font_cache_used = GengoLibrary.ImportNow("sk_graphics_get_font_cache_used")
	__imp_sk_graphics_get_font_cache_limit = GengoLibrary.ImportNow("sk_graphics_get_font_cache_limit")
	__imp_sk_graphics_set_font_cache_limit = GengoLibrary.ImportNow("sk_graphics_set_font_cache_limit")
	__imp_sk_graphics_get_font_cache_count_used = GengoLibrary.ImportNow("sk_graphics_get_font_cache_count_used")
	__imp_sk_graphics_get_font_cache_count_limit = GengoLibrary.ImportNow("sk_graphics_get_font_cache_count_limit")
	__imp_sk_graphics_set_font_cache_count_limit = GengoLibrary.ImportNow("sk_graphics_set_font_cache_count_limit")
	__imp_sk_graphics_get_resource_cache_total_bytes_used = GengoLibrary.ImportNow("sk_graphics_get_resource_cache_total_bytes_used")
	__imp_sk_graphics_get_resource_cache_total_byte_limit = GengoLibrary.ImportNow("sk_graphics_get_resource_cache_total_byte_limit")
	__imp_sk_graphics_set_resource_cache_total_byte_limit = GengoLibrary.ImportNow("sk_graphics_set_resource_cache_total_byte_limit")
	__imp_sk_graphics_get_resource_cache_single_allocation_byte_limit = GengoLibrary.ImportNow("sk_graphics_get_resource_cache_single_allocation_byte_limit")
	__imp_sk_graphics_set_resource_cache_single_allocation_byte_limit = GengoLibrary.ImportNow("sk_graphics_set_resource_cache_single_allocation_byte_limit")
	__imp_sk_graphics_dump_memory_statistics = GengoLibrary.ImportNow("sk_graphics_dump_memory_statistics")
	__imp_sk_image_ref = GengoLibrary.ImportNow("sk_image_ref")
	__imp_sk_image_unref = GengoLibrary.ImportNow("sk_image_unref")
	__imp_sk_image_new_raster_copy = GengoLibrary.ImportNow("sk_image_new_raster_copy")
	__imp_sk_image_new_raster_copy_with_pixmap = GengoLibrary.ImportNow("sk_image_new_raster_copy_with_pixmap")
	__imp_sk_image_new_raster_data = GengoLibrary.ImportNow("sk_image_new_raster_data")
	__imp_sk_image_new_raster = GengoLibrary.ImportNow("sk_image_new_raster")
	__imp_sk_image_new_from_bitmap = GengoLibrary.ImportNow("sk_image_new_from_bitmap")
	__imp_sk_image_new_from_encoded = GengoLibrary.ImportNow("sk_image_new_from_encoded")
	__imp_sk_image_new_from_texture = GengoLibrary.ImportNow("sk_image_new_from_texture")
	__imp_sk_image_new_from_adopted_texture = GengoLibrary.ImportNow("sk_image_new_from_adopted_texture")
	__imp_sk_image_new_from_picture = GengoLibrary.ImportNow("sk_image_new_from_picture")
	__imp_sk_image_get_width = GengoLibrary.ImportNow("sk_image_get_width")
	__imp_sk_image_get_height = GengoLibrary.ImportNow("sk_image_get_height")
	__imp_sk_image_get_unique_id = GengoLibrary.ImportNow("sk_image_get_unique_id")
	__imp_sk_image_get_alpha_type = GengoLibrary.ImportNow("sk_image_get_alpha_type")
	__imp_sk_image_get_color_type = GengoLibrary.ImportNow("sk_image_get_color_type")
	__imp_sk_image_get_colorspace = GengoLibrary.ImportNow("sk_image_get_colorspace")
	__imp_sk_image_is_alpha_only = GengoLibrary.ImportNow("sk_image_is_alpha_only")
	__imp_sk_image_make_shader = GengoLibrary.ImportNow("sk_image_make_shader")
	__imp_sk_image_make_raw_shader = GengoLibrary.ImportNow("sk_image_make_raw_shader")
	__imp_sk_image_peek_pixels = GengoLibrary.ImportNow("sk_image_peek_pixels")
	__imp_sk_image_is_texture_backed = GengoLibrary.ImportNow("sk_image_is_texture_backed")
	__imp_sk_image_is_lazy_generated = GengoLibrary.ImportNow("sk_image_is_lazy_generated")
	__imp_sk_image_is_valid = GengoLibrary.ImportNow("sk_image_is_valid")
	__imp_sk_image_read_pixels = GengoLibrary.ImportNow("sk_image_read_pixels")
	__imp_sk_image_read_pixels_into_pixmap = GengoLibrary.ImportNow("sk_image_read_pixels_into_pixmap")
	__imp_sk_image_scale_pixels = GengoLibrary.ImportNow("sk_image_scale_pixels")
	__imp_sk_image_ref_encoded = GengoLibrary.ImportNow("sk_image_ref_encoded")
	__imp_sk_image_make_subset_raster = GengoLibrary.ImportNow("sk_image_make_subset_raster")
	__imp_sk_image_make_subset = GengoLibrary.ImportNow("sk_image_make_subset")
	__imp_sk_image_make_texture_image = GengoLibrary.ImportNow("sk_image_make_texture_image")
	__imp_sk_image_make_non_texture_image = GengoLibrary.ImportNow("sk_image_make_non_texture_image")
	__imp_sk_image_make_raster_image = GengoLibrary.ImportNow("sk_image_make_raster_image")
	__imp_sk_image_make_with_filter_raster = GengoLibrary.ImportNow("sk_image_make_with_filter_raster")
	__imp_sk_image_make_with_filter = GengoLibrary.ImportNow("sk_image_make_with_filter")
	__imp_sk_imagefilter_unref = GengoLibrary.ImportNow("sk_imagefilter_unref")
	__imp_sk_imagefilter_new_arithmetic = GengoLibrary.ImportNow("sk_imagefilter_new_arithmetic")
	__imp_sk_imagefilter_new_blend = GengoLibrary.ImportNow("sk_imagefilter_new_blend")
	__imp_sk_imagefilter_new_blender = GengoLibrary.ImportNow("sk_imagefilter_new_blender")
	__imp_sk_imagefilter_new_blur = GengoLibrary.ImportNow("sk_imagefilter_new_blur")
	__imp_sk_imagefilter_new_color_filter = GengoLibrary.ImportNow("sk_imagefilter_new_color_filter")
	__imp_sk_imagefilter_new_compose = GengoLibrary.ImportNow("sk_imagefilter_new_compose")
	__imp_sk_imagefilter_new_displacement_map_effect = GengoLibrary.ImportNow("sk_imagefilter_new_displacement_map_effect")
	__imp_sk_imagefilter_new_drop_shadow = GengoLibrary.ImportNow("sk_imagefilter_new_drop_shadow")
	__imp_sk_imagefilter_new_drop_shadow_only = GengoLibrary.ImportNow("sk_imagefilter_new_drop_shadow_only")
	__imp_sk_imagefilter_new_image = GengoLibrary.ImportNow("sk_imagefilter_new_image")
	__imp_sk_imagefilter_new_image_simple = GengoLibrary.ImportNow("sk_imagefilter_new_image_simple")
	__imp_sk_imagefilter_new_magnifier = GengoLibrary.ImportNow("sk_imagefilter_new_magnifier")
	__imp_sk_imagefilter_new_matrix_convolution = GengoLibrary.ImportNow("sk_imagefilter_new_matrix_convolution")
	__imp_sk_imagefilter_new_matrix_transform = GengoLibrary.ImportNow("sk_imagefilter_new_matrix_transform")
	__imp_sk_imagefilter_new_merge = GengoLibrary.ImportNow("sk_imagefilter_new_merge")
	__imp_sk_imagefilter_new_merge_simple = GengoLibrary.ImportNow("sk_imagefilter_new_merge_simple")
	__imp_sk_imagefilter_new_offset = GengoLibrary.ImportNow("sk_imagefilter_new_offset")
	__imp_sk_imagefilter_new_picture = GengoLibrary.ImportNow("sk_imagefilter_new_picture")
	__imp_sk_imagefilter_new_picture_with_rect = GengoLibrary.ImportNow("sk_imagefilter_new_picture_with_rect")
	__imp_sk_imagefilter_new_shader = GengoLibrary.ImportNow("sk_imagefilter_new_shader")
	__imp_sk_imagefilter_new_tile = GengoLibrary.ImportNow("sk_imagefilter_new_tile")
	__imp_sk_imagefilter_new_dilate = GengoLibrary.ImportNow("sk_imagefilter_new_dilate")
	__imp_sk_imagefilter_new_erode = GengoLibrary.ImportNow("sk_imagefilter_new_erode")
	__imp_sk_imagefilter_new_distant_lit_diffuse = GengoLibrary.ImportNow("sk_imagefilter_new_distant_lit_diffuse")
	__imp_sk_imagefilter_new_point_lit_diffuse = GengoLibrary.ImportNow("sk_imagefilter_new_point_lit_diffuse")
	__imp_sk_imagefilter_new_spot_lit_diffuse = GengoLibrary.ImportNow("sk_imagefilter_new_spot_lit_diffuse")
	__imp_sk_imagefilter_new_distant_lit_specular = GengoLibrary.ImportNow("sk_imagefilter_new_distant_lit_specular")
	__imp_sk_imagefilter_new_point_lit_specular = GengoLibrary.ImportNow("sk_imagefilter_new_point_lit_specular")
	__imp_sk_imagefilter_new_spot_lit_specular = GengoLibrary.ImportNow("sk_imagefilter_new_spot_lit_specular")
	__imp_sk_linker_keep_alive = GengoLibrary.ImportNow("sk_linker_keep_alive")
	__imp_sk_maskfilter_ref = GengoLibrary.ImportNow("sk_maskfilter_ref")
	__imp_sk_maskfilter_unref = GengoLibrary.ImportNow("sk_maskfilter_unref")
	__imp_sk_maskfilter_new_blur = GengoLibrary.ImportNow("sk_maskfilter_new_blur")
	__imp_sk_maskfilter_new_blur_with_flags = GengoLibrary.ImportNow("sk_maskfilter_new_blur_with_flags")
	__imp_sk_maskfilter_new_table = GengoLibrary.ImportNow("sk_maskfilter_new_table")
	__imp_sk_maskfilter_new_gamma = GengoLibrary.ImportNow("sk_maskfilter_new_gamma")
	__imp_sk_maskfilter_new_clip = GengoLibrary.ImportNow("sk_maskfilter_new_clip")
	__imp_sk_maskfilter_new_shader = GengoLibrary.ImportNow("sk_maskfilter_new_shader")
	__imp_sk_matrix_try_invert = GengoLibrary.ImportNow("sk_matrix_try_invert")
	__imp_sk_matrix_concat = GengoLibrary.ImportNow("sk_matrix_concat")
	__imp_sk_matrix_pre_concat = GengoLibrary.ImportNow("sk_matrix_pre_concat")
	__imp_sk_matrix_post_concat = GengoLibrary.ImportNow("sk_matrix_post_concat")
	__imp_sk_matrix_map_rect = GengoLibrary.ImportNow("sk_matrix_map_rect")
	__imp_sk_matrix_map_points = GengoLibrary.ImportNow("sk_matrix_map_points")
	__imp_sk_matrix_map_vectors = GengoLibrary.ImportNow("sk_matrix_map_vectors")
	__imp_sk_matrix_map_xy = GengoLibrary.ImportNow("sk_matrix_map_xy")
	__imp_sk_matrix_map_vector = GengoLibrary.ImportNow("sk_matrix_map_vector")
	__imp_sk_matrix_map_radius = GengoLibrary.ImportNow("sk_matrix_map_radius")
	__imp_sk_paint_new = GengoLibrary.ImportNow("sk_paint_new")
	__imp_sk_paint_clone = GengoLibrary.ImportNow("sk_paint_clone")
	__imp_sk_paint_delete = GengoLibrary.ImportNow("sk_paint_delete")
	__imp_sk_paint_reset = GengoLibrary.ImportNow("sk_paint_reset")
	__imp_sk_paint_is_antialias = GengoLibrary.ImportNow("sk_paint_is_antialias")
	__imp_sk_paint_set_antialias = GengoLibrary.ImportNow("sk_paint_set_antialias")
	__imp_sk_paint_get_color = GengoLibrary.ImportNow("sk_paint_get_color")
	__imp_sk_paint_get_color4f = GengoLibrary.ImportNow("sk_paint_get_color4f")
	__imp_sk_paint_set_color = GengoLibrary.ImportNow("sk_paint_set_color")
	__imp_sk_paint_set_color4f = GengoLibrary.ImportNow("sk_paint_set_color4f")
	__imp_sk_paint_get_style = GengoLibrary.ImportNow("sk_paint_get_style")
	__imp_sk_paint_set_style = GengoLibrary.ImportNow("sk_paint_set_style")
	__imp_sk_paint_get_stroke_width = GengoLibrary.ImportNow("sk_paint_get_stroke_width")
	__imp_sk_paint_set_stroke_width = GengoLibrary.ImportNow("sk_paint_set_stroke_width")
	__imp_sk_paint_get_stroke_miter = GengoLibrary.ImportNow("sk_paint_get_stroke_miter")
	__imp_sk_paint_set_stroke_miter = GengoLibrary.ImportNow("sk_paint_set_stroke_miter")
	__imp_sk_paint_get_stroke_cap = GengoLibrary.ImportNow("sk_paint_get_stroke_cap")
	__imp_sk_paint_set_stroke_cap = GengoLibrary.ImportNow("sk_paint_set_stroke_cap")
	__imp_sk_paint_get_stroke_join = GengoLibrary.ImportNow("sk_paint_get_stroke_join")
	__imp_sk_paint_set_stroke_join = GengoLibrary.ImportNow("sk_paint_set_stroke_join")
	__imp_sk_paint_set_shader = GengoLibrary.ImportNow("sk_paint_set_shader")
	__imp_sk_paint_set_maskfilter = GengoLibrary.ImportNow("sk_paint_set_maskfilter")
	__imp_sk_paint_set_blendmode = GengoLibrary.ImportNow("sk_paint_set_blendmode")
	__imp_sk_paint_set_blender = GengoLibrary.ImportNow("sk_paint_set_blender")
	__imp_sk_paint_is_dither = GengoLibrary.ImportNow("sk_paint_is_dither")
	__imp_sk_paint_set_dither = GengoLibrary.ImportNow("sk_paint_set_dither")
	__imp_sk_paint_get_shader = GengoLibrary.ImportNow("sk_paint_get_shader")
	__imp_sk_paint_get_maskfilter = GengoLibrary.ImportNow("sk_paint_get_maskfilter")
	__imp_sk_paint_set_colorfilter = GengoLibrary.ImportNow("sk_paint_set_colorfilter")
	__imp_sk_paint_get_colorfilter = GengoLibrary.ImportNow("sk_paint_get_colorfilter")
	__imp_sk_paint_set_imagefilter = GengoLibrary.ImportNow("sk_paint_set_imagefilter")
	__imp_sk_paint_get_imagefilter = GengoLibrary.ImportNow("sk_paint_get_imagefilter")
	__imp_sk_paint_get_blendmode = GengoLibrary.ImportNow("sk_paint_get_blendmode")
	__imp_sk_paint_get_blender = GengoLibrary.ImportNow("sk_paint_get_blender")
	__imp_sk_paint_get_path_effect = GengoLibrary.ImportNow("sk_paint_get_path_effect")
	__imp_sk_paint_set_path_effect = GengoLibrary.ImportNow("sk_paint_set_path_effect")
	__imp_sk_paint_get_fill_path = GengoLibrary.ImportNow("sk_paint_get_fill_path")
	__imp_sk_path_new = GengoLibrary.ImportNow("sk_path_new")
	__imp_sk_path_delete = GengoLibrary.ImportNow("sk_path_delete")
	__imp_sk_path_move_to = GengoLibrary.ImportNow("sk_path_move_to")
	__imp_sk_path_line_to = GengoLibrary.ImportNow("sk_path_line_to")
	__imp_sk_path_quad_to = GengoLibrary.ImportNow("sk_path_quad_to")
	__imp_sk_path_conic_to = GengoLibrary.ImportNow("sk_path_conic_to")
	__imp_sk_path_cubic_to = GengoLibrary.ImportNow("sk_path_cubic_to")
	__imp_sk_path_arc_to = GengoLibrary.ImportNow("sk_path_arc_to")
	__imp_sk_path_rarc_to = GengoLibrary.ImportNow("sk_path_rarc_to")
	__imp_sk_path_arc_to_with_oval = GengoLibrary.ImportNow("sk_path_arc_to_with_oval")
	__imp_sk_path_arc_to_with_points = GengoLibrary.ImportNow("sk_path_arc_to_with_points")
	__imp_sk_path_close = GengoLibrary.ImportNow("sk_path_close")
	__imp_sk_path_add_rect = GengoLibrary.ImportNow("sk_path_add_rect")
	__imp_sk_path_add_rrect = GengoLibrary.ImportNow("sk_path_add_rrect")
	__imp_sk_path_add_rrect_start = GengoLibrary.ImportNow("sk_path_add_rrect_start")
	__imp_sk_path_add_rounded_rect = GengoLibrary.ImportNow("sk_path_add_rounded_rect")
	__imp_sk_path_add_oval = GengoLibrary.ImportNow("sk_path_add_oval")
	__imp_sk_path_add_circle = GengoLibrary.ImportNow("sk_path_add_circle")
	__imp_sk_path_get_bounds = GengoLibrary.ImportNow("sk_path_get_bounds")
	__imp_sk_path_compute_tight_bounds = GengoLibrary.ImportNow("sk_path_compute_tight_bounds")
	__imp_sk_path_rmove_to = GengoLibrary.ImportNow("sk_path_rmove_to")
	__imp_sk_path_rline_to = GengoLibrary.ImportNow("sk_path_rline_to")
	__imp_sk_path_rquad_to = GengoLibrary.ImportNow("sk_path_rquad_to")
	__imp_sk_path_rconic_to = GengoLibrary.ImportNow("sk_path_rconic_to")
	__imp_sk_path_rcubic_to = GengoLibrary.ImportNow("sk_path_rcubic_to")
	__imp_sk_path_add_rect_start = GengoLibrary.ImportNow("sk_path_add_rect_start")
	__imp_sk_path_add_arc = GengoLibrary.ImportNow("sk_path_add_arc")
	__imp_sk_path_get_filltype = GengoLibrary.ImportNow("sk_path_get_filltype")
	__imp_sk_path_set_filltype = GengoLibrary.ImportNow("sk_path_set_filltype")
	__imp_sk_path_transform = GengoLibrary.ImportNow("sk_path_transform")
	__imp_sk_path_transform_to_dest = GengoLibrary.ImportNow("sk_path_transform_to_dest")
	__imp_sk_path_clone = GengoLibrary.ImportNow("sk_path_clone")
	__imp_sk_path_add_path_offset = GengoLibrary.ImportNow("sk_path_add_path_offset")
	__imp_sk_path_add_path_matrix = GengoLibrary.ImportNow("sk_path_add_path_matrix")
	__imp_sk_path_add_path = GengoLibrary.ImportNow("sk_path_add_path")
	__imp_sk_path_add_path_reverse = GengoLibrary.ImportNow("sk_path_add_path_reverse")
	__imp_sk_path_reset = GengoLibrary.ImportNow("sk_path_reset")
	__imp_sk_path_rewind = GengoLibrary.ImportNow("sk_path_rewind")
	__imp_sk_path_count_points = GengoLibrary.ImportNow("sk_path_count_points")
	__imp_sk_path_count_verbs = GengoLibrary.ImportNow("sk_path_count_verbs")
	__imp_sk_path_get_point = GengoLibrary.ImportNow("sk_path_get_point")
	__imp_sk_path_get_points = GengoLibrary.ImportNow("sk_path_get_points")
	__imp_sk_path_contains = GengoLibrary.ImportNow("sk_path_contains")
	__imp_sk_path_parse_svg_string = GengoLibrary.ImportNow("sk_path_parse_svg_string")
	__imp_sk_path_to_svg_string = GengoLibrary.ImportNow("sk_path_to_svg_string")
	__imp_sk_path_get_last_point = GengoLibrary.ImportNow("sk_path_get_last_point")
	__imp_sk_path_convert_conic_to_quads = GengoLibrary.ImportNow("sk_path_convert_conic_to_quads")
	__imp_sk_path_add_poly = GengoLibrary.ImportNow("sk_path_add_poly")
	__imp_sk_path_get_segment_masks = GengoLibrary.ImportNow("sk_path_get_segment_masks")
	__imp_sk_path_is_oval = GengoLibrary.ImportNow("sk_path_is_oval")
	__imp_sk_path_is_rrect = GengoLibrary.ImportNow("sk_path_is_rrect")
	__imp_sk_path_is_line = GengoLibrary.ImportNow("sk_path_is_line")
	__imp_sk_path_is_rect = GengoLibrary.ImportNow("sk_path_is_rect")
	__imp_sk_path_is_convex = GengoLibrary.ImportNow("sk_path_is_convex")
	__imp_sk_path_create_iter = GengoLibrary.ImportNow("sk_path_create_iter")
	__imp_sk_path_iter_next = GengoLibrary.ImportNow("sk_path_iter_next")
	__imp_sk_path_iter_conic_weight = GengoLibrary.ImportNow("sk_path_iter_conic_weight")
	__imp_sk_path_iter_is_close_line = GengoLibrary.ImportNow("sk_path_iter_is_close_line")
	__imp_sk_path_iter_is_closed_contour = GengoLibrary.ImportNow("sk_path_iter_is_closed_contour")
	__imp_sk_path_iter_destroy = GengoLibrary.ImportNow("sk_path_iter_destroy")
	__imp_sk_path_create_rawiter = GengoLibrary.ImportNow("sk_path_create_rawiter")
	__imp_sk_path_rawiter_peek = GengoLibrary.ImportNow("sk_path_rawiter_peek")
	__imp_sk_path_rawiter_next = GengoLibrary.ImportNow("sk_path_rawiter_next")
	__imp_sk_path_rawiter_conic_weight = GengoLibrary.ImportNow("sk_path_rawiter_conic_weight")
	__imp_sk_path_rawiter_destroy = GengoLibrary.ImportNow("sk_path_rawiter_destroy")
	__imp_sk_pathop_op = GengoLibrary.ImportNow("sk_pathop_op")
	__imp_sk_pathop_simplify = GengoLibrary.ImportNow("sk_pathop_simplify")
	__imp_sk_pathop_tight_bounds = GengoLibrary.ImportNow("sk_pathop_tight_bounds")
	__imp_sk_pathop_as_winding = GengoLibrary.ImportNow("sk_pathop_as_winding")
	__imp_sk_opbuilder_new = GengoLibrary.ImportNow("sk_opbuilder_new")
	__imp_sk_opbuilder_destroy = GengoLibrary.ImportNow("sk_opbuilder_destroy")
	__imp_sk_opbuilder_add = GengoLibrary.ImportNow("sk_opbuilder_add")
	__imp_sk_opbuilder_resolve = GengoLibrary.ImportNow("sk_opbuilder_resolve")
	__imp_sk_pathmeasure_new = GengoLibrary.ImportNow("sk_pathmeasure_new")
	__imp_sk_pathmeasure_new_with_path = GengoLibrary.ImportNow("sk_pathmeasure_new_with_path")
	__imp_sk_pathmeasure_destroy = GengoLibrary.ImportNow("sk_pathmeasure_destroy")
	__imp_sk_pathmeasure_set_path = GengoLibrary.ImportNow("sk_pathmeasure_set_path")
	__imp_sk_pathmeasure_get_length = GengoLibrary.ImportNow("sk_pathmeasure_get_length")
	__imp_sk_pathmeasure_get_pos_tan = GengoLibrary.ImportNow("sk_pathmeasure_get_pos_tan")
	__imp_sk_pathmeasure_get_matrix = GengoLibrary.ImportNow("sk_pathmeasure_get_matrix")
	__imp_sk_pathmeasure_get_segment = GengoLibrary.ImportNow("sk_pathmeasure_get_segment")
	__imp_sk_pathmeasure_is_closed = GengoLibrary.ImportNow("sk_pathmeasure_is_closed")
	__imp_sk_pathmeasure_next_contour = GengoLibrary.ImportNow("sk_pathmeasure_next_contour")
	__imp_sk_path_effect_unref = GengoLibrary.ImportNow("sk_path_effect_unref")
	__imp_sk_path_effect_create_compose = GengoLibrary.ImportNow("sk_path_effect_create_compose")
	__imp_sk_path_effect_create_sum = GengoLibrary.ImportNow("sk_path_effect_create_sum")
	__imp_sk_path_effect_create_discrete = GengoLibrary.ImportNow("sk_path_effect_create_discrete")
	__imp_sk_path_effect_create_corner = GengoLibrary.ImportNow("sk_path_effect_create_corner")
	__imp_sk_path_effect_create_1d_path = GengoLibrary.ImportNow("sk_path_effect_create_1d_path")
	__imp_sk_path_effect_create_2d_line = GengoLibrary.ImportNow("sk_path_effect_create_2d_line")
	__imp_sk_path_effect_create_2d_path = GengoLibrary.ImportNow("sk_path_effect_create_2d_path")
	__imp_sk_path_effect_create_dash = GengoLibrary.ImportNow("sk_path_effect_create_dash")
	__imp_sk_path_effect_create_trim = GengoLibrary.ImportNow("sk_path_effect_create_trim")
	__imp_sk_picture_recorder_new = GengoLibrary.ImportNow("sk_picture_recorder_new")
	__imp_sk_picture_recorder_delete = GengoLibrary.ImportNow("sk_picture_recorder_delete")
	__imp_sk_picture_recorder_begin_recording = GengoLibrary.ImportNow("sk_picture_recorder_begin_recording")
	__imp_sk_picture_recorder_begin_recording_with_bbh_factory = GengoLibrary.ImportNow("sk_picture_recorder_begin_recording_with_bbh_factory")
	__imp_sk_picture_recorder_end_recording = GengoLibrary.ImportNow("sk_picture_recorder_end_recording")
	__imp_sk_picture_recorder_end_recording_as_drawable = GengoLibrary.ImportNow("sk_picture_recorder_end_recording_as_drawable")
	__imp_sk_picture_get_recording_canvas = GengoLibrary.ImportNow("sk_picture_get_recording_canvas")
	__imp_sk_picture_ref = GengoLibrary.ImportNow("sk_picture_ref")
	__imp_sk_picture_unref = GengoLibrary.ImportNow("sk_picture_unref")
	__imp_sk_picture_get_unique_id = GengoLibrary.ImportNow("sk_picture_get_unique_id")
	__imp_sk_picture_get_cull_rect = GengoLibrary.ImportNow("sk_picture_get_cull_rect")
	__imp_sk_picture_make_shader = GengoLibrary.ImportNow("sk_picture_make_shader")
	__imp_sk_picture_serialize_to_data = GengoLibrary.ImportNow("sk_picture_serialize_to_data")
	__imp_sk_picture_serialize_to_stream = GengoLibrary.ImportNow("sk_picture_serialize_to_stream")
	__imp_sk_picture_deserialize_from_stream = GengoLibrary.ImportNow("sk_picture_deserialize_from_stream")
	__imp_sk_picture_deserialize_from_data = GengoLibrary.ImportNow("sk_picture_deserialize_from_data")
	__imp_sk_picture_deserialize_from_memory = GengoLibrary.ImportNow("sk_picture_deserialize_from_memory")
	__imp_sk_picture_playback = GengoLibrary.ImportNow("sk_picture_playback")
	__imp_sk_picture_approximate_op_count = GengoLibrary.ImportNow("sk_picture_approximate_op_count")
	__imp_sk_picture_approximate_bytes_used = GengoLibrary.ImportNow("sk_picture_approximate_bytes_used")
	__imp_sk_rtree_factory_new = GengoLibrary.ImportNow("sk_rtree_factory_new")
	__imp_sk_rtree_factory_delete = GengoLibrary.ImportNow("sk_rtree_factory_delete")
	__imp_sk_pixmap_destructor = GengoLibrary.ImportNow("sk_pixmap_destructor")
	__imp_sk_pixmap_new = GengoLibrary.ImportNow("sk_pixmap_new")
	__imp_sk_pixmap_new_with_params = GengoLibrary.ImportNow("sk_pixmap_new_with_params")
	__imp_sk_pixmap_reset = GengoLibrary.ImportNow("sk_pixmap_reset")
	__imp_sk_pixmap_reset_with_params = GengoLibrary.ImportNow("sk_pixmap_reset_with_params")
	__imp_sk_pixmap_set_colorspace = GengoLibrary.ImportNow("sk_pixmap_set_colorspace")
	__imp_sk_pixmap_extract_subset = GengoLibrary.ImportNow("sk_pixmap_extract_subset")
	__imp_sk_pixmap_get_info = GengoLibrary.ImportNow("sk_pixmap_get_info")
	__imp_sk_pixmap_get_row_bytes = GengoLibrary.ImportNow("sk_pixmap_get_row_bytes")
	__imp_sk_pixmap_get_colorspace = GengoLibrary.ImportNow("sk_pixmap_get_colorspace")
	__imp_sk_pixmap_compute_is_opaque = GengoLibrary.ImportNow("sk_pixmap_compute_is_opaque")
	__imp_sk_pixmap_get_pixel_color = GengoLibrary.ImportNow("sk_pixmap_get_pixel_color")
	__imp_sk_pixmap_get_pixel_color4f = GengoLibrary.ImportNow("sk_pixmap_get_pixel_color4f")
	__imp_sk_pixmap_get_pixel_alphaf = GengoLibrary.ImportNow("sk_pixmap_get_pixel_alphaf")
	__imp_sk_pixmap_get_writable_addr = GengoLibrary.ImportNow("sk_pixmap_get_writable_addr")
	__imp_sk_pixmap_get_writeable_addr_with_xy = GengoLibrary.ImportNow("sk_pixmap_get_writeable_addr_with_xy")
	__imp_sk_pixmap_read_pixels = GengoLibrary.ImportNow("sk_pixmap_read_pixels")
	__imp_sk_pixmap_scale_pixels = GengoLibrary.ImportNow("sk_pixmap_scale_pixels")
	__imp_sk_pixmap_erase_color = GengoLibrary.ImportNow("sk_pixmap_erase_color")
	__imp_sk_pixmap_erase_color4f = GengoLibrary.ImportNow("sk_pixmap_erase_color4f")
	__imp_sk_webpencoder_encode = GengoLibrary.ImportNow("sk_webpencoder_encode")
	__imp_sk_jpegencoder_encode = GengoLibrary.ImportNow("sk_jpegencoder_encode")
	__imp_sk_pngencoder_encode = GengoLibrary.ImportNow("sk_pngencoder_encode")
	__imp_sk_swizzle_swap_rb = GengoLibrary.ImportNow("sk_swizzle_swap_rb")
	__imp_sk_color_unpremultiply = GengoLibrary.ImportNow("sk_color_unpremultiply")
	__imp_sk_color_premultiply = GengoLibrary.ImportNow("sk_color_premultiply")
	__imp_sk_color_unpremultiply_array = GengoLibrary.ImportNow("sk_color_unpremultiply_array")
	__imp_sk_color_premultiply_array = GengoLibrary.ImportNow("sk_color_premultiply_array")
	__imp_sk_color_get_bit_shift = GengoLibrary.ImportNow("sk_color_get_bit_shift")
	__imp_sk_region_new = GengoLibrary.ImportNow("sk_region_new")
	__imp_sk_region_delete = GengoLibrary.ImportNow("sk_region_delete")
	__imp_sk_region_is_empty = GengoLibrary.ImportNow("sk_region_is_empty")
	__imp_sk_region_is_rect = GengoLibrary.ImportNow("sk_region_is_rect")
	__imp_sk_region_is_complex = GengoLibrary.ImportNow("sk_region_is_complex")
	__imp_sk_region_get_bounds = GengoLibrary.ImportNow("sk_region_get_bounds")
	__imp_sk_region_get_boundary_path = GengoLibrary.ImportNow("sk_region_get_boundary_path")
	__imp_sk_region_set_empty = GengoLibrary.ImportNow("sk_region_set_empty")
	__imp_sk_region_set_rect = GengoLibrary.ImportNow("sk_region_set_rect")
	__imp_sk_region_set_rects = GengoLibrary.ImportNow("sk_region_set_rects")
	__imp_sk_region_set_region = GengoLibrary.ImportNow("sk_region_set_region")
	__imp_sk_region_set_path = GengoLibrary.ImportNow("sk_region_set_path")
	__imp_sk_region_intersects_rect = GengoLibrary.ImportNow("sk_region_intersects_rect")
	__imp_sk_region_intersects = GengoLibrary.ImportNow("sk_region_intersects")
	__imp_sk_region_contains_point = GengoLibrary.ImportNow("sk_region_contains_point")
	__imp_sk_region_contains_rect = GengoLibrary.ImportNow("sk_region_contains_rect")
	__imp_sk_region_contains = GengoLibrary.ImportNow("sk_region_contains")
	__imp_sk_region_quick_contains = GengoLibrary.ImportNow("sk_region_quick_contains")
	__imp_sk_region_quick_reject_rect = GengoLibrary.ImportNow("sk_region_quick_reject_rect")
	__imp_sk_region_quick_reject = GengoLibrary.ImportNow("sk_region_quick_reject")
	__imp_sk_region_translate = GengoLibrary.ImportNow("sk_region_translate")
	__imp_sk_region_op_rect = GengoLibrary.ImportNow("sk_region_op_rect")
	__imp_sk_region_op = GengoLibrary.ImportNow("sk_region_op")
	__imp_sk_region_iterator_new = GengoLibrary.ImportNow("sk_region_iterator_new")
	__imp_sk_region_iterator_delete = GengoLibrary.ImportNow("sk_region_iterator_delete")
	__imp_sk_region_iterator_rewind = GengoLibrary.ImportNow("sk_region_iterator_rewind")
	__imp_sk_region_iterator_done = GengoLibrary.ImportNow("sk_region_iterator_done")
	__imp_sk_region_iterator_next = GengoLibrary.ImportNow("sk_region_iterator_next")
	__imp_sk_region_iterator_rect = GengoLibrary.ImportNow("sk_region_iterator_rect")
	__imp_sk_region_cliperator_new = GengoLibrary.ImportNow("sk_region_cliperator_new")
	__imp_sk_region_cliperator_delete = GengoLibrary.ImportNow("sk_region_cliperator_delete")
	__imp_sk_region_cliperator_done = GengoLibrary.ImportNow("sk_region_cliperator_done")
	__imp_sk_region_cliperator_next = GengoLibrary.ImportNow("sk_region_cliperator_next")
	__imp_sk_region_cliperator_rect = GengoLibrary.ImportNow("sk_region_cliperator_rect")
	__imp_sk_region_spanerator_new = GengoLibrary.ImportNow("sk_region_spanerator_new")
	__imp_sk_region_spanerator_delete = GengoLibrary.ImportNow("sk_region_spanerator_delete")
	__imp_sk_region_spanerator_next = GengoLibrary.ImportNow("sk_region_spanerator_next")
	__imp_sk_rrect_new = GengoLibrary.ImportNow("sk_rrect_new")
	__imp_sk_rrect_new_copy = GengoLibrary.ImportNow("sk_rrect_new_copy")
	__imp_sk_rrect_delete = GengoLibrary.ImportNow("sk_rrect_delete")
	__imp_sk_rrect_get_type = GengoLibrary.ImportNow("sk_rrect_get_type")
	__imp_sk_rrect_get_rect = GengoLibrary.ImportNow("sk_rrect_get_rect")
	__imp_sk_rrect_get_radii = GengoLibrary.ImportNow("sk_rrect_get_radii")
	__imp_sk_rrect_get_width = GengoLibrary.ImportNow("sk_rrect_get_width")
	__imp_sk_rrect_get_height = GengoLibrary.ImportNow("sk_rrect_get_height")
	__imp_sk_rrect_set_empty = GengoLibrary.ImportNow("sk_rrect_set_empty")
	__imp_sk_rrect_set_rect = GengoLibrary.ImportNow("sk_rrect_set_rect")
	__imp_sk_rrect_set_oval = GengoLibrary.ImportNow("sk_rrect_set_oval")
	__imp_sk_rrect_set_rect_xy = GengoLibrary.ImportNow("sk_rrect_set_rect_xy")
	__imp_sk_rrect_set_nine_patch = GengoLibrary.ImportNow("sk_rrect_set_nine_patch")
	__imp_sk_rrect_set_rect_radii = GengoLibrary.ImportNow("sk_rrect_set_rect_radii")
	__imp_sk_rrect_inset = GengoLibrary.ImportNow("sk_rrect_inset")
	__imp_sk_rrect_outset = GengoLibrary.ImportNow("sk_rrect_outset")
	__imp_sk_rrect_offset = GengoLibrary.ImportNow("sk_rrect_offset")
	__imp_sk_rrect_contains = GengoLibrary.ImportNow("sk_rrect_contains")
	__imp_sk_rrect_is_valid = GengoLibrary.ImportNow("sk_rrect_is_valid")
	__imp_sk_rrect_transform = GengoLibrary.ImportNow("sk_rrect_transform")
	__imp_sk_runtimeeffect_make_for_color_filter = GengoLibrary.ImportNow("sk_runtimeeffect_make_for_color_filter")
	__imp_sk_runtimeeffect_make_for_shader = GengoLibrary.ImportNow("sk_runtimeeffect_make_for_shader")
	__imp_sk_runtimeeffect_make_for_blender = GengoLibrary.ImportNow("sk_runtimeeffect_make_for_blender")
	__imp_sk_runtimeeffect_unref = GengoLibrary.ImportNow("sk_runtimeeffect_unref")
	__imp_sk_runtimeeffect_make_shader = GengoLibrary.ImportNow("sk_runtimeeffect_make_shader")
	__imp_sk_runtimeeffect_make_color_filter = GengoLibrary.ImportNow("sk_runtimeeffect_make_color_filter")
	__imp_sk_runtimeeffect_make_blender = GengoLibrary.ImportNow("sk_runtimeeffect_make_blender")
	__imp_sk_runtimeeffect_get_uniform_byte_size = GengoLibrary.ImportNow("sk_runtimeeffect_get_uniform_byte_size")
	__imp_sk_runtimeeffect_get_uniforms_size = GengoLibrary.ImportNow("sk_runtimeeffect_get_uniforms_size")
	__imp_sk_runtimeeffect_get_uniform_name = GengoLibrary.ImportNow("sk_runtimeeffect_get_uniform_name")
	__imp_sk_runtimeeffect_get_uniform_from_index = GengoLibrary.ImportNow("sk_runtimeeffect_get_uniform_from_index")
	__imp_sk_runtimeeffect_get_uniform_from_name = GengoLibrary.ImportNow("sk_runtimeeffect_get_uniform_from_name")
	__imp_sk_runtimeeffect_get_children_size = GengoLibrary.ImportNow("sk_runtimeeffect_get_children_size")
	__imp_sk_runtimeeffect_get_child_name = GengoLibrary.ImportNow("sk_runtimeeffect_get_child_name")
	__imp_sk_runtimeeffect_get_child_from_index = GengoLibrary.ImportNow("sk_runtimeeffect_get_child_from_index")
	__imp_sk_runtimeeffect_get_child_from_name = GengoLibrary.ImportNow("sk_runtimeeffect_get_child_from_name")
	__imp_sk_shader_ref = GengoLibrary.ImportNow("sk_shader_ref")
	__imp_sk_shader_unref = GengoLibrary.ImportNow("sk_shader_unref")
	__imp_sk_shader_with_local_matrix = GengoLibrary.ImportNow("sk_shader_with_local_matrix")
	__imp_sk_shader_with_color_filter = GengoLibrary.ImportNow("sk_shader_with_color_filter")
	__imp_sk_shader_new_empty = GengoLibrary.ImportNow("sk_shader_new_empty")
	__imp_sk_shader_new_color = GengoLibrary.ImportNow("sk_shader_new_color")
	__imp_sk_shader_new_color4f = GengoLibrary.ImportNow("sk_shader_new_color4f")
	__imp_sk_shader_new_blend = GengoLibrary.ImportNow("sk_shader_new_blend")
	__imp_sk_shader_new_blender = GengoLibrary.ImportNow("sk_shader_new_blender")
	__imp_sk_shader_new_linear_gradient = GengoLibrary.ImportNow("sk_shader_new_linear_gradient")
	__imp_sk_shader_new_linear_gradient_color4f = GengoLibrary.ImportNow("sk_shader_new_linear_gradient_color4f")
	__imp_sk_shader_new_radial_gradient = GengoLibrary.ImportNow("sk_shader_new_radial_gradient")
	__imp_sk_shader_new_radial_gradient_color4f = GengoLibrary.ImportNow("sk_shader_new_radial_gradient_color4f")
	__imp_sk_shader_new_sweep_gradient = GengoLibrary.ImportNow("sk_shader_new_sweep_gradient")
	__imp_sk_shader_new_sweep_gradient_color4f = GengoLibrary.ImportNow("sk_shader_new_sweep_gradient_color4f")
	__imp_sk_shader_new_two_point_conical_gradient = GengoLibrary.ImportNow("sk_shader_new_two_point_conical_gradient")
	__imp_sk_shader_new_two_point_conical_gradient_color4f = GengoLibrary.ImportNow("sk_shader_new_two_point_conical_gradient_color4f")
	__imp_sk_shader_new_perlin_noise_fractal_noise = GengoLibrary.ImportNow("sk_shader_new_perlin_noise_fractal_noise")
	__imp_sk_shader_new_perlin_noise_turbulence = GengoLibrary.ImportNow("sk_shader_new_perlin_noise_turbulence")
	__imp_sk_stream_asset_destroy = GengoLibrary.ImportNow("sk_stream_asset_destroy")
	__imp_sk_filestream_new = GengoLibrary.ImportNow("sk_filestream_new")
	__imp_sk_filestream_destroy = GengoLibrary.ImportNow("sk_filestream_destroy")
	__imp_sk_filestream_is_valid = GengoLibrary.ImportNow("sk_filestream_is_valid")
	__imp_sk_memorystream_new = GengoLibrary.ImportNow("sk_memorystream_new")
	__imp_sk_memorystream_new_with_length = GengoLibrary.ImportNow("sk_memorystream_new_with_length")
	__imp_sk_memorystream_new_with_data = GengoLibrary.ImportNow("sk_memorystream_new_with_data")
	__imp_sk_memorystream_new_with_skdata = GengoLibrary.ImportNow("sk_memorystream_new_with_skdata")
	__imp_sk_memorystream_set_memory = GengoLibrary.ImportNow("sk_memorystream_set_memory")
	__imp_sk_memorystream_destroy = GengoLibrary.ImportNow("sk_memorystream_destroy")
	__imp_sk_stream_read = GengoLibrary.ImportNow("sk_stream_read")
	__imp_sk_stream_peek = GengoLibrary.ImportNow("sk_stream_peek")
	__imp_sk_stream_skip = GengoLibrary.ImportNow("sk_stream_skip")
	__imp_sk_stream_is_at_end = GengoLibrary.ImportNow("sk_stream_is_at_end")
	__imp_sk_stream_read_s8 = GengoLibrary.ImportNow("sk_stream_read_s8")
	__imp_sk_stream_read_s16 = GengoLibrary.ImportNow("sk_stream_read_s16")
	__imp_sk_stream_read_s32 = GengoLibrary.ImportNow("sk_stream_read_s32")
	__imp_sk_stream_read_u8 = GengoLibrary.ImportNow("sk_stream_read_u8")
	__imp_sk_stream_read_u16 = GengoLibrary.ImportNow("sk_stream_read_u16")
	__imp_sk_stream_read_u32 = GengoLibrary.ImportNow("sk_stream_read_u32")
	__imp_sk_stream_read_bool = GengoLibrary.ImportNow("sk_stream_read_bool")
	__imp_sk_stream_rewind = GengoLibrary.ImportNow("sk_stream_rewind")
	__imp_sk_stream_has_position = GengoLibrary.ImportNow("sk_stream_has_position")
	__imp_sk_stream_get_position = GengoLibrary.ImportNow("sk_stream_get_position")
	__imp_sk_stream_seek = GengoLibrary.ImportNow("sk_stream_seek")
	__imp_sk_stream_move = GengoLibrary.ImportNow("sk_stream_move")
	__imp_sk_stream_has_length = GengoLibrary.ImportNow("sk_stream_has_length")
	__imp_sk_stream_get_length = GengoLibrary.ImportNow("sk_stream_get_length")
	__imp_sk_stream_get_memory_base = GengoLibrary.ImportNow("sk_stream_get_memory_base")
	__imp_sk_stream_fork = GengoLibrary.ImportNow("sk_stream_fork")
	__imp_sk_stream_duplicate = GengoLibrary.ImportNow("sk_stream_duplicate")
	__imp_sk_stream_destroy = GengoLibrary.ImportNow("sk_stream_destroy")
	__imp_sk_filewstream_new = GengoLibrary.ImportNow("sk_filewstream_new")
	__imp_sk_filewstream_destroy = GengoLibrary.ImportNow("sk_filewstream_destroy")
	__imp_sk_filewstream_is_valid = GengoLibrary.ImportNow("sk_filewstream_is_valid")
	__imp_sk_dynamicmemorywstream_new = GengoLibrary.ImportNow("sk_dynamicmemorywstream_new")
	__imp_sk_dynamicmemorywstream_detach_as_stream = GengoLibrary.ImportNow("sk_dynamicmemorywstream_detach_as_stream")
	__imp_sk_dynamicmemorywstream_detach_as_data = GengoLibrary.ImportNow("sk_dynamicmemorywstream_detach_as_data")
	__imp_sk_dynamicmemorywstream_copy_to = GengoLibrary.ImportNow("sk_dynamicmemorywstream_copy_to")
	__imp_sk_dynamicmemorywstream_write_to_stream = GengoLibrary.ImportNow("sk_dynamicmemorywstream_write_to_stream")
	__imp_sk_dynamicmemorywstream_destroy = GengoLibrary.ImportNow("sk_dynamicmemorywstream_destroy")
	__imp_sk_wstream_write = GengoLibrary.ImportNow("sk_wstream_write")
	__imp_sk_wstream_newline = GengoLibrary.ImportNow("sk_wstream_newline")
	__imp_sk_wstream_flush = GengoLibrary.ImportNow("sk_wstream_flush")
	__imp_sk_wstream_bytes_written = GengoLibrary.ImportNow("sk_wstream_bytes_written")
	__imp_sk_wstream_write_8 = GengoLibrary.ImportNow("sk_wstream_write_8")
	__imp_sk_wstream_write_16 = GengoLibrary.ImportNow("sk_wstream_write_16")
	__imp_sk_wstream_write_32 = GengoLibrary.ImportNow("sk_wstream_write_32")
	__imp_sk_wstream_write_text = GengoLibrary.ImportNow("sk_wstream_write_text")
	__imp_sk_wstream_write_dec_as_text = GengoLibrary.ImportNow("sk_wstream_write_dec_as_text")
	__imp_sk_wstream_write_bigdec_as_text = GengoLibrary.ImportNow("sk_wstream_write_bigdec_as_text")
	__imp_sk_wstream_write_hex_as_text = GengoLibrary.ImportNow("sk_wstream_write_hex_as_text")
	__imp_sk_wstream_write_scalar_as_text = GengoLibrary.ImportNow("sk_wstream_write_scalar_as_text")
	__imp_sk_wstream_write_bool = GengoLibrary.ImportNow("sk_wstream_write_bool")
	__imp_sk_wstream_write_scalar = GengoLibrary.ImportNow("sk_wstream_write_scalar")
	__imp_sk_wstream_write_packed_uint = GengoLibrary.ImportNow("sk_wstream_write_packed_uint")
	__imp_sk_wstream_write_stream = GengoLibrary.ImportNow("sk_wstream_write_stream")
	__imp_sk_wstream_get_size_of_packed_uint = GengoLibrary.ImportNow("sk_wstream_get_size_of_packed_uint")
	__imp_sk_string_new_empty = GengoLibrary.ImportNow("sk_string_new_empty")
	__imp_sk_string_new_with_copy = GengoLibrary.ImportNow("sk_string_new_with_copy")
	__imp_sk_string_destructor = GengoLibrary.ImportNow("sk_string_destructor")
	__imp_sk_string_get_size = GengoLibrary.ImportNow("sk_string_get_size")
	__imp_sk_string_get_c_str = GengoLibrary.ImportNow("sk_string_get_c_str")
	__imp_sk_surface_new_null = GengoLibrary.ImportNow("sk_surface_new_null")
	__imp_sk_surface_new_raster = GengoLibrary.ImportNow("sk_surface_new_raster")
	__imp_sk_surface_new_raster_direct = GengoLibrary.ImportNow("sk_surface_new_raster_direct")
	__imp_sk_surface_new_backend_texture = GengoLibrary.ImportNow("sk_surface_new_backend_texture")
	__imp_sk_surface_new_backend_render_target = GengoLibrary.ImportNow("sk_surface_new_backend_render_target")
	__imp_sk_surface_new_render_target = GengoLibrary.ImportNow("sk_surface_new_render_target")
	__imp_sk_surface_new_metal_layer = GengoLibrary.ImportNow("sk_surface_new_metal_layer")
	__imp_sk_surface_new_metal_view = GengoLibrary.ImportNow("sk_surface_new_metal_view")
	__imp_sk_surface_unref = GengoLibrary.ImportNow("sk_surface_unref")
	__imp_sk_surface_get_canvas = GengoLibrary.ImportNow("sk_surface_get_canvas")
	__imp_sk_surface_new_image_snapshot = GengoLibrary.ImportNow("sk_surface_new_image_snapshot")
	__imp_sk_surface_new_image_snapshot_with_crop = GengoLibrary.ImportNow("sk_surface_new_image_snapshot_with_crop")
	__imp_sk_surface_draw = GengoLibrary.ImportNow("sk_surface_draw")
	__imp_sk_surface_peek_pixels = GengoLibrary.ImportNow("sk_surface_peek_pixels")
	__imp_sk_surface_read_pixels = GengoLibrary.ImportNow("sk_surface_read_pixels")
	__imp_sk_surface_get_props = GengoLibrary.ImportNow("sk_surface_get_props")
	__imp_sk_surface_flush = GengoLibrary.ImportNow("sk_surface_flush")
	__imp_sk_surface_flush_and_submit = GengoLibrary.ImportNow("sk_surface_flush_and_submit")
	__imp_sk_surface_get_recording_context = GengoLibrary.ImportNow("sk_surface_get_recording_context")
	__imp_sk_surfaceprops_new = GengoLibrary.ImportNow("sk_surfaceprops_new")
	__imp_sk_surfaceprops_delete = GengoLibrary.ImportNow("sk_surfaceprops_delete")
	__imp_sk_surfaceprops_get_flags = GengoLibrary.ImportNow("sk_surfaceprops_get_flags")
	__imp_sk_surfaceprops_get_pixel_geometry = GengoLibrary.ImportNow("sk_surfaceprops_get_pixel_geometry")
	__imp_sk_svgcanvas_create_with_stream = GengoLibrary.ImportNow("sk_svgcanvas_create_with_stream")
	__imp_sk_textblob_ref = GengoLibrary.ImportNow("sk_textblob_ref")
	__imp_sk_textblob_unref = GengoLibrary.ImportNow("sk_textblob_unref")
	__imp_sk_textblob_get_unique_id = GengoLibrary.ImportNow("sk_textblob_get_unique_id")
	__imp_sk_textblob_get_bounds = GengoLibrary.ImportNow("sk_textblob_get_bounds")
	__imp_sk_textblob_get_intercepts = GengoLibrary.ImportNow("sk_textblob_get_intercepts")
	__imp_sk_textblob_builder_new = GengoLibrary.ImportNow("sk_textblob_builder_new")
	__imp_sk_textblob_builder_delete = GengoLibrary.ImportNow("sk_textblob_builder_delete")
	__imp_sk_textblob_builder_make = GengoLibrary.ImportNow("sk_textblob_builder_make")
	__imp_sk_textblob_builder_alloc_run = GengoLibrary.ImportNow("sk_textblob_builder_alloc_run")
	__imp_sk_textblob_builder_alloc_run_pos_h = GengoLibrary.ImportNow("sk_textblob_builder_alloc_run_pos_h")
	__imp_sk_textblob_builder_alloc_run_pos = GengoLibrary.ImportNow("sk_textblob_builder_alloc_run_pos")
	__imp_sk_textblob_builder_alloc_run_rsxform = GengoLibrary.ImportNow("sk_textblob_builder_alloc_run_rsxform")
	__imp_sk_textblob_builder_alloc_run_text = GengoLibrary.ImportNow("sk_textblob_builder_alloc_run_text")
	__imp_sk_textblob_builder_alloc_run_text_pos_h = GengoLibrary.ImportNow("sk_textblob_builder_alloc_run_text_pos_h")
	__imp_sk_textblob_builder_alloc_run_text_pos = GengoLibrary.ImportNow("sk_textblob_builder_alloc_run_text_pos")
	__imp_sk_textblob_builder_alloc_run_text_rsxform = GengoLibrary.ImportNow("sk_textblob_builder_alloc_run_text_rsxform")
	__imp_sk_typeface_unref = GengoLibrary.ImportNow("sk_typeface_unref")
	__imp_sk_typeface_get_fontstyle = GengoLibrary.ImportNow("sk_typeface_get_fontstyle")
	__imp_sk_typeface_get_font_weight = GengoLibrary.ImportNow("sk_typeface_get_font_weight")
	__imp_sk_typeface_get_font_width = GengoLibrary.ImportNow("sk_typeface_get_font_width")
	__imp_sk_typeface_get_font_slant = GengoLibrary.ImportNow("sk_typeface_get_font_slant")
	__imp_sk_typeface_is_fixed_pitch = GengoLibrary.ImportNow("sk_typeface_is_fixed_pitch")
	__imp_sk_typeface_create_default = GengoLibrary.ImportNow("sk_typeface_create_default")
	__imp_sk_typeface_ref_default = GengoLibrary.ImportNow("sk_typeface_ref_default")
	__imp_sk_typeface_create_from_name = GengoLibrary.ImportNow("sk_typeface_create_from_name")
	__imp_sk_typeface_create_from_file = GengoLibrary.ImportNow("sk_typeface_create_from_file")
	__imp_sk_typeface_create_from_stream = GengoLibrary.ImportNow("sk_typeface_create_from_stream")
	__imp_sk_typeface_create_from_data = GengoLibrary.ImportNow("sk_typeface_create_from_data")
	__imp_sk_typeface_unichars_to_glyphs = GengoLibrary.ImportNow("sk_typeface_unichars_to_glyphs")
	__imp_sk_typeface_unichar_to_glyph = GengoLibrary.ImportNow("sk_typeface_unichar_to_glyph")
	__imp_sk_typeface_count_glyphs = GengoLibrary.ImportNow("sk_typeface_count_glyphs")
	__imp_sk_typeface_count_tables = GengoLibrary.ImportNow("sk_typeface_count_tables")
	__imp_sk_typeface_get_table_tags = GengoLibrary.ImportNow("sk_typeface_get_table_tags")
	__imp_sk_typeface_get_table_size = GengoLibrary.ImportNow("sk_typeface_get_table_size")
	__imp_sk_typeface_get_table_data = GengoLibrary.ImportNow("sk_typeface_get_table_data")
	__imp_sk_typeface_copy_table_data = GengoLibrary.ImportNow("sk_typeface_copy_table_data")
	__imp_sk_typeface_get_units_per_em = GengoLibrary.ImportNow("sk_typeface_get_units_per_em")
	__imp_sk_typeface_get_kerning_pair_adjustments = GengoLibrary.ImportNow("sk_typeface_get_kerning_pair_adjustments")
	__imp_sk_typeface_get_family_name = GengoLibrary.ImportNow("sk_typeface_get_family_name")
	__imp_sk_typeface_open_stream = GengoLibrary.ImportNow("sk_typeface_open_stream")
	__imp_sk_fontmgr_create_default = GengoLibrary.ImportNow("sk_fontmgr_create_default")
	__imp_sk_fontmgr_ref_default = GengoLibrary.ImportNow("sk_fontmgr_ref_default")
	__imp_sk_fontmgr_unref = GengoLibrary.ImportNow("sk_fontmgr_unref")
	__imp_sk_fontmgr_count_families = GengoLibrary.ImportNow("sk_fontmgr_count_families")
	__imp_sk_fontmgr_get_family_name = GengoLibrary.ImportNow("sk_fontmgr_get_family_name")
	__imp_sk_fontmgr_create_styleset = GengoLibrary.ImportNow("sk_fontmgr_create_styleset")
	__imp_sk_fontmgr_match_family = GengoLibrary.ImportNow("sk_fontmgr_match_family")
	__imp_sk_fontmgr_match_family_style = GengoLibrary.ImportNow("sk_fontmgr_match_family_style")
	__imp_sk_fontmgr_match_family_style_character = GengoLibrary.ImportNow("sk_fontmgr_match_family_style_character")
	__imp_sk_fontmgr_create_from_data = GengoLibrary.ImportNow("sk_fontmgr_create_from_data")
	__imp_sk_fontmgr_create_from_stream = GengoLibrary.ImportNow("sk_fontmgr_create_from_stream")
	__imp_sk_fontmgr_create_from_file = GengoLibrary.ImportNow("sk_fontmgr_create_from_file")
	__imp_sk_fontstyle_new = GengoLibrary.ImportNow("sk_fontstyle_new")
	__imp_sk_fontstyle_delete = GengoLibrary.ImportNow("sk_fontstyle_delete")
	__imp_sk_fontstyle_get_weight = GengoLibrary.ImportNow("sk_fontstyle_get_weight")
	__imp_sk_fontstyle_get_width = GengoLibrary.ImportNow("sk_fontstyle_get_width")
	__imp_sk_fontstyle_get_slant = GengoLibrary.ImportNow("sk_fontstyle_get_slant")
	__imp_sk_fontstyleset_create_empty = GengoLibrary.ImportNow("sk_fontstyleset_create_empty")
	__imp_sk_fontstyleset_unref = GengoLibrary.ImportNow("sk_fontstyleset_unref")
	__imp_sk_fontstyleset_get_count = GengoLibrary.ImportNow("sk_fontstyleset_get_count")
	__imp_sk_fontstyleset_get_style = GengoLibrary.ImportNow("sk_fontstyleset_get_style")
	__imp_sk_fontstyleset_create_typeface = GengoLibrary.ImportNow("sk_fontstyleset_create_typeface")
	__imp_sk_fontstyleset_match_style = GengoLibrary.ImportNow("sk_fontstyleset_match_style")
	__imp_sk_vertices_unref = GengoLibrary.ImportNow("sk_vertices_unref")
	__imp_sk_vertices_ref = GengoLibrary.ImportNow("sk_vertices_ref")
	__imp_sk_vertices_make_copy = GengoLibrary.ImportNow("sk_vertices_make_copy")
	__imp_skottie_animation_make_from_string = GengoLibrary.ImportNow("skottie_animation_make_from_string")
	__imp_skottie_animation_make_from_data = GengoLibrary.ImportNow("skottie_animation_make_from_data")
	__imp_skottie_animation_make_from_stream = GengoLibrary.ImportNow("skottie_animation_make_from_stream")
	__imp_skottie_animation_make_from_file = GengoLibrary.ImportNow("skottie_animation_make_from_file")
	__imp_skottie_animation_ref = GengoLibrary.ImportNow("skottie_animation_ref")
	__imp_skottie_animation_unref = GengoLibrary.ImportNow("skottie_animation_unref")
	__imp_skottie_animation_delete = GengoLibrary.ImportNow("skottie_animation_delete")
	__imp_skottie_animation_render = GengoLibrary.ImportNow("skottie_animation_render")
	__imp_skottie_animation_render_with_flags = GengoLibrary.ImportNow("skottie_animation_render_with_flags")
	__imp_skottie_animation_seek = GengoLibrary.ImportNow("skottie_animation_seek")
	__imp_skottie_animation_seek_frame = GengoLibrary.ImportNow("skottie_animation_seek_frame")
	__imp_skottie_animation_seek_frame_time = GengoLibrary.ImportNow("skottie_animation_seek_frame_time")
	__imp_skottie_animation_get_duration = GengoLibrary.ImportNow("skottie_animation_get_duration")
	__imp_skottie_animation_get_fps = GengoLibrary.ImportNow("skottie_animation_get_fps")
	__imp_skottie_animation_get_in_point = GengoLibrary.ImportNow("skottie_animation_get_in_point")
	__imp_skottie_animation_get_out_point = GengoLibrary.ImportNow("skottie_animation_get_out_point")
	__imp_skottie_animation_get_version = GengoLibrary.ImportNow("skottie_animation_get_version")
	__imp_skottie_animation_get_size = GengoLibrary.ImportNow("skottie_animation_get_size")
	__imp_skottie_animation_builder_new = GengoLibrary.ImportNow("skottie_animation_builder_new")
	__imp_skottie_animation_builder_delete = GengoLibrary.ImportNow("skottie_animation_builder_delete")
	__imp_skottie_animation_builder_get_stats = GengoLibrary.ImportNow("skottie_animation_builder_get_stats")
	__imp_skottie_animation_builder_set_resource_provider = GengoLibrary.ImportNow("skottie_animation_builder_set_resource_provider")
	__imp_skottie_animation_builder_set_font_manager = GengoLibrary.ImportNow("skottie_animation_builder_set_font_manager")
	__imp_skottie_animation_builder_make_from_stream = GengoLibrary.ImportNow("skottie_animation_builder_make_from_stream")
	__imp_skottie_animation_builder_make_from_file = GengoLibrary.ImportNow("skottie_animation_builder_make_from_file")
	__imp_skottie_animation_builder_make_from_string = GengoLibrary.ImportNow("skottie_animation_builder_make_from_string")
	__imp_skottie_animation_builder_make_from_data = GengoLibrary.ImportNow("skottie_animation_builder_make_from_data")
	__imp_skresources_resource_provider_ref = GengoLibrary.ImportNow("skresources_resource_provider_ref")
	__imp_skresources_resource_provider_unref = GengoLibrary.ImportNow("skresources_resource_provider_unref")
	__imp_skresources_resource_provider_delete = GengoLibrary.ImportNow("skresources_resource_provider_delete")
	__imp_skresources_resource_provider_load = GengoLibrary.ImportNow("skresources_resource_provider_load")
	__imp_skresources_resource_provider_load_image_asset = GengoLibrary.ImportNow("skresources_resource_provider_load_image_asset")
	__imp_skresources_resource_provider_load_audio_asset = GengoLibrary.ImportNow("skresources_resource_provider_load_audio_asset")
	__imp_skresources_resource_provider_load_typeface = GengoLibrary.ImportNow("skresources_resource_provider_load_typeface")
	__imp_skresources_file_resource_provider_make = GengoLibrary.ImportNow("skresources_file_resource_provider_make")
	__imp_skresources_caching_resource_provider_proxy_make = GengoLibrary.ImportNow("skresources_caching_resource_provider_proxy_make")
	__imp_skresources_data_uri_resource_provider_proxy_make = GengoLibrary.ImportNow("skresources_data_uri_resource_provider_proxy_make")
	__imp_sksg_invalidation_controller_new = GengoLibrary.ImportNow("sksg_invalidation_controller_new")
	__imp_sksg_invalidation_controller_delete = GengoLibrary.ImportNow("sksg_invalidation_controller_delete")
	__imp_sksg_invalidation_controller_inval = GengoLibrary.ImportNow("sksg_invalidation_controller_inval")
	__imp_sksg_invalidation_controller_get_bounds = GengoLibrary.ImportNow("sksg_invalidation_controller_get_bounds")
	__imp_sksg_invalidation_controller_begin = GengoLibrary.ImportNow("sksg_invalidation_controller_begin")
	__imp_sksg_invalidation_controller_end = GengoLibrary.ImportNow("sksg_invalidation_controller_end")
	__imp_sksg_invalidation_controller_reset = GengoLibrary.ImportNow("sksg_invalidation_controller_reset")
	bindlib.Validate((*SkColor4fT)(nil), 16, 4, "fR", 0, "fG", 4, "fB", 8, "fA", 12)
	bindlib.Validate((*Anon149_9)(nil), 8, 4, "X", 0, "Y", 4)
	bindlib.Validate((*Anon156_9)(nil), 16, 4, "Left", 0, "Top", 4, "Right", 8, "Bottom", 12)
	bindlib.Validate((*Anon163_9)(nil), 16, 4, "Left", 0, "Top", 4, "Right", 8, "Bottom", 12)
	bindlib.Validate((*Anon170_9)(nil), 36, 4, "scaleX", 0, "skewX", 4, "transX", 8, "skewY", 12, "scaleY", 16, "transY", 20, "Persp0", 24, "Persp1", 28, "Persp2", 32)
	bindlib.Validate((*Anon177_9)(nil), 64, 4, "M00", 0, "M01", 4, "M02", 8, "M03", 12, "M10", 16, "M11", 20, "M12", 24, "M13", 28, "M20", 32, "M21", 36, "M22", 40, "M23", 44, "M30", 48, "M31", 52, "M32", 56, "M33", 60)
	bindlib.Validate((*Anon310_9)(nil), 12, 4, "X", 0, "Y", 4, "Z", 8)
	bindlib.Validate((*Anon316_9)(nil), 8, 4, "X", 0, "Y", 4)
	bindlib.Validate((*Anon321_9)(nil), 8, 4, "W", 0, "H", 4)
	bindlib.Validate((*Anon326_9)(nil), 8, 4, "W", 0, "H", 4)
	bindlib.Validate((*Anon331_9)(nil), 64, 4, "fFlags", 0, "fTop", 4, "fAscent", 8, "fDescent", 12, "fBottom", 16, "fLeading", 20, "fAvgCharWidth", 24, "fMaxCharWidth", 28, "fXMin", 32, "fXMax", 36, "fXHeight", 40, "fCapHeight", 44, "fUnderlineThickness", 48, "fUnderlinePosition", 52, "fStrikeoutThickness", 56, "fStrikeoutPosition", 60)
	bindlib.Validate((*Anon509_9)(nil), 24, 8, "fZeroInitialized", 0, "fSubset", 8, "fFrameIndex", 16, "fPriorFrame", 20)
	bindlib.Validate((*Anon622_9)(nil), 24, 8, "fAvoidStencilBuffers", 0, "fRuntimeProgramCacheSize", 4, "fGlyphCacheTextureMaximumBytes", 8, "fAllowPathMaskCaching", 16, "fDoManualMipmapping", 17, "fBufferMapThreshold", 20)
	bindlib.Validate((*Anon654_9)(nil), 16, 4, "fTarget", 0, "fID", 4, "fFormat", 8, "fProtected", 12)
	bindlib.Validate((*Anon661_9)(nil), 12, 4, "fFBOID", 0, "fFormat", 4, "fProtected", 8)
	bindlib.Validate((*Anon681_9)(nil), 120, 8, "fInstance", 0, "fPhysicalDevice", 8, "fDevice", 16, "fQueue", 24, "fGraphicsQueueIndex", 32, "fMinAPIVersion", 36, "fInstanceVersion", 40, "fMaxAPIVersion", 44, "fExtensions", 48, "fVkExtensions", 56, "fFeatures", 64, "fDeviceFeatures", 72, "fDeviceFeatures2", 80, "fMemoryAllocator", 88, "fGetProc", 96, "fGetProcUserData", 104, "fOwnsInstanceAndDevice", 112, "fProtectedContext", 113)
	bindlib.Validate((*Anon704_9)(nil), 24, 4, "fMemory", 0, "fOffset", 4, "fSize", 8, "fFlags", 12, "fBackendMemory", 16, "_private_fUsesSystemHeap", 20)
	bindlib.Validate((*Anon713_9)(nil), 36, 4, "fFormat", 0, "fExternalFormat", 4, "fYcbcrModel", 8, "fYcbcrRange", 12, "fXChromaOffset", 16, "fYChromaOffset", 20, "fChromaFilter", 24, "fForceExplicitReconstruction", 28, "fFormatFeatures", 32)
	bindlib.Validate((*Anon725_9)(nil), 44, 4, "fImage", 0, "fAlloc", 4, "fImageTiling", 8, "fImageLayout", 12, "fFormat", 16, "fImageUsageFlags", 20, "fSampleCount", 24, "fLevelCount", 28, "fCurrentQueueFamily", 32, "fProtected", 36, "fYcbcrConversionInfo", 37, "fSharingMode", 40)
	bindlib.Validate((*Anon747_9)(nil), 8, 8, "fTexture", 0)
	bindlib.Validate((*Anon767_9)(nil), 48, 8, "fXDivs", 0, "fYDivs", 8, "fRectTypes", 16, "fXCount", 24, "fYCount", 28, "fBounds", 32, "fColors", 40)
	bindlib.Validate((*Anon806_9)(nil), 32, 4, "fTimeZoneMinutes", 0, "fYear", 4, "fMonth", 8, "fDayOfWeek", 12, "fDay", 16, "fHour", 20, "fMinute", 24, "fSecond", 28)
	bindlib.Validate((*Anon817_9)(nil), 80, 8, "fTitle", 0, "fAuthor", 8, "fSubject", 16, "fKeywords", 24, "fCreator", 32, "fProducer", 40, "fCreation", 48, "fModified", 56, "fRasterDPI", 64, "fPDFA", 68, "fEncodingQuality", 72)
	bindlib.Validate((*Anon831_9)(nil), 24, 8, "Colorspace", 0, "Width", 8, "Height", 12, "colorType", 16, "alphaType", 20)
	bindlib.Validate((*Anon850_9)(nil), 32, 4, "fRequiredFrame", 0, "fDuration", 4, "fFullyReceived", 8, "fAlphaType", 12, "fHasAlphaWithinBounds", 16, "fDisposalMethod", 20, "fBlend", 24, "fFrameRect", 28)
	bindlib.Validate((*SkColorspaceTransferFnT)(nil), 28, 4, "fG", 0, "fA", 4, "fB", 8, "fC", 12, "fD", 16, "fE", 20, "fF", 24)
	bindlib.Validate((*SkColorspacePrimariesT)(nil), 32, 4, "fRX", 0, "fRY", 4, "fGX", 8, "fGY", 12, "fBX", 16, "fBY", 20, "fWX", 24, "fWY", 28)
	bindlib.Validate((*SkColorspaceXyzT)(nil), 36, 4, "fM00", 0, "fM01", 4, "fM02", 8, "fM10", 12, "fM11", 16, "fM12", 20, "fM20", 24, "fM21", 28, "fM22", 32)
	bindlib.Validate((*Anon912_9)(nil), 12, 4, "fGrayscale", 0, "fInvertStyle", 4, "fContrast", 8)
	bindlib.Validate((*Anon932_9)(nil), 32, 8, "fFilterFlags", 0, "fZLibLevel", 4, "fComments", 8, "fICCProfile", 16, "fICCProfileDescription", 24)
	bindlib.Validate((*Anon951_9)(nil), 40, 8, "fQuality", 0, "fDownsample", 4, "fAlphaOption", 8, "xmpMetadata", 16, "fICCProfile", 24, "fICCProfileDescription", 32)
	bindlib.Validate((*Anon965_9)(nil), 24, 8, "fCompression", 0, "fQuality", 4, "fICCProfile", 8, "fICCProfileDescription", 16)
	bindlib.Validate((*Anon993_9)(nil), 32, 8, "Glyphs", 0, "Pos", 8, "Utf8text", 16, "Clusters", 24)
	bindlib.Validate((*Anon1000_9)(nil), 16, 4, "fSCos", 0, "fSSin", 4, "fTX", 8, "fTY", 12)
	bindlib.Validate((*Anon1040_9)(nil), 40, 8, "fName", 0, "fNameLength", 8, "fOffset", 16, "fType", 24, "fCount", 28, "fFlags", 32)
	bindlib.Validate((*Anon1049_9)(nil), 24, 8, "fName", 0, "fNameLength", 8, "fType", 16, "fIndex", 20)
	bindlib.Validate((*Anon1067_9)(nil), 8, 4, "fB", 0, "fC", 4)
	bindlib.Validate((*Anon1072_9)(nil), 24, 4, "fMaxAniso", 0, "fUseCubic", 4, "fCubic", 8, "fFilter", 16, "fMipmap", 20)
	bindlib.Validate((*Anon1103_9)(nil), 32, 8, "fTotalLoadTimeMS", 0, "fJsonParseTimeMS", 4, "fSceneParseTimeMS", 8, "fJsonSize", 16, "fAnimatorCount", 24)
}
func GrRecordingContextUnref(context unsafe.Pointer) int32 {
	__res := bindlib.CCall1(__imp_gr_recording_context_unref.Addr(), bindlib.MarshallSyscall(context))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_gr_recording_context_get_max_surface_sample_count_for_color_type bindlib.PreloadProc

func GrRecordingContextGetMaxSurfaceSampleCountForColorType(context unsafe.Pointer, colorType SkColortypeT) int32 {
	__res := bindlib.CCall2(__imp_gr_recording_context_get_max_surface_sample_count_for_color_type.Addr(), bindlib.MarshallSyscall(context), bindlib.MarshallSyscall(colorType))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_gr_recording_context_get_backend bindlib.PreloadProc

func GrRecordingContextGetBackend(context unsafe.Pointer) GrBackendT {
	__res := bindlib.CCall1(__imp_gr_recording_context_get_backend.Addr(), bindlib.MarshallSyscall(context))
	return bindlib.UnmarshallSyscall[GrBackendT](__res)
}

var __imp_gr_recording_context_is_abandoned bindlib.PreloadProc

func GrRecordingContextIsAbandoned(context unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_gr_recording_context_is_abandoned.Addr(), bindlib.MarshallSyscall(context))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_gr_recording_context_max_texture_size bindlib.PreloadProc

func GrRecordingContextMaxTextureSize(context unsafe.Pointer) int32 {
	__res := bindlib.CCall1(__imp_gr_recording_context_max_texture_size.Addr(), bindlib.MarshallSyscall(context))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_gr_recording_context_max_render_target_size bindlib.PreloadProc

func GrRecordingContextMaxRenderTargetSize(context unsafe.Pointer) int32 {
	__res := bindlib.CCall1(__imp_gr_recording_context_max_render_target_size.Addr(), bindlib.MarshallSyscall(context))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_gr_direct_context_make_gl bindlib.PreloadProc

func GrDirectContextMakeGl(glInterface unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_gr_direct_context_make_gl.Addr(), bindlib.MarshallSyscall(glInterface))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_gr_direct_context_make_gl_with_options bindlib.PreloadProc

func GrDirectContextMakeGlWithOptions(glInterface unsafe.Pointer, options unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_gr_direct_context_make_gl_with_options.Addr(), bindlib.MarshallSyscall(glInterface), bindlib.MarshallSyscall(options))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_gr_direct_context_make_vulkan bindlib.PreloadProc

func GrDirectContextMakeVulkan(vkBackendContext GrVkBackendcontextT) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_gr_direct_context_make_vulkan.Addr(), bindlib.MarshallSyscall(vkBackendContext))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_gr_direct_context_make_vulkan_with_options bindlib.PreloadProc

func GrDirectContextMakeVulkanWithOptions(vkBackendContext GrVkBackendcontextT, options unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_gr_direct_context_make_vulkan_with_options.Addr(), bindlib.MarshallSyscall(vkBackendContext), bindlib.MarshallSyscall(options))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_gr_direct_context_make_metal bindlib.PreloadProc

func GrDirectContextMakeMetal(device unsafe.Pointer, queue unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_gr_direct_context_make_metal.Addr(), bindlib.MarshallSyscall(device), bindlib.MarshallSyscall(queue))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_gr_direct_context_make_metal_with_options bindlib.PreloadProc

func GrDirectContextMakeMetalWithOptions(device unsafe.Pointer, queue unsafe.Pointer, options unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall3(__imp_gr_direct_context_make_metal_with_options.Addr(), bindlib.MarshallSyscall(device), bindlib.MarshallSyscall(queue), bindlib.MarshallSyscall(options))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_gr_direct_context_is_abandoned bindlib.PreloadProc

func GrDirectContextIsAbandoned(context unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_gr_direct_context_is_abandoned.Addr(), bindlib.MarshallSyscall(context))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_gr_direct_context_abandon_context bindlib.PreloadProc

func GrDirectContextAbandonContext(context unsafe.Pointer) {
	bindlib.CCall1(__imp_gr_direct_context_abandon_context.Addr(), bindlib.MarshallSyscall(context))
}

var __imp_gr_direct_context_release_resources_and_abandon_context bindlib.PreloadProc

func GrDirectContextReleaseResourcesAndAbandonContext(context unsafe.Pointer) {
	bindlib.CCall1(__imp_gr_direct_context_release_resources_and_abandon_context.Addr(), bindlib.MarshallSyscall(context))
}

var __imp_gr_direct_context_get_resource_cache_limit bindlib.PreloadProc

func GrDirectContextGetResourceCacheLimit(context unsafe.Pointer) uint {
	__res := bindlib.CCall1(__imp_gr_direct_context_get_resource_cache_limit.Addr(), bindlib.MarshallSyscall(context))
	return bindlib.UnmarshallSyscall[uint](__res)
}

var __imp_gr_direct_context_set_resource_cache_limit bindlib.PreloadProc

func GrDirectContextSetResourceCacheLimit(context unsafe.Pointer, maxResourceBytes uint) {
	bindlib.CCall2(__imp_gr_direct_context_set_resource_cache_limit.Addr(), bindlib.MarshallSyscall(context), bindlib.MarshallSyscall(maxResourceBytes))
}

var __imp_gr_direct_context_get_resource_cache_usage bindlib.PreloadProc

func GrDirectContextGetResourceCacheUsage(context unsafe.Pointer, maxResources *int32, maxResourceBytes *uint) {
	bindlib.CCall3(__imp_gr_direct_context_get_resource_cache_usage.Addr(), bindlib.MarshallSyscall(context), bindlib.MarshallSyscall(maxResources), bindlib.MarshallSyscall(maxResourceBytes))
}

var __imp_gr_direct_context_flush bindlib.PreloadProc

func GrDirectContextFlush(context unsafe.Pointer) {
	bindlib.CCall1(__imp_gr_direct_context_flush.Addr(), bindlib.MarshallSyscall(context))
}

var __imp_gr_direct_context_submit bindlib.PreloadProc

func GrDirectContextSubmit(context unsafe.Pointer, syncCpu bool) bool {
	__res := bindlib.CCall2(__imp_gr_direct_context_submit.Addr(), bindlib.MarshallSyscall(context), bindlib.MarshallSyscall(syncCpu))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_gr_direct_context_flush_and_submit bindlib.PreloadProc

func GrDirectContextFlushAndSubmit(context unsafe.Pointer, syncCpu bool) {
	bindlib.CCall2(__imp_gr_direct_context_flush_and_submit.Addr(), bindlib.MarshallSyscall(context), bindlib.MarshallSyscall(syncCpu))
}

var __imp_gr_direct_context_flush_image bindlib.PreloadProc

func GrDirectContextFlushImage(context unsafe.Pointer, image unsafe.Pointer) {
	bindlib.CCall2(__imp_gr_direct_context_flush_image.Addr(), bindlib.MarshallSyscall(context), bindlib.MarshallSyscall(image))
}

var __imp_gr_direct_context_flush_surface bindlib.PreloadProc

func GrDirectContextFlushSurface(context unsafe.Pointer, surface unsafe.Pointer) {
	bindlib.CCall2(__imp_gr_direct_context_flush_surface.Addr(), bindlib.MarshallSyscall(context), bindlib.MarshallSyscall(surface))
}

var __imp_gr_direct_context_reset_context bindlib.PreloadProc

func GrDirectContextResetContext(context unsafe.Pointer, state int32) {
	bindlib.CCall2(__imp_gr_direct_context_reset_context.Addr(), bindlib.MarshallSyscall(context), bindlib.MarshallSyscall(state))
}

var __imp_gr_direct_context_dump_memory_statistics bindlib.PreloadProc

func GrDirectContextDumpMemoryStatistics(context unsafe.Pointer, dump unsafe.Pointer) {
	bindlib.CCall2(__imp_gr_direct_context_dump_memory_statistics.Addr(), bindlib.MarshallSyscall(context), bindlib.MarshallSyscall(dump))
}

var __imp_gr_direct_context_free_gpu_resources bindlib.PreloadProc

func GrDirectContextFreeGpuResources(context unsafe.Pointer) {
	bindlib.CCall1(__imp_gr_direct_context_free_gpu_resources.Addr(), bindlib.MarshallSyscall(context))
}

var __imp_gr_direct_context_perform_deferred_cleanup bindlib.PreloadProc

func GrDirectContextPerformDeferredCleanup(context unsafe.Pointer, ms int64) {
	bindlib.CCall2(__imp_gr_direct_context_perform_deferred_cleanup.Addr(), bindlib.MarshallSyscall(context), bindlib.MarshallSyscall(ms))
}

var __imp_gr_direct_context_purge_unlocked_resources_bytes bindlib.PreloadProc

func GrDirectContextPurgeUnlockedResourcesBytes(context unsafe.Pointer, bytesToPurge uint, preferScratchResources bool) {
	bindlib.CCall3(__imp_gr_direct_context_purge_unlocked_resources_bytes.Addr(), bindlib.MarshallSyscall(context), bindlib.MarshallSyscall(bytesToPurge), bindlib.MarshallSyscall(preferScratchResources))
}

var __imp_gr_direct_context_purge_unlocked_resources bindlib.PreloadProc

func GrDirectContextPurgeUnlockedResources(context unsafe.Pointer, scratchResourcesOnly bool) {
	bindlib.CCall2(__imp_gr_direct_context_purge_unlocked_resources.Addr(), bindlib.MarshallSyscall(context), bindlib.MarshallSyscall(scratchResourcesOnly))
}

var __imp_gr_glinterface_create_native_interface bindlib.PreloadProc

func GrGlinterfaceCreateNativeInterface() unsafe.Pointer {
	__res := bindlib.CCall0(__imp_gr_glinterface_create_native_interface.Addr())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_gr_glinterface_assemble_interface bindlib.PreloadProc

func GrGlinterfaceAssembleInterface(ctx unsafe.Pointer, get GrGlGetProc) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_gr_glinterface_assemble_interface.Addr(), bindlib.MarshallSyscall(ctx), bindlib.MarshallSyscall(get))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_gr_glinterface_assemble_gl_interface bindlib.PreloadProc

func GrGlinterfaceAssembleGlInterface(ctx unsafe.Pointer, get GrGlGetProc) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_gr_glinterface_assemble_gl_interface.Addr(), bindlib.MarshallSyscall(ctx), bindlib.MarshallSyscall(get))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_gr_glinterface_assemble_gles_interface bindlib.PreloadProc

func GrGlinterfaceAssembleGlesInterface(ctx unsafe.Pointer, get GrGlGetProc) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_gr_glinterface_assemble_gles_interface.Addr(), bindlib.MarshallSyscall(ctx), bindlib.MarshallSyscall(get))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_gr_glinterface_assemble_webgl_interface bindlib.PreloadProc

func GrGlinterfaceAssembleWebglInterface(ctx unsafe.Pointer, get GrGlGetProc) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_gr_glinterface_assemble_webgl_interface.Addr(), bindlib.MarshallSyscall(ctx), bindlib.MarshallSyscall(get))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_gr_glinterface_unref bindlib.PreloadProc

func GrGlinterfaceUnref(glInterface unsafe.Pointer) {
	bindlib.CCall1(__imp_gr_glinterface_unref.Addr(), bindlib.MarshallSyscall(glInterface))
}

var __imp_gr_glinterface_validate bindlib.PreloadProc

func GrGlinterfaceValidate(glInterface unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_gr_glinterface_validate.Addr(), bindlib.MarshallSyscall(glInterface))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_gr_glinterface_has_extension bindlib.PreloadProc

func GrGlinterfaceHasExtension(glInterface unsafe.Pointer, extension *byte) bool {
	__res := bindlib.CCall2(__imp_gr_glinterface_has_extension.Addr(), bindlib.MarshallSyscall(glInterface), bindlib.MarshallSyscall(extension))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_gr_vk_extensions_new bindlib.PreloadProc

func GrVkExtensionsNew() unsafe.Pointer {
	__res := bindlib.CCall0(__imp_gr_vk_extensions_new.Addr())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_gr_vk_extensions_delete bindlib.PreloadProc

func GrVkExtensionsDelete(extensions unsafe.Pointer) {
	bindlib.CCall1(__imp_gr_vk_extensions_delete.Addr(), bindlib.MarshallSyscall(extensions))
}

var __imp_gr_vk_extensions_init bindlib.PreloadProc

func GrVkExtensionsInit(extensions unsafe.Pointer, getProc GrVkGetProc, userData unsafe.Pointer, instance unsafe.Pointer, physDev unsafe.Pointer, instanceExtensionCount int32, instanceExtensions **byte, deviceExtensionCount int32, deviceExtensions **byte) {
	bindlib.CCall9(__imp_gr_vk_extensions_init.Addr(), bindlib.MarshallSyscall(extensions), bindlib.MarshallSyscall(getProc), bindlib.MarshallSyscall(userData), bindlib.MarshallSyscall(instance), bindlib.MarshallSyscall(physDev), bindlib.MarshallSyscall(instanceExtensionCount), bindlib.MarshallSyscall(instanceExtensions), bindlib.MarshallSyscall(deviceExtensionCount), bindlib.MarshallSyscall(deviceExtensions))
}

var __imp_gr_vk_extensions_has_extension bindlib.PreloadProc

func GrVkExtensionsHasExtension(extensions unsafe.Pointer, ext *byte, minVersion int32) bool {
	__res := bindlib.CCall3(__imp_gr_vk_extensions_has_extension.Addr(), bindlib.MarshallSyscall(extensions), bindlib.MarshallSyscall(ext), bindlib.MarshallSyscall(minVersion))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_gr_backendtexture_new_gl bindlib.PreloadProc

func GrBackendtextureNewGl(width int32, height int32, mipmapped bool, glInfo unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall4(__imp_gr_backendtexture_new_gl.Addr(), bindlib.MarshallSyscall(width), bindlib.MarshallSyscall(height), bindlib.MarshallSyscall(mipmapped), bindlib.MarshallSyscall(glInfo))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_gr_backendtexture_new_vulkan bindlib.PreloadProc

func GrBackendtextureNewVulkan(width int32, height int32, vkInfo *GrVkImageinfoT) unsafe.Pointer {
	__res := bindlib.CCall3(__imp_gr_backendtexture_new_vulkan.Addr(), bindlib.MarshallSyscall(width), bindlib.MarshallSyscall(height), bindlib.MarshallSyscall(vkInfo))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_gr_backendtexture_new_metal bindlib.PreloadProc

func GrBackendtextureNewMetal(width int32, height int32, mipmapped bool, mtlInfo unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall4(__imp_gr_backendtexture_new_metal.Addr(), bindlib.MarshallSyscall(width), bindlib.MarshallSyscall(height), bindlib.MarshallSyscall(mipmapped), bindlib.MarshallSyscall(mtlInfo))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_gr_backendtexture_delete bindlib.PreloadProc

func GrBackendtextureDelete(texture unsafe.Pointer) {
	bindlib.CCall1(__imp_gr_backendtexture_delete.Addr(), bindlib.MarshallSyscall(texture))
}

var __imp_gr_backendtexture_is_valid bindlib.PreloadProc

func GrBackendtextureIsValid(texture unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_gr_backendtexture_is_valid.Addr(), bindlib.MarshallSyscall(texture))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_gr_backendtexture_get_width bindlib.PreloadProc

func GrBackendtextureGetWidth(texture unsafe.Pointer) int32 {
	__res := bindlib.CCall1(__imp_gr_backendtexture_get_width.Addr(), bindlib.MarshallSyscall(texture))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_gr_backendtexture_get_height bindlib.PreloadProc

func GrBackendtextureGetHeight(texture unsafe.Pointer) int32 {
	__res := bindlib.CCall1(__imp_gr_backendtexture_get_height.Addr(), bindlib.MarshallSyscall(texture))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_gr_backendtexture_has_mipmaps bindlib.PreloadProc

func GrBackendtextureHasMipmaps(texture unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_gr_backendtexture_has_mipmaps.Addr(), bindlib.MarshallSyscall(texture))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_gr_backendtexture_get_backend bindlib.PreloadProc

func GrBackendtextureGetBackend(texture unsafe.Pointer) GrBackendT {
	__res := bindlib.CCall1(__imp_gr_backendtexture_get_backend.Addr(), bindlib.MarshallSyscall(texture))
	return bindlib.UnmarshallSyscall[GrBackendT](__res)
}

var __imp_gr_backendtexture_get_gl_textureinfo bindlib.PreloadProc

func GrBackendtextureGetGlTextureinfo(texture unsafe.Pointer, glInfo unsafe.Pointer) bool {
	__res := bindlib.CCall2(__imp_gr_backendtexture_get_gl_textureinfo.Addr(), bindlib.MarshallSyscall(texture), bindlib.MarshallSyscall(glInfo))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_gr_backendrendertarget_new_gl bindlib.PreloadProc

func GrBackendrendertargetNewGl(width int32, height int32, samples int32, stencils int32, glInfo unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall5(__imp_gr_backendrendertarget_new_gl.Addr(), bindlib.MarshallSyscall(width), bindlib.MarshallSyscall(height), bindlib.MarshallSyscall(samples), bindlib.MarshallSyscall(stencils), bindlib.MarshallSyscall(glInfo))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_gr_backendrendertarget_new_vulkan bindlib.PreloadProc

func GrBackendrendertargetNewVulkan(width int32, height int32, samples int32, vkImageInfo *GrVkImageinfoT) unsafe.Pointer {
	__res := bindlib.CCall4(__imp_gr_backendrendertarget_new_vulkan.Addr(), bindlib.MarshallSyscall(width), bindlib.MarshallSyscall(height), bindlib.MarshallSyscall(samples), bindlib.MarshallSyscall(vkImageInfo))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_gr_backendrendertarget_new_metal bindlib.PreloadProc

func GrBackendrendertargetNewMetal(width int32, height int32, samples int32, mtlInfo unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall4(__imp_gr_backendrendertarget_new_metal.Addr(), bindlib.MarshallSyscall(width), bindlib.MarshallSyscall(height), bindlib.MarshallSyscall(samples), bindlib.MarshallSyscall(mtlInfo))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_gr_backendrendertarget_delete bindlib.PreloadProc

func GrBackendrendertargetDelete(rendertarget unsafe.Pointer) {
	bindlib.CCall1(__imp_gr_backendrendertarget_delete.Addr(), bindlib.MarshallSyscall(rendertarget))
}

var __imp_gr_backendrendertarget_is_valid bindlib.PreloadProc

func GrBackendrendertargetIsValid(rendertarget unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_gr_backendrendertarget_is_valid.Addr(), bindlib.MarshallSyscall(rendertarget))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_gr_backendrendertarget_get_width bindlib.PreloadProc

func GrBackendrendertargetGetWidth(rendertarget unsafe.Pointer) int32 {
	__res := bindlib.CCall1(__imp_gr_backendrendertarget_get_width.Addr(), bindlib.MarshallSyscall(rendertarget))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_gr_backendrendertarget_get_height bindlib.PreloadProc

func GrBackendrendertargetGetHeight(rendertarget unsafe.Pointer) int32 {
	__res := bindlib.CCall1(__imp_gr_backendrendertarget_get_height.Addr(), bindlib.MarshallSyscall(rendertarget))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_gr_backendrendertarget_get_samples bindlib.PreloadProc

func GrBackendrendertargetGetSamples(rendertarget unsafe.Pointer) int32 {
	__res := bindlib.CCall1(__imp_gr_backendrendertarget_get_samples.Addr(), bindlib.MarshallSyscall(rendertarget))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_gr_backendrendertarget_get_stencils bindlib.PreloadProc

func GrBackendrendertargetGetStencils(rendertarget unsafe.Pointer) int32 {
	__res := bindlib.CCall1(__imp_gr_backendrendertarget_get_stencils.Addr(), bindlib.MarshallSyscall(rendertarget))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_gr_backendrendertarget_get_backend bindlib.PreloadProc

func GrBackendrendertargetGetBackend(rendertarget unsafe.Pointer) GrBackendT {
	__res := bindlib.CCall1(__imp_gr_backendrendertarget_get_backend.Addr(), bindlib.MarshallSyscall(rendertarget))
	return bindlib.UnmarshallSyscall[GrBackendT](__res)
}

var __imp_gr_backendrendertarget_get_gl_framebufferinfo bindlib.PreloadProc

func GrBackendrendertargetGetGlFramebufferinfo(rendertarget unsafe.Pointer, glInfo unsafe.Pointer) bool {
	__res := bindlib.CCall2(__imp_gr_backendrendertarget_get_gl_framebufferinfo.Addr(), bindlib.MarshallSyscall(rendertarget), bindlib.MarshallSyscall(glInfo))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_bitmap_destructor bindlib.PreloadProc

func SkBitmapDestructor(cbitmap unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_bitmap_destructor.Addr(), bindlib.MarshallSyscall(cbitmap))
}

var __imp_sk_bitmap_new bindlib.PreloadProc

func SkBitmapNew() unsafe.Pointer {
	__res := bindlib.CCall0(__imp_sk_bitmap_new.Addr())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_bitmap_get_info bindlib.PreloadProc

func SkBitmapGetInfo(cbitmap unsafe.Pointer, info *SkImageinfoT) {
	bindlib.CCall2(__imp_sk_bitmap_get_info.Addr(), bindlib.MarshallSyscall(cbitmap), bindlib.MarshallSyscall(info))
}

var __imp_sk_bitmap_get_pixels bindlib.PreloadProc

func SkBitmapGetPixels(cbitmap unsafe.Pointer, length *uint) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_bitmap_get_pixels.Addr(), bindlib.MarshallSyscall(cbitmap), bindlib.MarshallSyscall(length))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_bitmap_get_row_bytes bindlib.PreloadProc

func SkBitmapGetRowBytes(cbitmap unsafe.Pointer) uint {
	__res := bindlib.CCall1(__imp_sk_bitmap_get_row_bytes.Addr(), bindlib.MarshallSyscall(cbitmap))
	return bindlib.UnmarshallSyscall[uint](__res)
}

var __imp_sk_bitmap_get_byte_count bindlib.PreloadProc

func SkBitmapGetByteCount(cbitmap unsafe.Pointer) uint {
	__res := bindlib.CCall1(__imp_sk_bitmap_get_byte_count.Addr(), bindlib.MarshallSyscall(cbitmap))
	return bindlib.UnmarshallSyscall[uint](__res)
}

var __imp_sk_bitmap_reset bindlib.PreloadProc

func SkBitmapReset(cbitmap unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_bitmap_reset.Addr(), bindlib.MarshallSyscall(cbitmap))
}

var __imp_sk_bitmap_is_null bindlib.PreloadProc

func SkBitmapIsNull(cbitmap unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_bitmap_is_null.Addr(), bindlib.MarshallSyscall(cbitmap))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_bitmap_is_immutable bindlib.PreloadProc

func SkBitmapIsImmutable(cbitmap unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_bitmap_is_immutable.Addr(), bindlib.MarshallSyscall(cbitmap))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_bitmap_set_immutable bindlib.PreloadProc

func SkBitmapSetImmutable(cbitmap unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_bitmap_set_immutable.Addr(), bindlib.MarshallSyscall(cbitmap))
}

var __imp_sk_bitmap_erase bindlib.PreloadProc

func SkBitmapErase(cbitmap unsafe.Pointer, color SkColorT) {
	bindlib.CCall2(__imp_sk_bitmap_erase.Addr(), bindlib.MarshallSyscall(cbitmap), bindlib.MarshallSyscall(color))
}

var __imp_sk_bitmap_erase_rect bindlib.PreloadProc

func SkBitmapEraseRect(cbitmap unsafe.Pointer, color SkColorT, rect *SkIrectT) {
	bindlib.CCall3(__imp_sk_bitmap_erase_rect.Addr(), bindlib.MarshallSyscall(cbitmap), bindlib.MarshallSyscall(color), bindlib.MarshallSyscall(rect))
}

var __imp_sk_bitmap_get_addr_8 bindlib.PreloadProc

func SkBitmapGetAddr8(cbitmap unsafe.Pointer, x int32, y int32) *int32 {
	__res := bindlib.CCall3(__imp_sk_bitmap_get_addr_8.Addr(), bindlib.MarshallSyscall(cbitmap), bindlib.MarshallSyscall(x), bindlib.MarshallSyscall(y))
	return bindlib.UnmarshallSyscall[*int32](__res)
}

var __imp_sk_bitmap_get_addr_16 bindlib.PreloadProc

func SkBitmapGetAddr16(cbitmap unsafe.Pointer, x int32, y int32) *int32 {
	__res := bindlib.CCall3(__imp_sk_bitmap_get_addr_16.Addr(), bindlib.MarshallSyscall(cbitmap), bindlib.MarshallSyscall(x), bindlib.MarshallSyscall(y))
	return bindlib.UnmarshallSyscall[*int32](__res)
}

var __imp_sk_bitmap_get_addr_32 bindlib.PreloadProc

func SkBitmapGetAddr32(cbitmap unsafe.Pointer, x int32, y int32) *int32 {
	__res := bindlib.CCall3(__imp_sk_bitmap_get_addr_32.Addr(), bindlib.MarshallSyscall(cbitmap), bindlib.MarshallSyscall(x), bindlib.MarshallSyscall(y))
	return bindlib.UnmarshallSyscall[*int32](__res)
}

var __imp_sk_bitmap_get_addr bindlib.PreloadProc

func SkBitmapGetAddr(cbitmap unsafe.Pointer, x int32, y int32) unsafe.Pointer {
	__res := bindlib.CCall3(__imp_sk_bitmap_get_addr.Addr(), bindlib.MarshallSyscall(cbitmap), bindlib.MarshallSyscall(x), bindlib.MarshallSyscall(y))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_bitmap_get_pixel_color bindlib.PreloadProc

func SkBitmapGetPixelColor(cbitmap unsafe.Pointer, x int32, y int32) SkColorT {
	__res := bindlib.CCall3(__imp_sk_bitmap_get_pixel_color.Addr(), bindlib.MarshallSyscall(cbitmap), bindlib.MarshallSyscall(x), bindlib.MarshallSyscall(y))
	return bindlib.UnmarshallSyscall[SkColorT](__res)
}

var __imp_sk_bitmap_ready_to_draw bindlib.PreloadProc

func SkBitmapReadyToDraw(cbitmap unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_bitmap_ready_to_draw.Addr(), bindlib.MarshallSyscall(cbitmap))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_bitmap_get_pixel_colors bindlib.PreloadProc

func SkBitmapGetPixelColors(cbitmap unsafe.Pointer, colors *SkColorT) {
	bindlib.CCall2(__imp_sk_bitmap_get_pixel_colors.Addr(), bindlib.MarshallSyscall(cbitmap), bindlib.MarshallSyscall(colors))
}

var __imp_sk_bitmap_install_pixels bindlib.PreloadProc

func SkBitmapInstallPixels(cbitmap unsafe.Pointer, cinfo *SkImageinfoT, pixels unsafe.Pointer, rowBytes uint, releaseProc SkBitmapReleaseProc, context unsafe.Pointer) bool {
	__res := bindlib.CCall6(__imp_sk_bitmap_install_pixels.Addr(), bindlib.MarshallSyscall(cbitmap), bindlib.MarshallSyscall(cinfo), bindlib.MarshallSyscall(pixels), bindlib.MarshallSyscall(rowBytes), bindlib.MarshallSyscall(releaseProc), bindlib.MarshallSyscall(context))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_bitmap_install_pixels_with_pixmap bindlib.PreloadProc

func SkBitmapInstallPixelsWithPixmap(cbitmap unsafe.Pointer, cpixmap unsafe.Pointer) bool {
	__res := bindlib.CCall2(__imp_sk_bitmap_install_pixels_with_pixmap.Addr(), bindlib.MarshallSyscall(cbitmap), bindlib.MarshallSyscall(cpixmap))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_bitmap_try_alloc_pixels bindlib.PreloadProc

func SkBitmapTryAllocPixels(cbitmap unsafe.Pointer, requestedInfo *SkImageinfoT, rowBytes uint) bool {
	__res := bindlib.CCall3(__imp_sk_bitmap_try_alloc_pixels.Addr(), bindlib.MarshallSyscall(cbitmap), bindlib.MarshallSyscall(requestedInfo), bindlib.MarshallSyscall(rowBytes))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_bitmap_try_alloc_pixels_with_flags bindlib.PreloadProc

func SkBitmapTryAllocPixelsWithFlags(cbitmap unsafe.Pointer, requestedInfo *SkImageinfoT, flags int32) bool {
	__res := bindlib.CCall3(__imp_sk_bitmap_try_alloc_pixels_with_flags.Addr(), bindlib.MarshallSyscall(cbitmap), bindlib.MarshallSyscall(requestedInfo), bindlib.MarshallSyscall(flags))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_bitmap_set_pixels bindlib.PreloadProc

func SkBitmapSetPixels(cbitmap unsafe.Pointer, pixels unsafe.Pointer) {
	bindlib.CCall2(__imp_sk_bitmap_set_pixels.Addr(), bindlib.MarshallSyscall(cbitmap), bindlib.MarshallSyscall(pixels))
}

var __imp_sk_bitmap_peek_pixels bindlib.PreloadProc

func SkBitmapPeekPixels(cbitmap unsafe.Pointer, cpixmap unsafe.Pointer) bool {
	__res := bindlib.CCall2(__imp_sk_bitmap_peek_pixels.Addr(), bindlib.MarshallSyscall(cbitmap), bindlib.MarshallSyscall(cpixmap))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_bitmap_extract_subset bindlib.PreloadProc

func SkBitmapExtractSubset(cbitmap unsafe.Pointer, dst unsafe.Pointer, subset *SkIrectT) bool {
	__res := bindlib.CCall3(__imp_sk_bitmap_extract_subset.Addr(), bindlib.MarshallSyscall(cbitmap), bindlib.MarshallSyscall(dst), bindlib.MarshallSyscall(subset))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_bitmap_extract_alpha bindlib.PreloadProc

func SkBitmapExtractAlpha(cbitmap unsafe.Pointer, dst unsafe.Pointer, paint unsafe.Pointer, offset *SkIpointT) bool {
	__res := bindlib.CCall4(__imp_sk_bitmap_extract_alpha.Addr(), bindlib.MarshallSyscall(cbitmap), bindlib.MarshallSyscall(dst), bindlib.MarshallSyscall(paint), bindlib.MarshallSyscall(offset))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_bitmap_notify_pixels_changed bindlib.PreloadProc

func SkBitmapNotifyPixelsChanged(cbitmap unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_bitmap_notify_pixels_changed.Addr(), bindlib.MarshallSyscall(cbitmap))
}

var __imp_sk_bitmap_swap bindlib.PreloadProc

func SkBitmapSwap(cbitmap unsafe.Pointer, cother unsafe.Pointer) {
	bindlib.CCall2(__imp_sk_bitmap_swap.Addr(), bindlib.MarshallSyscall(cbitmap), bindlib.MarshallSyscall(cother))
}

var __imp_sk_bitmap_make_shader bindlib.PreloadProc

func SkBitmapMakeShader(cbitmap unsafe.Pointer, tmx SkShaderTilemodeT, tmy SkShaderTilemodeT, sampling unsafe.Pointer, cmatrix unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall5(__imp_sk_bitmap_make_shader.Addr(), bindlib.MarshallSyscall(cbitmap), bindlib.MarshallSyscall(tmx), bindlib.MarshallSyscall(tmy), bindlib.MarshallSyscall(sampling), bindlib.MarshallSyscall(cmatrix))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_blender_ref bindlib.PreloadProc

func SkBlenderRef(blender unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_blender_ref.Addr(), bindlib.MarshallSyscall(blender))
}

var __imp_sk_blender_unref bindlib.PreloadProc

func SkBlenderUnref(blender unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_blender_unref.Addr(), bindlib.MarshallSyscall(blender))
}

var __imp_sk_blender_new_mode bindlib.PreloadProc

func SkBlenderNewMode(mode SkBlendmodeT) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_blender_new_mode.Addr(), bindlib.MarshallSyscall(mode))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_blender_new_arithmetic bindlib.PreloadProc

func SkBlenderNewArithmetic(k1 float32, k2 float32, k3 float32, k4 float32, enforcePremul bool) unsafe.Pointer {
	__res := bindlib.CCall5(__imp_sk_blender_new_arithmetic.Addr(), bindlib.MarshallSyscall(k1), bindlib.MarshallSyscall(k2), bindlib.MarshallSyscall(k3), bindlib.MarshallSyscall(k4), bindlib.MarshallSyscall(enforcePremul))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_canvas_destroy bindlib.PreloadProc

func SkCanvasDestroy(ccanvas unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_canvas_destroy.Addr(), bindlib.MarshallSyscall(ccanvas))
}

var __imp_sk_canvas_clear bindlib.PreloadProc

func SkCanvasClear(ccanvas unsafe.Pointer, color SkColorT) {
	bindlib.CCall2(__imp_sk_canvas_clear.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(color))
}

var __imp_sk_canvas_clear_color4f bindlib.PreloadProc

func SkCanvasClearColor4f(ccanvas unsafe.Pointer, color any) {
	bindlib.CCall2(__imp_sk_canvas_clear_color4f.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(color))
}

var __imp_sk_canvas_discard bindlib.PreloadProc

func SkCanvasDiscard(ccanvas unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_canvas_discard.Addr(), bindlib.MarshallSyscall(ccanvas))
}

var __imp_sk_canvas_get_save_count bindlib.PreloadProc

func SkCanvasGetSaveCount(ccanvas unsafe.Pointer) int32 {
	__res := bindlib.CCall1(__imp_sk_canvas_get_save_count.Addr(), bindlib.MarshallSyscall(ccanvas))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_canvas_restore_to_count bindlib.PreloadProc

func SkCanvasRestoreToCount(ccanvas unsafe.Pointer, saveCount int32) {
	bindlib.CCall2(__imp_sk_canvas_restore_to_count.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(saveCount))
}

var __imp_sk_canvas_draw_color bindlib.PreloadProc

func SkCanvasDrawColor(ccanvas unsafe.Pointer, color SkColorT, cmode SkBlendmodeT) {
	bindlib.CCall3(__imp_sk_canvas_draw_color.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(color), bindlib.MarshallSyscall(cmode))
}

var __imp_sk_canvas_draw_color4f bindlib.PreloadProc

func SkCanvasDrawColor4f(ccanvas unsafe.Pointer, color any, cmode SkBlendmodeT) {
	bindlib.CCall3(__imp_sk_canvas_draw_color4f.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(color), bindlib.MarshallSyscall(cmode))
}

var __imp_sk_canvas_draw_points bindlib.PreloadProc

func SkCanvasDrawPoints(ccanvas unsafe.Pointer, pointMode SkPointModeT, count uint, points unsafe.Pointer, cpaint unsafe.Pointer) {
	bindlib.CCall5(__imp_sk_canvas_draw_points.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(pointMode), bindlib.MarshallSyscall(count), bindlib.MarshallSyscall(points), bindlib.MarshallSyscall(cpaint))
}

var __imp_sk_canvas_draw_point bindlib.PreloadProc

func SkCanvasDrawPoint(ccanvas unsafe.Pointer, x float32, y float32, cpaint unsafe.Pointer) {
	bindlib.CCall4(__imp_sk_canvas_draw_point.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(x), bindlib.MarshallSyscall(y), bindlib.MarshallSyscall(cpaint))
}

var __imp_sk_canvas_draw_line bindlib.PreloadProc

func SkCanvasDrawLine(ccanvas unsafe.Pointer, x0 float32, y0 float32, x1 float32, y1 float32, cpaint unsafe.Pointer) {
	bindlib.CCall6(__imp_sk_canvas_draw_line.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(x0), bindlib.MarshallSyscall(y0), bindlib.MarshallSyscall(x1), bindlib.MarshallSyscall(y1), bindlib.MarshallSyscall(cpaint))
}

var __imp_sk_canvas_draw_simple_text bindlib.PreloadProc

func SkCanvasDrawSimpleText(ccanvas unsafe.Pointer, text unsafe.Pointer, byte_length uint, encoding SkTextEncodingT, x float32, y float32, cfont unsafe.Pointer, cpaint unsafe.Pointer) {
	bindlib.CCall8(__imp_sk_canvas_draw_simple_text.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(text), bindlib.MarshallSyscall(byte_length), bindlib.MarshallSyscall(encoding), bindlib.MarshallSyscall(x), bindlib.MarshallSyscall(y), bindlib.MarshallSyscall(cfont), bindlib.MarshallSyscall(cpaint))
}

var __imp_sk_canvas_draw_text_blob bindlib.PreloadProc

func SkCanvasDrawTextBlob(ccanvas unsafe.Pointer, text unsafe.Pointer, x float32, y float32, cpaint unsafe.Pointer) {
	bindlib.CCall5(__imp_sk_canvas_draw_text_blob.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(text), bindlib.MarshallSyscall(x), bindlib.MarshallSyscall(y), bindlib.MarshallSyscall(cpaint))
}

var __imp_sk_canvas_reset_matrix bindlib.PreloadProc

func SkCanvasResetMatrix(ccanvas unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_canvas_reset_matrix.Addr(), bindlib.MarshallSyscall(ccanvas))
}

var __imp_sk_canvas_set_matrix bindlib.PreloadProc

func SkCanvasSetMatrix(ccanvas unsafe.Pointer, cmatrix unsafe.Pointer) {
	bindlib.CCall2(__imp_sk_canvas_set_matrix.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(cmatrix))
}

var __imp_sk_canvas_get_matrix bindlib.PreloadProc

func SkCanvasGetMatrix(ccanvas unsafe.Pointer, cmatrix unsafe.Pointer) {
	bindlib.CCall2(__imp_sk_canvas_get_matrix.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(cmatrix))
}

var __imp_sk_canvas_draw_round_rect bindlib.PreloadProc

func SkCanvasDrawRoundRect(ccanvas unsafe.Pointer, crect unsafe.Pointer, rx float32, ry float32, cpaint unsafe.Pointer) {
	bindlib.CCall5(__imp_sk_canvas_draw_round_rect.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(crect), bindlib.MarshallSyscall(rx), bindlib.MarshallSyscall(ry), bindlib.MarshallSyscall(cpaint))
}

var __imp_sk_canvas_clip_rect_with_operation bindlib.PreloadProc

func SkCanvasClipRectWithOperation(ccanvas unsafe.Pointer, crect unsafe.Pointer, op SkClipopT, doAA bool) {
	bindlib.CCall4(__imp_sk_canvas_clip_rect_with_operation.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(crect), bindlib.MarshallSyscall(op), bindlib.MarshallSyscall(doAA))
}

var __imp_sk_canvas_clip_path_with_operation bindlib.PreloadProc

func SkCanvasClipPathWithOperation(ccanvas unsafe.Pointer, cpath unsafe.Pointer, op SkClipopT, doAA bool) {
	bindlib.CCall4(__imp_sk_canvas_clip_path_with_operation.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(cpath), bindlib.MarshallSyscall(op), bindlib.MarshallSyscall(doAA))
}

var __imp_sk_canvas_clip_rrect_with_operation bindlib.PreloadProc

func SkCanvasClipRrectWithOperation(ccanvas unsafe.Pointer, crect unsafe.Pointer, op SkClipopT, doAA bool) {
	bindlib.CCall4(__imp_sk_canvas_clip_rrect_with_operation.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(crect), bindlib.MarshallSyscall(op), bindlib.MarshallSyscall(doAA))
}

var __imp_sk_canvas_get_local_clip_bounds bindlib.PreloadProc

func SkCanvasGetLocalClipBounds(ccanvas unsafe.Pointer, cbounds unsafe.Pointer) bool {
	__res := bindlib.CCall2(__imp_sk_canvas_get_local_clip_bounds.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(cbounds))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_canvas_get_device_clip_bounds bindlib.PreloadProc

func SkCanvasGetDeviceClipBounds(ccanvas unsafe.Pointer, cbounds *SkIrectT) bool {
	__res := bindlib.CCall2(__imp_sk_canvas_get_device_clip_bounds.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(cbounds))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_canvas_save bindlib.PreloadProc

func SkCanvasSave(ccanvas unsafe.Pointer) int32 {
	__res := bindlib.CCall1(__imp_sk_canvas_save.Addr(), bindlib.MarshallSyscall(ccanvas))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_canvas_save_layer bindlib.PreloadProc

func SkCanvasSaveLayer(ccanvas unsafe.Pointer, crect unsafe.Pointer, cpaint unsafe.Pointer) int32 {
	__res := bindlib.CCall3(__imp_sk_canvas_save_layer.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(crect), bindlib.MarshallSyscall(cpaint))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_canvas_restore bindlib.PreloadProc

func SkCanvasRestore(ccanvas unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_canvas_restore.Addr(), bindlib.MarshallSyscall(ccanvas))
}

var __imp_sk_canvas_translate bindlib.PreloadProc

func SkCanvasTranslate(ccanvas unsafe.Pointer, dx float32, dy float32) {
	bindlib.CCall3(__imp_sk_canvas_translate.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(dx), bindlib.MarshallSyscall(dy))
}

var __imp_sk_canvas_scale bindlib.PreloadProc

func SkCanvasScale(ccanvas unsafe.Pointer, sx float32, sy float32) {
	bindlib.CCall3(__imp_sk_canvas_scale.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(sx), bindlib.MarshallSyscall(sy))
}

var __imp_sk_canvas_rotate_degrees bindlib.PreloadProc

func SkCanvasRotateDegrees(ccanvas unsafe.Pointer, degrees float32) {
	bindlib.CCall2(__imp_sk_canvas_rotate_degrees.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(degrees))
}

var __imp_sk_canvas_rotate_radians bindlib.PreloadProc

func SkCanvasRotateRadians(ccanvas unsafe.Pointer, radians float32) {
	bindlib.CCall2(__imp_sk_canvas_rotate_radians.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(radians))
}

var __imp_sk_canvas_skew bindlib.PreloadProc

func SkCanvasSkew(ccanvas unsafe.Pointer, sx float32, sy float32) {
	bindlib.CCall3(__imp_sk_canvas_skew.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(sx), bindlib.MarshallSyscall(sy))
}

var __imp_sk_canvas_concat bindlib.PreloadProc

func SkCanvasConcat(ccanvas unsafe.Pointer, cmatrix unsafe.Pointer) {
	bindlib.CCall2(__imp_sk_canvas_concat.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(cmatrix))
}

var __imp_sk_canvas_quick_reject bindlib.PreloadProc

func SkCanvasQuickReject(ccanvas unsafe.Pointer, crect unsafe.Pointer) bool {
	__res := bindlib.CCall2(__imp_sk_canvas_quick_reject.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(crect))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_canvas_clip_region bindlib.PreloadProc

func SkCanvasClipRegion(ccanvas unsafe.Pointer, region unsafe.Pointer, op SkClipopT) {
	bindlib.CCall3(__imp_sk_canvas_clip_region.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(region), bindlib.MarshallSyscall(op))
}

var __imp_sk_canvas_draw_paint bindlib.PreloadProc

func SkCanvasDrawPaint(ccanvas unsafe.Pointer, cpaint unsafe.Pointer) {
	bindlib.CCall2(__imp_sk_canvas_draw_paint.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(cpaint))
}

var __imp_sk_canvas_draw_region bindlib.PreloadProc

func SkCanvasDrawRegion(ccanvas unsafe.Pointer, cregion unsafe.Pointer, cpaint unsafe.Pointer) {
	bindlib.CCall3(__imp_sk_canvas_draw_region.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(cregion), bindlib.MarshallSyscall(cpaint))
}

var __imp_sk_canvas_draw_rect bindlib.PreloadProc

func SkCanvasDrawRect(ccanvas unsafe.Pointer, crect unsafe.Pointer, cpaint unsafe.Pointer) {
	bindlib.CCall3(__imp_sk_canvas_draw_rect.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(crect), bindlib.MarshallSyscall(cpaint))
}

var __imp_sk_canvas_draw_rrect bindlib.PreloadProc

func SkCanvasDrawRrect(ccanvas unsafe.Pointer, crect unsafe.Pointer, cpaint unsafe.Pointer) {
	bindlib.CCall3(__imp_sk_canvas_draw_rrect.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(crect), bindlib.MarshallSyscall(cpaint))
}

var __imp_sk_canvas_draw_circle bindlib.PreloadProc

func SkCanvasDrawCircle(ccanvas unsafe.Pointer, cx float32, cy float32, rad float32, cpaint unsafe.Pointer) {
	bindlib.CCall5(__imp_sk_canvas_draw_circle.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(cx), bindlib.MarshallSyscall(cy), bindlib.MarshallSyscall(rad), bindlib.MarshallSyscall(cpaint))
}

var __imp_sk_canvas_draw_oval bindlib.PreloadProc

func SkCanvasDrawOval(ccanvas unsafe.Pointer, crect unsafe.Pointer, cpaint unsafe.Pointer) {
	bindlib.CCall3(__imp_sk_canvas_draw_oval.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(crect), bindlib.MarshallSyscall(cpaint))
}

var __imp_sk_canvas_draw_path bindlib.PreloadProc

func SkCanvasDrawPath(ccanvas unsafe.Pointer, cpath unsafe.Pointer, cpaint unsafe.Pointer) {
	bindlib.CCall3(__imp_sk_canvas_draw_path.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(cpath), bindlib.MarshallSyscall(cpaint))
}

var __imp_sk_canvas_draw_image bindlib.PreloadProc

func SkCanvasDrawImage(ccanvas unsafe.Pointer, cimage unsafe.Pointer, x float32, y float32, sampling unsafe.Pointer, cpaint unsafe.Pointer) {
	bindlib.CCall6(__imp_sk_canvas_draw_image.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(cimage), bindlib.MarshallSyscall(x), bindlib.MarshallSyscall(y), bindlib.MarshallSyscall(sampling), bindlib.MarshallSyscall(cpaint))
}

var __imp_sk_canvas_draw_image_rect bindlib.PreloadProc

func SkCanvasDrawImageRect(ccanvas unsafe.Pointer, cimage unsafe.Pointer, csrcR unsafe.Pointer, cdstR unsafe.Pointer, sampling unsafe.Pointer, cpaint unsafe.Pointer) {
	bindlib.CCall6(__imp_sk_canvas_draw_image_rect.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(cimage), bindlib.MarshallSyscall(csrcR), bindlib.MarshallSyscall(cdstR), bindlib.MarshallSyscall(sampling), bindlib.MarshallSyscall(cpaint))
}

var __imp_sk_canvas_draw_picture bindlib.PreloadProc

func SkCanvasDrawPicture(ccanvas unsafe.Pointer, cpicture unsafe.Pointer, cmatrix unsafe.Pointer, cpaint unsafe.Pointer) {
	bindlib.CCall4(__imp_sk_canvas_draw_picture.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(cpicture), bindlib.MarshallSyscall(cmatrix), bindlib.MarshallSyscall(cpaint))
}

var __imp_sk_canvas_draw_drawable bindlib.PreloadProc

func SkCanvasDrawDrawable(ccanvas unsafe.Pointer, cdrawable unsafe.Pointer, cmatrix unsafe.Pointer) {
	bindlib.CCall3(__imp_sk_canvas_draw_drawable.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(cdrawable), bindlib.MarshallSyscall(cmatrix))
}

var __imp_sk_canvas_flush bindlib.PreloadProc

func SkCanvasFlush(ccanvas unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_canvas_flush.Addr(), bindlib.MarshallSyscall(ccanvas))
}

var __imp_sk_canvas_new_from_bitmap bindlib.PreloadProc

func SkCanvasNewFromBitmap(bitmap unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_canvas_new_from_bitmap.Addr(), bindlib.MarshallSyscall(bitmap))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_canvas_new_from_raster bindlib.PreloadProc

func SkCanvasNewFromRaster(cinfo *SkImageinfoT, pixels unsafe.Pointer, rowBytes uint, props unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall4(__imp_sk_canvas_new_from_raster.Addr(), bindlib.MarshallSyscall(cinfo), bindlib.MarshallSyscall(pixels), bindlib.MarshallSyscall(rowBytes), bindlib.MarshallSyscall(props))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_canvas_draw_annotation bindlib.PreloadProc

func SkCanvasDrawAnnotation(t unsafe.Pointer, rect unsafe.Pointer, key *byte, value unsafe.Pointer) {
	bindlib.CCall4(__imp_sk_canvas_draw_annotation.Addr(), bindlib.MarshallSyscall(t), bindlib.MarshallSyscall(rect), bindlib.MarshallSyscall(key), bindlib.MarshallSyscall(value))
}

var __imp_sk_canvas_draw_url_annotation bindlib.PreloadProc

func SkCanvasDrawUrlAnnotation(t unsafe.Pointer, rect unsafe.Pointer, value unsafe.Pointer) {
	bindlib.CCall3(__imp_sk_canvas_draw_url_annotation.Addr(), bindlib.MarshallSyscall(t), bindlib.MarshallSyscall(rect), bindlib.MarshallSyscall(value))
}

var __imp_sk_canvas_draw_named_destination_annotation bindlib.PreloadProc

func SkCanvasDrawNamedDestinationAnnotation(t unsafe.Pointer, point unsafe.Pointer, value unsafe.Pointer) {
	bindlib.CCall3(__imp_sk_canvas_draw_named_destination_annotation.Addr(), bindlib.MarshallSyscall(t), bindlib.MarshallSyscall(point), bindlib.MarshallSyscall(value))
}

var __imp_sk_canvas_draw_link_destination_annotation bindlib.PreloadProc

func SkCanvasDrawLinkDestinationAnnotation(t unsafe.Pointer, rect unsafe.Pointer, value unsafe.Pointer) {
	bindlib.CCall3(__imp_sk_canvas_draw_link_destination_annotation.Addr(), bindlib.MarshallSyscall(t), bindlib.MarshallSyscall(rect), bindlib.MarshallSyscall(value))
}

var __imp_sk_canvas_draw_image_lattice bindlib.PreloadProc

func SkCanvasDrawImageLattice(ccanvas unsafe.Pointer, image unsafe.Pointer, lattice unsafe.Pointer, dst unsafe.Pointer, mode SkFilterModeT, paint unsafe.Pointer) {
	bindlib.CCall6(__imp_sk_canvas_draw_image_lattice.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(image), bindlib.MarshallSyscall(lattice), bindlib.MarshallSyscall(dst), bindlib.MarshallSyscall(mode), bindlib.MarshallSyscall(paint))
}

var __imp_sk_canvas_draw_image_nine bindlib.PreloadProc

func SkCanvasDrawImageNine(ccanvas unsafe.Pointer, image unsafe.Pointer, center *SkIrectT, dst unsafe.Pointer, mode SkFilterModeT, paint unsafe.Pointer) {
	bindlib.CCall6(__imp_sk_canvas_draw_image_nine.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(image), bindlib.MarshallSyscall(center), bindlib.MarshallSyscall(dst), bindlib.MarshallSyscall(mode), bindlib.MarshallSyscall(paint))
}

var __imp_sk_canvas_draw_vertices bindlib.PreloadProc

func SkCanvasDrawVertices(ccanvas unsafe.Pointer, vertices unsafe.Pointer, mode SkBlendmodeT, paint unsafe.Pointer) {
	bindlib.CCall4(__imp_sk_canvas_draw_vertices.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(vertices), bindlib.MarshallSyscall(mode), bindlib.MarshallSyscall(paint))
}

var __imp_sk_canvas_draw_arc bindlib.PreloadProc

func SkCanvasDrawArc(ccanvas unsafe.Pointer, oval unsafe.Pointer, startAngle float32, sweepAngle float32, useCenter bool, paint unsafe.Pointer) {
	bindlib.CCall6(__imp_sk_canvas_draw_arc.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(oval), bindlib.MarshallSyscall(startAngle), bindlib.MarshallSyscall(sweepAngle), bindlib.MarshallSyscall(useCenter), bindlib.MarshallSyscall(paint))
}

var __imp_sk_canvas_draw_drrect bindlib.PreloadProc

func SkCanvasDrawDrrect(ccanvas unsafe.Pointer, outer unsafe.Pointer, inner unsafe.Pointer, paint unsafe.Pointer) {
	bindlib.CCall4(__imp_sk_canvas_draw_drrect.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(outer), bindlib.MarshallSyscall(inner), bindlib.MarshallSyscall(paint))
}

var __imp_sk_canvas_draw_atlas bindlib.PreloadProc

func SkCanvasDrawAtlas(ccanvas unsafe.Pointer, atlas unsafe.Pointer, xform unsafe.Pointer, tex unsafe.Pointer, colors *SkColorT, count int32, mode SkBlendmodeT, sampling unsafe.Pointer, cullRect unsafe.Pointer, paint unsafe.Pointer) {
	bindlib.CCall10(__imp_sk_canvas_draw_atlas.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(atlas), bindlib.MarshallSyscall(xform), bindlib.MarshallSyscall(tex), bindlib.MarshallSyscall(colors), bindlib.MarshallSyscall(count), bindlib.MarshallSyscall(mode), bindlib.MarshallSyscall(sampling), bindlib.MarshallSyscall(cullRect), bindlib.MarshallSyscall(paint))
}

var __imp_sk_canvas_draw_patch bindlib.PreloadProc

func SkCanvasDrawPatch(ccanvas unsafe.Pointer, cubics unsafe.Pointer, colors *SkColorT, texCoords unsafe.Pointer, mode SkBlendmodeT, paint unsafe.Pointer) {
	bindlib.CCall6(__imp_sk_canvas_draw_patch.Addr(), bindlib.MarshallSyscall(ccanvas), bindlib.MarshallSyscall(cubics), bindlib.MarshallSyscall(colors), bindlib.MarshallSyscall(texCoords), bindlib.MarshallSyscall(mode), bindlib.MarshallSyscall(paint))
}

var __imp_sk_canvas_is_clip_empty bindlib.PreloadProc

func SkCanvasIsClipEmpty(ccanvas unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_canvas_is_clip_empty.Addr(), bindlib.MarshallSyscall(ccanvas))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_canvas_is_clip_rect bindlib.PreloadProc

func SkCanvasIsClipRect(ccanvas unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_canvas_is_clip_rect.Addr(), bindlib.MarshallSyscall(ccanvas))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_nodraw_canvas_new bindlib.PreloadProc

func SkNodrawCanvasNew(width int32, height int32) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_nodraw_canvas_new.Addr(), bindlib.MarshallSyscall(width), bindlib.MarshallSyscall(height))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_nodraw_canvas_destroy bindlib.PreloadProc

func SkNodrawCanvasDestroy(t unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_nodraw_canvas_destroy.Addr(), bindlib.MarshallSyscall(t))
}

var __imp_sk_nway_canvas_new bindlib.PreloadProc

func SkNwayCanvasNew(width int32, height int32) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_nway_canvas_new.Addr(), bindlib.MarshallSyscall(width), bindlib.MarshallSyscall(height))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_nway_canvas_destroy bindlib.PreloadProc

func SkNwayCanvasDestroy(t unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_nway_canvas_destroy.Addr(), bindlib.MarshallSyscall(t))
}

var __imp_sk_nway_canvas_add_canvas bindlib.PreloadProc

func SkNwayCanvasAddCanvas(t unsafe.Pointer, canvas unsafe.Pointer) {
	bindlib.CCall2(__imp_sk_nway_canvas_add_canvas.Addr(), bindlib.MarshallSyscall(t), bindlib.MarshallSyscall(canvas))
}

var __imp_sk_nway_canvas_remove_canvas bindlib.PreloadProc

func SkNwayCanvasRemoveCanvas(t unsafe.Pointer, canvas unsafe.Pointer) {
	bindlib.CCall2(__imp_sk_nway_canvas_remove_canvas.Addr(), bindlib.MarshallSyscall(t), bindlib.MarshallSyscall(canvas))
}

var __imp_sk_nway_canvas_remove_all bindlib.PreloadProc

func SkNwayCanvasRemoveAll(t unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_nway_canvas_remove_all.Addr(), bindlib.MarshallSyscall(t))
}

var __imp_sk_overdraw_canvas_new bindlib.PreloadProc

func SkOverdrawCanvasNew(canvas unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_overdraw_canvas_new.Addr(), bindlib.MarshallSyscall(canvas))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_overdraw_canvas_destroy bindlib.PreloadProc

func SkOverdrawCanvasDestroy(canvas unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_overdraw_canvas_destroy.Addr(), bindlib.MarshallSyscall(canvas))
}

var __imp_sk_codec_min_buffered_bytes_needed bindlib.PreloadProc

func SkCodecMinBufferedBytesNeeded() uint {
	__res := bindlib.CCall0(__imp_sk_codec_min_buffered_bytes_needed.Addr())
	return bindlib.UnmarshallSyscall[uint](__res)
}

var __imp_sk_codec_new_from_stream bindlib.PreloadProc

func SkCodecNewFromStream(stream unsafe.Pointer, result *SkCodecResultT) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_codec_new_from_stream.Addr(), bindlib.MarshallSyscall(stream), bindlib.MarshallSyscall(result))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_codec_new_from_data bindlib.PreloadProc

func SkCodecNewFromData(data unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_codec_new_from_data.Addr(), bindlib.MarshallSyscall(data))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_codec_destroy bindlib.PreloadProc

func SkCodecDestroy(codec unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_codec_destroy.Addr(), bindlib.MarshallSyscall(codec))
}

var __imp_sk_codec_get_info bindlib.PreloadProc

func SkCodecGetInfo(codec unsafe.Pointer, info *SkImageinfoT) {
	bindlib.CCall2(__imp_sk_codec_get_info.Addr(), bindlib.MarshallSyscall(codec), bindlib.MarshallSyscall(info))
}

var __imp_sk_codec_get_origin bindlib.PreloadProc

func SkCodecGetOrigin(codec unsafe.Pointer) SkEncodedoriginT {
	__res := bindlib.CCall1(__imp_sk_codec_get_origin.Addr(), bindlib.MarshallSyscall(codec))
	return bindlib.UnmarshallSyscall[SkEncodedoriginT](__res)
}

var __imp_sk_codec_get_scaled_dimensions bindlib.PreloadProc

func SkCodecGetScaledDimensions(codec unsafe.Pointer, desiredScale float32, dimensions *SkIsizeT) {
	bindlib.CCall3(__imp_sk_codec_get_scaled_dimensions.Addr(), bindlib.MarshallSyscall(codec), bindlib.MarshallSyscall(desiredScale), bindlib.MarshallSyscall(dimensions))
}

var __imp_sk_codec_get_valid_subset bindlib.PreloadProc

func SkCodecGetValidSubset(codec unsafe.Pointer, desiredSubset *SkIrectT) bool {
	__res := bindlib.CCall2(__imp_sk_codec_get_valid_subset.Addr(), bindlib.MarshallSyscall(codec), bindlib.MarshallSyscall(desiredSubset))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_codec_get_encoded_format bindlib.PreloadProc

func SkCodecGetEncodedFormat(codec unsafe.Pointer) SkEncodedImageFormatT {
	__res := bindlib.CCall1(__imp_sk_codec_get_encoded_format.Addr(), bindlib.MarshallSyscall(codec))
	return bindlib.UnmarshallSyscall[SkEncodedImageFormatT](__res)
}

var __imp_sk_codec_get_pixels bindlib.PreloadProc

func SkCodecGetPixels(codec unsafe.Pointer, info *SkImageinfoT, pixels unsafe.Pointer, rowBytes uint, options unsafe.Pointer) SkCodecResultT {
	__res := bindlib.CCall5(__imp_sk_codec_get_pixels.Addr(), bindlib.MarshallSyscall(codec), bindlib.MarshallSyscall(info), bindlib.MarshallSyscall(pixels), bindlib.MarshallSyscall(rowBytes), bindlib.MarshallSyscall(options))
	return bindlib.UnmarshallSyscall[SkCodecResultT](__res)
}

var __imp_sk_codec_start_incremental_decode bindlib.PreloadProc

func SkCodecStartIncrementalDecode(codec unsafe.Pointer, info *SkImageinfoT, pixels unsafe.Pointer, rowBytes uint, options unsafe.Pointer) SkCodecResultT {
	__res := bindlib.CCall5(__imp_sk_codec_start_incremental_decode.Addr(), bindlib.MarshallSyscall(codec), bindlib.MarshallSyscall(info), bindlib.MarshallSyscall(pixels), bindlib.MarshallSyscall(rowBytes), bindlib.MarshallSyscall(options))
	return bindlib.UnmarshallSyscall[SkCodecResultT](__res)
}

var __imp_sk_codec_incremental_decode bindlib.PreloadProc

func SkCodecIncrementalDecode(codec unsafe.Pointer, rowsDecoded *int32) SkCodecResultT {
	__res := bindlib.CCall2(__imp_sk_codec_incremental_decode.Addr(), bindlib.MarshallSyscall(codec), bindlib.MarshallSyscall(rowsDecoded))
	return bindlib.UnmarshallSyscall[SkCodecResultT](__res)
}

var __imp_sk_codec_start_scanline_decode bindlib.PreloadProc

func SkCodecStartScanlineDecode(codec unsafe.Pointer, info *SkImageinfoT, options unsafe.Pointer) SkCodecResultT {
	__res := bindlib.CCall3(__imp_sk_codec_start_scanline_decode.Addr(), bindlib.MarshallSyscall(codec), bindlib.MarshallSyscall(info), bindlib.MarshallSyscall(options))
	return bindlib.UnmarshallSyscall[SkCodecResultT](__res)
}

var __imp_sk_codec_get_scanlines bindlib.PreloadProc

func SkCodecGetScanlines(codec unsafe.Pointer, dst unsafe.Pointer, countLines int32, rowBytes uint) int32 {
	__res := bindlib.CCall4(__imp_sk_codec_get_scanlines.Addr(), bindlib.MarshallSyscall(codec), bindlib.MarshallSyscall(dst), bindlib.MarshallSyscall(countLines), bindlib.MarshallSyscall(rowBytes))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_codec_skip_scanlines bindlib.PreloadProc

func SkCodecSkipScanlines(codec unsafe.Pointer, countLines int32) bool {
	__res := bindlib.CCall2(__imp_sk_codec_skip_scanlines.Addr(), bindlib.MarshallSyscall(codec), bindlib.MarshallSyscall(countLines))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_codec_get_scanline_order bindlib.PreloadProc

func SkCodecGetScanlineOrder(codec unsafe.Pointer) SkCodecScanlineOrderT {
	__res := bindlib.CCall1(__imp_sk_codec_get_scanline_order.Addr(), bindlib.MarshallSyscall(codec))
	return bindlib.UnmarshallSyscall[SkCodecScanlineOrderT](__res)
}

var __imp_sk_codec_next_scanline bindlib.PreloadProc

func SkCodecNextScanline(codec unsafe.Pointer) int32 {
	__res := bindlib.CCall1(__imp_sk_codec_next_scanline.Addr(), bindlib.MarshallSyscall(codec))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_codec_output_scanline bindlib.PreloadProc

func SkCodecOutputScanline(codec unsafe.Pointer, inputScanline int32) int32 {
	__res := bindlib.CCall2(__imp_sk_codec_output_scanline.Addr(), bindlib.MarshallSyscall(codec), bindlib.MarshallSyscall(inputScanline))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_codec_get_frame_count bindlib.PreloadProc

func SkCodecGetFrameCount(codec unsafe.Pointer) int32 {
	__res := bindlib.CCall1(__imp_sk_codec_get_frame_count.Addr(), bindlib.MarshallSyscall(codec))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_codec_get_frame_info bindlib.PreloadProc

func SkCodecGetFrameInfo(codec unsafe.Pointer, frameInfo *SkCodecFrameinfoT) {
	bindlib.CCall2(__imp_sk_codec_get_frame_info.Addr(), bindlib.MarshallSyscall(codec), bindlib.MarshallSyscall(frameInfo))
}

var __imp_sk_codec_get_frame_info_for_index bindlib.PreloadProc

func SkCodecGetFrameInfoForIndex(codec unsafe.Pointer, index int32, frameInfo *SkCodecFrameinfoT) bool {
	__res := bindlib.CCall3(__imp_sk_codec_get_frame_info_for_index.Addr(), bindlib.MarshallSyscall(codec), bindlib.MarshallSyscall(index), bindlib.MarshallSyscall(frameInfo))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_codec_get_repetition_count bindlib.PreloadProc

func SkCodecGetRepetitionCount(codec unsafe.Pointer) int32 {
	__res := bindlib.CCall1(__imp_sk_codec_get_repetition_count.Addr(), bindlib.MarshallSyscall(codec))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_colorfilter_unref bindlib.PreloadProc

func SkColorfilterUnref(filter unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_colorfilter_unref.Addr(), bindlib.MarshallSyscall(filter))
}

var __imp_sk_colorfilter_new_mode bindlib.PreloadProc

func SkColorfilterNewMode(c SkColorT, mode SkBlendmodeT) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_colorfilter_new_mode.Addr(), bindlib.MarshallSyscall(c), bindlib.MarshallSyscall(mode))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_colorfilter_new_lighting bindlib.PreloadProc

func SkColorfilterNewLighting(mul SkColorT, add SkColorT) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_colorfilter_new_lighting.Addr(), bindlib.MarshallSyscall(mul), bindlib.MarshallSyscall(add))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_colorfilter_new_compose bindlib.PreloadProc

func SkColorfilterNewCompose(outer unsafe.Pointer, inner unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_colorfilter_new_compose.Addr(), bindlib.MarshallSyscall(outer), bindlib.MarshallSyscall(inner))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_colorfilter_new_color_matrix bindlib.PreloadProc

func SkColorfilterNewColorMatrix(array *float32) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_colorfilter_new_color_matrix.Addr(), bindlib.MarshallSyscall(array))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_colorfilter_new_luma_color bindlib.PreloadProc

func SkColorfilterNewLumaColor() unsafe.Pointer {
	__res := bindlib.CCall0(__imp_sk_colorfilter_new_luma_color.Addr())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_colorfilter_new_high_contrast bindlib.PreloadProc

func SkColorfilterNewHighContrast(config unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_colorfilter_new_high_contrast.Addr(), bindlib.MarshallSyscall(config))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_colorfilter_new_table bindlib.PreloadProc

func SkColorfilterNewTable(table *int32) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_colorfilter_new_table.Addr(), bindlib.MarshallSyscall(table))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_colorfilter_new_table_argb bindlib.PreloadProc

func SkColorfilterNewTableArgb(tableA *int32, tableR *int32, tableG *int32, tableB *int32) unsafe.Pointer {
	__res := bindlib.CCall4(__imp_sk_colorfilter_new_table_argb.Addr(), bindlib.MarshallSyscall(tableA), bindlib.MarshallSyscall(tableR), bindlib.MarshallSyscall(tableG), bindlib.MarshallSyscall(tableB))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_colorspace_ref bindlib.PreloadProc

func SkColorspaceRef(colorspace unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_colorspace_ref.Addr(), bindlib.MarshallSyscall(colorspace))
}

var __imp_sk_colorspace_unref bindlib.PreloadProc

func SkColorspaceUnref(colorspace unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_colorspace_unref.Addr(), bindlib.MarshallSyscall(colorspace))
}

var __imp_sk_colorspace_new_srgb bindlib.PreloadProc

func SkColorspaceNewSrgb() unsafe.Pointer {
	__res := bindlib.CCall0(__imp_sk_colorspace_new_srgb.Addr())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_colorspace_new_srgb_linear bindlib.PreloadProc

func SkColorspaceNewSrgbLinear() unsafe.Pointer {
	__res := bindlib.CCall0(__imp_sk_colorspace_new_srgb_linear.Addr())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_colorspace_new_rgb bindlib.PreloadProc

func SkColorspaceNewRgb(transferFn unsafe.Pointer, toXYZD50 unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_colorspace_new_rgb.Addr(), bindlib.MarshallSyscall(transferFn), bindlib.MarshallSyscall(toXYZD50))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_colorspace_new_icc bindlib.PreloadProc

func SkColorspaceNewIcc(profile unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_colorspace_new_icc.Addr(), bindlib.MarshallSyscall(profile))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_colorspace_to_profile bindlib.PreloadProc

func SkColorspaceToProfile(colorspace unsafe.Pointer, profile unsafe.Pointer) {
	bindlib.CCall2(__imp_sk_colorspace_to_profile.Addr(), bindlib.MarshallSyscall(colorspace), bindlib.MarshallSyscall(profile))
}

var __imp_sk_colorspace_gamma_close_to_srgb bindlib.PreloadProc

func SkColorspaceGammaCloseToSrgb(colorspace unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_colorspace_gamma_close_to_srgb.Addr(), bindlib.MarshallSyscall(colorspace))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_colorspace_gamma_is_linear bindlib.PreloadProc

func SkColorspaceGammaIsLinear(colorspace unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_colorspace_gamma_is_linear.Addr(), bindlib.MarshallSyscall(colorspace))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_colorspace_is_numerical_transfer_fn bindlib.PreloadProc

func SkColorspaceIsNumericalTransferFn(colorspace unsafe.Pointer, transferFn unsafe.Pointer) bool {
	__res := bindlib.CCall2(__imp_sk_colorspace_is_numerical_transfer_fn.Addr(), bindlib.MarshallSyscall(colorspace), bindlib.MarshallSyscall(transferFn))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_colorspace_to_xyzd50 bindlib.PreloadProc

func SkColorspaceToXyzd50(colorspace unsafe.Pointer, toXYZD50 unsafe.Pointer) bool {
	__res := bindlib.CCall2(__imp_sk_colorspace_to_xyzd50.Addr(), bindlib.MarshallSyscall(colorspace), bindlib.MarshallSyscall(toXYZD50))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_colorspace_make_linear_gamma bindlib.PreloadProc

func SkColorspaceMakeLinearGamma(colorspace unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_colorspace_make_linear_gamma.Addr(), bindlib.MarshallSyscall(colorspace))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_colorspace_make_srgb_gamma bindlib.PreloadProc

func SkColorspaceMakeSrgbGamma(colorspace unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_colorspace_make_srgb_gamma.Addr(), bindlib.MarshallSyscall(colorspace))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_colorspace_is_srgb bindlib.PreloadProc

func SkColorspaceIsSrgb(colorspace unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_colorspace_is_srgb.Addr(), bindlib.MarshallSyscall(colorspace))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_colorspace_equals bindlib.PreloadProc

func SkColorspaceEquals(src unsafe.Pointer, dst unsafe.Pointer) bool {
	__res := bindlib.CCall2(__imp_sk_colorspace_equals.Addr(), bindlib.MarshallSyscall(src), bindlib.MarshallSyscall(dst))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_colorspace_transfer_fn_named_srgb bindlib.PreloadProc

func SkColorspaceTransferFnNamedSrgb(transferFn unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_colorspace_transfer_fn_named_srgb.Addr(), bindlib.MarshallSyscall(transferFn))
}

var __imp_sk_colorspace_transfer_fn_named_2dot2 bindlib.PreloadProc

func SkColorspaceTransferFnNamed2dot2(transferFn unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_colorspace_transfer_fn_named_2dot2.Addr(), bindlib.MarshallSyscall(transferFn))
}

var __imp_sk_colorspace_transfer_fn_named_linear bindlib.PreloadProc

func SkColorspaceTransferFnNamedLinear(transferFn unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_colorspace_transfer_fn_named_linear.Addr(), bindlib.MarshallSyscall(transferFn))
}

var __imp_sk_colorspace_transfer_fn_named_rec2020 bindlib.PreloadProc

func SkColorspaceTransferFnNamedRec2020(transferFn unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_colorspace_transfer_fn_named_rec2020.Addr(), bindlib.MarshallSyscall(transferFn))
}

var __imp_sk_colorspace_transfer_fn_named_pq bindlib.PreloadProc

func SkColorspaceTransferFnNamedPq(transferFn unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_colorspace_transfer_fn_named_pq.Addr(), bindlib.MarshallSyscall(transferFn))
}

var __imp_sk_colorspace_transfer_fn_named_hlg bindlib.PreloadProc

func SkColorspaceTransferFnNamedHlg(transferFn unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_colorspace_transfer_fn_named_hlg.Addr(), bindlib.MarshallSyscall(transferFn))
}

var __imp_sk_colorspace_transfer_fn_eval bindlib.PreloadProc

func SkColorspaceTransferFnEval(transferFn unsafe.Pointer, x float32) float32 {
	__res := bindlib.CCall2(__imp_sk_colorspace_transfer_fn_eval.Addr(), bindlib.MarshallSyscall(transferFn), bindlib.MarshallSyscall(x))
	return bindlib.UnmarshallSyscall[float32](__res)
}

var __imp_sk_colorspace_transfer_fn_invert bindlib.PreloadProc

func SkColorspaceTransferFnInvert(src unsafe.Pointer, dst unsafe.Pointer) bool {
	__res := bindlib.CCall2(__imp_sk_colorspace_transfer_fn_invert.Addr(), bindlib.MarshallSyscall(src), bindlib.MarshallSyscall(dst))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_colorspace_primaries_to_xyzd50 bindlib.PreloadProc

func SkColorspacePrimariesToXyzd50(primaries unsafe.Pointer, toXYZD50 unsafe.Pointer) bool {
	__res := bindlib.CCall2(__imp_sk_colorspace_primaries_to_xyzd50.Addr(), bindlib.MarshallSyscall(primaries), bindlib.MarshallSyscall(toXYZD50))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_colorspace_xyz_named_srgb bindlib.PreloadProc

func SkColorspaceXyzNamedSrgb(xyz unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_colorspace_xyz_named_srgb.Addr(), bindlib.MarshallSyscall(xyz))
}

var __imp_sk_colorspace_xyz_named_adobe_rgb bindlib.PreloadProc

func SkColorspaceXyzNamedAdobeRgb(xyz unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_colorspace_xyz_named_adobe_rgb.Addr(), bindlib.MarshallSyscall(xyz))
}

var __imp_sk_colorspace_xyz_named_display_p3 bindlib.PreloadProc

func SkColorspaceXyzNamedDisplayP3(xyz unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_colorspace_xyz_named_display_p3.Addr(), bindlib.MarshallSyscall(xyz))
}

var __imp_sk_colorspace_xyz_named_rec2020 bindlib.PreloadProc

func SkColorspaceXyzNamedRec2020(xyz unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_colorspace_xyz_named_rec2020.Addr(), bindlib.MarshallSyscall(xyz))
}

var __imp_sk_colorspace_xyz_named_xyz bindlib.PreloadProc

func SkColorspaceXyzNamedXyz(xyz unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_colorspace_xyz_named_xyz.Addr(), bindlib.MarshallSyscall(xyz))
}

var __imp_sk_colorspace_xyz_invert bindlib.PreloadProc

func SkColorspaceXyzInvert(src unsafe.Pointer, dst unsafe.Pointer) bool {
	__res := bindlib.CCall2(__imp_sk_colorspace_xyz_invert.Addr(), bindlib.MarshallSyscall(src), bindlib.MarshallSyscall(dst))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_colorspace_xyz_concat bindlib.PreloadProc

func SkColorspaceXyzConcat(a unsafe.Pointer, b unsafe.Pointer, result unsafe.Pointer) {
	bindlib.CCall3(__imp_sk_colorspace_xyz_concat.Addr(), bindlib.MarshallSyscall(a), bindlib.MarshallSyscall(b), bindlib.MarshallSyscall(result))
}

var __imp_sk_colorspace_icc_profile_delete bindlib.PreloadProc

func SkColorspaceIccProfileDelete(profile unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_colorspace_icc_profile_delete.Addr(), bindlib.MarshallSyscall(profile))
}

var __imp_sk_colorspace_icc_profile_new bindlib.PreloadProc

func SkColorspaceIccProfileNew() unsafe.Pointer {
	__res := bindlib.CCall0(__imp_sk_colorspace_icc_profile_new.Addr())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_colorspace_icc_profile_parse bindlib.PreloadProc

func SkColorspaceIccProfileParse(buffer unsafe.Pointer, length uint, profile unsafe.Pointer) bool {
	__res := bindlib.CCall3(__imp_sk_colorspace_icc_profile_parse.Addr(), bindlib.MarshallSyscall(buffer), bindlib.MarshallSyscall(length), bindlib.MarshallSyscall(profile))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_colorspace_icc_profile_get_buffer bindlib.PreloadProc

func SkColorspaceIccProfileGetBuffer(profile unsafe.Pointer, size *int32) *int32 {
	__res := bindlib.CCall2(__imp_sk_colorspace_icc_profile_get_buffer.Addr(), bindlib.MarshallSyscall(profile), bindlib.MarshallSyscall(size))
	return bindlib.UnmarshallSyscall[*int32](__res)
}

var __imp_sk_colorspace_icc_profile_get_to_xyzd50 bindlib.PreloadProc

func SkColorspaceIccProfileGetToXyzd50(profile unsafe.Pointer, toXYZD50 unsafe.Pointer) bool {
	__res := bindlib.CCall2(__imp_sk_colorspace_icc_profile_get_to_xyzd50.Addr(), bindlib.MarshallSyscall(profile), bindlib.MarshallSyscall(toXYZD50))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_color4f_to_color bindlib.PreloadProc

func SkColor4fToColor(color4f unsafe.Pointer) SkColorT {
	__res := bindlib.CCall1(__imp_sk_color4f_to_color.Addr(), bindlib.MarshallSyscall(color4f))
	return bindlib.UnmarshallSyscall[SkColorT](__res)
}

var __imp_sk_color4f_from_color bindlib.PreloadProc

func SkColor4fFromColor(color SkColorT, color4f unsafe.Pointer) {
	bindlib.CCall2(__imp_sk_color4f_from_color.Addr(), bindlib.MarshallSyscall(color), bindlib.MarshallSyscall(color4f))
}

var __imp_sk_data_new_empty bindlib.PreloadProc

func SkDataNewEmpty() unsafe.Pointer {
	__res := bindlib.CCall0(__imp_sk_data_new_empty.Addr())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_data_new_with_copy bindlib.PreloadProc

func SkDataNewWithCopy(src unsafe.Pointer, length uint) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_data_new_with_copy.Addr(), bindlib.MarshallSyscall(src), bindlib.MarshallSyscall(length))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_data_new_subset bindlib.PreloadProc

func SkDataNewSubset(src unsafe.Pointer, offset uint, length uint) unsafe.Pointer {
	__res := bindlib.CCall3(__imp_sk_data_new_subset.Addr(), bindlib.MarshallSyscall(src), bindlib.MarshallSyscall(offset), bindlib.MarshallSyscall(length))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_data_ref bindlib.PreloadProc

func SkDataRef( unsafe.Pointer) { bindlib.CCall1(__imp_sk_data_ref.Addr(), bindlib.MarshallSyscall()) }

var __imp_sk_data_unref bindlib.PreloadProc

func SkDataUnref( unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_data_unref.Addr(), bindlib.MarshallSyscall())
}

var __imp_sk_data_get_size bindlib.PreloadProc

func SkDataGetSize( unsafe.Pointer) uint {
	__res := bindlib.CCall1(__imp_sk_data_get_size.Addr(), bindlib.MarshallSyscall())
	return bindlib.UnmarshallSyscall[uint](__res)
}

var __imp_sk_data_get_data bindlib.PreloadProc

func SkDataGetData( unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_data_get_data.Addr(), bindlib.MarshallSyscall())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_data_new_from_file bindlib.PreloadProc

func SkDataNewFromFile(path *byte) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_data_new_from_file.Addr(), bindlib.MarshallSyscall(path))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_data_new_from_stream bindlib.PreloadProc

func SkDataNewFromStream(stream unsafe.Pointer, length uint) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_data_new_from_stream.Addr(), bindlib.MarshallSyscall(stream), bindlib.MarshallSyscall(length))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_data_get_bytes bindlib.PreloadProc

func SkDataGetBytes( unsafe.Pointer) *int32 {
	__res := bindlib.CCall1(__imp_sk_data_get_bytes.Addr(), bindlib.MarshallSyscall())
	return bindlib.UnmarshallSyscall[*int32](__res)
}

var __imp_sk_data_new_with_proc bindlib.PreloadProc

func SkDataNewWithProc(ptr unsafe.Pointer, length uint, proc SkDataReleaseProc, ctx unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall4(__imp_sk_data_new_with_proc.Addr(), bindlib.MarshallSyscall(ptr), bindlib.MarshallSyscall(length), bindlib.MarshallSyscall(proc), bindlib.MarshallSyscall(ctx))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_data_new_uninitialized bindlib.PreloadProc

func SkDataNewUninitialized(size uint) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_data_new_uninitialized.Addr(), bindlib.MarshallSyscall(size))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_document_unref bindlib.PreloadProc

func SkDocumentUnref(document unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_document_unref.Addr(), bindlib.MarshallSyscall(document))
}

var __imp_sk_document_create_pdf_from_stream bindlib.PreloadProc

func SkDocumentCreatePdfFromStream(stream unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_document_create_pdf_from_stream.Addr(), bindlib.MarshallSyscall(stream))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_document_create_pdf_from_stream_with_metadata bindlib.PreloadProc

func SkDocumentCreatePdfFromStreamWithMetadata(stream unsafe.Pointer, metadata unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_document_create_pdf_from_stream_with_metadata.Addr(), bindlib.MarshallSyscall(stream), bindlib.MarshallSyscall(metadata))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_document_create_xps_from_stream bindlib.PreloadProc

func SkDocumentCreateXpsFromStream(stream unsafe.Pointer, dpi float32) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_document_create_xps_from_stream.Addr(), bindlib.MarshallSyscall(stream), bindlib.MarshallSyscall(dpi))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_document_begin_page bindlib.PreloadProc

func SkDocumentBeginPage(document unsafe.Pointer, width float32, height float32, content unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall4(__imp_sk_document_begin_page.Addr(), bindlib.MarshallSyscall(document), bindlib.MarshallSyscall(width), bindlib.MarshallSyscall(height), bindlib.MarshallSyscall(content))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_document_end_page bindlib.PreloadProc

func SkDocumentEndPage(document unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_document_end_page.Addr(), bindlib.MarshallSyscall(document))
}

var __imp_sk_document_close bindlib.PreloadProc

func SkDocumentClose(document unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_document_close.Addr(), bindlib.MarshallSyscall(document))
}

var __imp_sk_document_abort bindlib.PreloadProc

func SkDocumentAbort(document unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_document_abort.Addr(), bindlib.MarshallSyscall(document))
}

var __imp_sk_drawable_unref bindlib.PreloadProc

func SkDrawableUnref( unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_drawable_unref.Addr(), bindlib.MarshallSyscall())
}

var __imp_sk_drawable_get_generation_id bindlib.PreloadProc

func SkDrawableGetGenerationId( unsafe.Pointer) int32 {
	__res := bindlib.CCall1(__imp_sk_drawable_get_generation_id.Addr(), bindlib.MarshallSyscall())
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_drawable_get_bounds bindlib.PreloadProc

func SkDrawableGetBounds( unsafe.Pointer,  unsafe.Pointer) {
	bindlib.CCall2(__imp_sk_drawable_get_bounds.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall())
}

var __imp_sk_drawable_draw bindlib.PreloadProc

func SkDrawableDraw( unsafe.Pointer,  unsafe.Pointer,  unsafe.Pointer) {
	bindlib.CCall3(__imp_sk_drawable_draw.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall())
}

var __imp_sk_drawable_new_picture_snapshot bindlib.PreloadProc

func SkDrawableNewPictureSnapshot( unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_drawable_new_picture_snapshot.Addr(), bindlib.MarshallSyscall())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_drawable_notify_drawing_changed bindlib.PreloadProc

func SkDrawableNotifyDrawingChanged( unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_drawable_notify_drawing_changed.Addr(), bindlib.MarshallSyscall())
}

var __imp_sk_drawable_approximate_bytes_used bindlib.PreloadProc

func SkDrawableApproximateBytesUsed( unsafe.Pointer) uint {
	__res := bindlib.CCall1(__imp_sk_drawable_approximate_bytes_used.Addr(), bindlib.MarshallSyscall())
	return bindlib.UnmarshallSyscall[uint](__res)
}

var __imp_sk_font_new bindlib.PreloadProc

func SkFontNew() unsafe.Pointer {
	__res := bindlib.CCall0(__imp_sk_font_new.Addr())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_font_new_with_values bindlib.PreloadProc

func SkFontNewWithValues(typeface unsafe.Pointer, size float32, scaleX float32, skewX float32) unsafe.Pointer {
	__res := bindlib.CCall4(__imp_sk_font_new_with_values.Addr(), bindlib.MarshallSyscall(typeface), bindlib.MarshallSyscall(size), bindlib.MarshallSyscall(scaleX), bindlib.MarshallSyscall(skewX))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_font_delete bindlib.PreloadProc

func SkFontDelete(font unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_font_delete.Addr(), bindlib.MarshallSyscall(font))
}

var __imp_sk_font_is_force_auto_hinting bindlib.PreloadProc

func SkFontIsForceAutoHinting(font unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_font_is_force_auto_hinting.Addr(), bindlib.MarshallSyscall(font))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_font_set_force_auto_hinting bindlib.PreloadProc

func SkFontSetForceAutoHinting(font unsafe.Pointer, value bool) {
	bindlib.CCall2(__imp_sk_font_set_force_auto_hinting.Addr(), bindlib.MarshallSyscall(font), bindlib.MarshallSyscall(value))
}

var __imp_sk_font_is_embedded_bitmaps bindlib.PreloadProc

func SkFontIsEmbeddedBitmaps(font unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_font_is_embedded_bitmaps.Addr(), bindlib.MarshallSyscall(font))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_font_set_embedded_bitmaps bindlib.PreloadProc

func SkFontSetEmbeddedBitmaps(font unsafe.Pointer, value bool) {
	bindlib.CCall2(__imp_sk_font_set_embedded_bitmaps.Addr(), bindlib.MarshallSyscall(font), bindlib.MarshallSyscall(value))
}

var __imp_sk_font_is_subpixel bindlib.PreloadProc

func SkFontIsSubpixel(font unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_font_is_subpixel.Addr(), bindlib.MarshallSyscall(font))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_font_set_subpixel bindlib.PreloadProc

func SkFontSetSubpixel(font unsafe.Pointer, value bool) {
	bindlib.CCall2(__imp_sk_font_set_subpixel.Addr(), bindlib.MarshallSyscall(font), bindlib.MarshallSyscall(value))
}

var __imp_sk_font_is_linear_metrics bindlib.PreloadProc

func SkFontIsLinearMetrics(font unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_font_is_linear_metrics.Addr(), bindlib.MarshallSyscall(font))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_font_set_linear_metrics bindlib.PreloadProc

func SkFontSetLinearMetrics(font unsafe.Pointer, value bool) {
	bindlib.CCall2(__imp_sk_font_set_linear_metrics.Addr(), bindlib.MarshallSyscall(font), bindlib.MarshallSyscall(value))
}

var __imp_sk_font_is_embolden bindlib.PreloadProc

func SkFontIsEmbolden(font unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_font_is_embolden.Addr(), bindlib.MarshallSyscall(font))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_font_set_embolden bindlib.PreloadProc

func SkFontSetEmbolden(font unsafe.Pointer, value bool) {
	bindlib.CCall2(__imp_sk_font_set_embolden.Addr(), bindlib.MarshallSyscall(font), bindlib.MarshallSyscall(value))
}

var __imp_sk_font_is_baseline_snap bindlib.PreloadProc

func SkFontIsBaselineSnap(font unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_font_is_baseline_snap.Addr(), bindlib.MarshallSyscall(font))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_font_set_baseline_snap bindlib.PreloadProc

func SkFontSetBaselineSnap(font unsafe.Pointer, value bool) {
	bindlib.CCall2(__imp_sk_font_set_baseline_snap.Addr(), bindlib.MarshallSyscall(font), bindlib.MarshallSyscall(value))
}

var __imp_sk_font_get_edging bindlib.PreloadProc

func SkFontGetEdging(font unsafe.Pointer) SkFontEdgingT {
	__res := bindlib.CCall1(__imp_sk_font_get_edging.Addr(), bindlib.MarshallSyscall(font))
	return bindlib.UnmarshallSyscall[SkFontEdgingT](__res)
}

var __imp_sk_font_set_edging bindlib.PreloadProc

func SkFontSetEdging(font unsafe.Pointer, value SkFontEdgingT) {
	bindlib.CCall2(__imp_sk_font_set_edging.Addr(), bindlib.MarshallSyscall(font), bindlib.MarshallSyscall(value))
}

var __imp_sk_font_get_hinting bindlib.PreloadProc

func SkFontGetHinting(font unsafe.Pointer) SkFontHintingT {
	__res := bindlib.CCall1(__imp_sk_font_get_hinting.Addr(), bindlib.MarshallSyscall(font))
	return bindlib.UnmarshallSyscall[SkFontHintingT](__res)
}

var __imp_sk_font_set_hinting bindlib.PreloadProc

func SkFontSetHinting(font unsafe.Pointer, value SkFontHintingT) {
	bindlib.CCall2(__imp_sk_font_set_hinting.Addr(), bindlib.MarshallSyscall(font), bindlib.MarshallSyscall(value))
}

var __imp_sk_font_get_typeface bindlib.PreloadProc

func SkFontGetTypeface(font unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_font_get_typeface.Addr(), bindlib.MarshallSyscall(font))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_font_set_typeface bindlib.PreloadProc

func SkFontSetTypeface(font unsafe.Pointer, value unsafe.Pointer) {
	bindlib.CCall2(__imp_sk_font_set_typeface.Addr(), bindlib.MarshallSyscall(font), bindlib.MarshallSyscall(value))
}

var __imp_sk_font_get_size bindlib.PreloadProc

func SkFontGetSize(font unsafe.Pointer) float32 {
	__res := bindlib.CCall1(__imp_sk_font_get_size.Addr(), bindlib.MarshallSyscall(font))
	return bindlib.UnmarshallSyscall[float32](__res)
}

var __imp_sk_font_set_size bindlib.PreloadProc

func SkFontSetSize(font unsafe.Pointer, value float32) {
	bindlib.CCall2(__imp_sk_font_set_size.Addr(), bindlib.MarshallSyscall(font), bindlib.MarshallSyscall(value))
}

var __imp_sk_font_get_scale_x bindlib.PreloadProc

func SkFontGetScaleX(font unsafe.Pointer) float32 {
	__res := bindlib.CCall1(__imp_sk_font_get_scale_x.Addr(), bindlib.MarshallSyscall(font))
	return bindlib.UnmarshallSyscall[float32](__res)
}

var __imp_sk_font_set_scale_x bindlib.PreloadProc

func SkFontSetScaleX(font unsafe.Pointer, value float32) {
	bindlib.CCall2(__imp_sk_font_set_scale_x.Addr(), bindlib.MarshallSyscall(font), bindlib.MarshallSyscall(value))
}

var __imp_sk_font_get_skew_x bindlib.PreloadProc

func SkFontGetSkewX(font unsafe.Pointer) float32 {
	__res := bindlib.CCall1(__imp_sk_font_get_skew_x.Addr(), bindlib.MarshallSyscall(font))
	return bindlib.UnmarshallSyscall[float32](__res)
}

var __imp_sk_font_set_skew_x bindlib.PreloadProc

func SkFontSetSkewX(font unsafe.Pointer, value float32) {
	bindlib.CCall2(__imp_sk_font_set_skew_x.Addr(), bindlib.MarshallSyscall(font), bindlib.MarshallSyscall(value))
}

var __imp_sk_font_text_to_glyphs bindlib.PreloadProc

func SkFontTextToGlyphs(font unsafe.Pointer, text unsafe.Pointer, byteLength uint, encoding SkTextEncodingT, glyphs *int32, maxGlyphCount int32) int32 {
	__res := bindlib.CCall6(__imp_sk_font_text_to_glyphs.Addr(), bindlib.MarshallSyscall(font), bindlib.MarshallSyscall(text), bindlib.MarshallSyscall(byteLength), bindlib.MarshallSyscall(encoding), bindlib.MarshallSyscall(glyphs), bindlib.MarshallSyscall(maxGlyphCount))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_font_unichar_to_glyph bindlib.PreloadProc

func SkFontUnicharToGlyph(font unsafe.Pointer, uni int32) int32 {
	__res := bindlib.CCall2(__imp_sk_font_unichar_to_glyph.Addr(), bindlib.MarshallSyscall(font), bindlib.MarshallSyscall(uni))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_font_unichars_to_glyphs bindlib.PreloadProc

func SkFontUnicharsToGlyphs(font unsafe.Pointer, uni *int32, count int32, glyphs *int32) {
	bindlib.CCall4(__imp_sk_font_unichars_to_glyphs.Addr(), bindlib.MarshallSyscall(font), bindlib.MarshallSyscall(uni), bindlib.MarshallSyscall(count), bindlib.MarshallSyscall(glyphs))
}

var __imp_sk_font_measure_text bindlib.PreloadProc

func SkFontMeasureText(font unsafe.Pointer, text unsafe.Pointer, byteLength uint, encoding SkTextEncodingT, bounds unsafe.Pointer, paint unsafe.Pointer) float32 {
	__res := bindlib.CCall6(__imp_sk_font_measure_text.Addr(), bindlib.MarshallSyscall(font), bindlib.MarshallSyscall(text), bindlib.MarshallSyscall(byteLength), bindlib.MarshallSyscall(encoding), bindlib.MarshallSyscall(bounds), bindlib.MarshallSyscall(paint))
	return bindlib.UnmarshallSyscall[float32](__res)
}

var __imp_sk_font_measure_text_no_return bindlib.PreloadProc

func SkFontMeasureTextNoReturn(font unsafe.Pointer, text unsafe.Pointer, byteLength uint, encoding SkTextEncodingT, bounds unsafe.Pointer, paint unsafe.Pointer, measuredWidth *float32) {
	bindlib.CCall7(__imp_sk_font_measure_text_no_return.Addr(), bindlib.MarshallSyscall(font), bindlib.MarshallSyscall(text), bindlib.MarshallSyscall(byteLength), bindlib.MarshallSyscall(encoding), bindlib.MarshallSyscall(bounds), bindlib.MarshallSyscall(paint), bindlib.MarshallSyscall(measuredWidth))
}

var __imp_sk_font_break_text bindlib.PreloadProc

func SkFontBreakText(font unsafe.Pointer, text unsafe.Pointer, byteLength uint, encoding SkTextEncodingT, maxWidth float32, measuredWidth *float32, paint unsafe.Pointer) uint {
	__res := bindlib.CCall7(__imp_sk_font_break_text.Addr(), bindlib.MarshallSyscall(font), bindlib.MarshallSyscall(text), bindlib.MarshallSyscall(byteLength), bindlib.MarshallSyscall(encoding), bindlib.MarshallSyscall(maxWidth), bindlib.MarshallSyscall(measuredWidth), bindlib.MarshallSyscall(paint))
	return bindlib.UnmarshallSyscall[uint](__res)
}

var __imp_sk_font_get_widths_bounds bindlib.PreloadProc

func SkFontGetWidthsBounds(font unsafe.Pointer, glyphs *int32, count int32, widths *float32, bounds unsafe.Pointer, paint unsafe.Pointer) {
	bindlib.CCall6(__imp_sk_font_get_widths_bounds.Addr(), bindlib.MarshallSyscall(font), bindlib.MarshallSyscall(glyphs), bindlib.MarshallSyscall(count), bindlib.MarshallSyscall(widths), bindlib.MarshallSyscall(bounds), bindlib.MarshallSyscall(paint))
}

var __imp_sk_font_get_pos bindlib.PreloadProc

func SkFontGetPos(font unsafe.Pointer, glyphs *int32, count int32, pos unsafe.Pointer, origin unsafe.Pointer) {
	bindlib.CCall5(__imp_sk_font_get_pos.Addr(), bindlib.MarshallSyscall(font), bindlib.MarshallSyscall(glyphs), bindlib.MarshallSyscall(count), bindlib.MarshallSyscall(pos), bindlib.MarshallSyscall(origin))
}

var __imp_sk_font_get_xpos bindlib.PreloadProc

func SkFontGetXpos(font unsafe.Pointer, glyphs *int32, count int32, xpos *float32, origin float32) {
	bindlib.CCall5(__imp_sk_font_get_xpos.Addr(), bindlib.MarshallSyscall(font), bindlib.MarshallSyscall(glyphs), bindlib.MarshallSyscall(count), bindlib.MarshallSyscall(xpos), bindlib.MarshallSyscall(origin))
}

var __imp_sk_font_get_path bindlib.PreloadProc

func SkFontGetPath(font unsafe.Pointer, glyph int32, path unsafe.Pointer) bool {
	__res := bindlib.CCall3(__imp_sk_font_get_path.Addr(), bindlib.MarshallSyscall(font), bindlib.MarshallSyscall(glyph), bindlib.MarshallSyscall(path))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_font_get_paths bindlib.PreloadProc

func SkFontGetPaths(font unsafe.Pointer, glyphs *int32, count int32, glyphPathProc SkGlyphPathProc, context unsafe.Pointer) {
	bindlib.CCall5(__imp_sk_font_get_paths.Addr(), bindlib.MarshallSyscall(font), bindlib.MarshallSyscall(glyphs), bindlib.MarshallSyscall(count), bindlib.MarshallSyscall(glyphPathProc), bindlib.MarshallSyscall(context))
}

var __imp_sk_font_get_metrics bindlib.PreloadProc

func SkFontGetMetrics(font unsafe.Pointer, metrics *SkFontmetricsT) float32 {
	__res := bindlib.CCall2(__imp_sk_font_get_metrics.Addr(), bindlib.MarshallSyscall(font), bindlib.MarshallSyscall(metrics))
	return bindlib.UnmarshallSyscall[float32](__res)
}

var __imp_sk_text_utils_get_path bindlib.PreloadProc

func SkTextUtilsGetPath(text unsafe.Pointer, length uint, encoding SkTextEncodingT, x float32, y float32, font unsafe.Pointer, path unsafe.Pointer) {
	bindlib.CCall7(__imp_sk_text_utils_get_path.Addr(), bindlib.MarshallSyscall(text), bindlib.MarshallSyscall(length), bindlib.MarshallSyscall(encoding), bindlib.MarshallSyscall(x), bindlib.MarshallSyscall(y), bindlib.MarshallSyscall(font), bindlib.MarshallSyscall(path))
}

var __imp_sk_text_utils_get_pos_path bindlib.PreloadProc

func SkTextUtilsGetPosPath(text unsafe.Pointer, length uint, encoding SkTextEncodingT, pos unsafe.Pointer, font unsafe.Pointer, path unsafe.Pointer) {
	bindlib.CCall6(__imp_sk_text_utils_get_pos_path.Addr(), bindlib.MarshallSyscall(text), bindlib.MarshallSyscall(length), bindlib.MarshallSyscall(encoding), bindlib.MarshallSyscall(pos), bindlib.MarshallSyscall(font), bindlib.MarshallSyscall(path))
}

var __imp_sk_refcnt_unique bindlib.PreloadProc

func SkRefcntUnique(refcnt unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_refcnt_unique.Addr(), bindlib.MarshallSyscall(refcnt))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_refcnt_get_ref_count bindlib.PreloadProc

func SkRefcntGetRefCount(refcnt unsafe.Pointer) int32 {
	__res := bindlib.CCall1(__imp_sk_refcnt_get_ref_count.Addr(), bindlib.MarshallSyscall(refcnt))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_refcnt_safe_ref bindlib.PreloadProc

func SkRefcntSafeRef(refcnt unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_refcnt_safe_ref.Addr(), bindlib.MarshallSyscall(refcnt))
}

var __imp_sk_refcnt_safe_unref bindlib.PreloadProc

func SkRefcntSafeUnref(refcnt unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_refcnt_safe_unref.Addr(), bindlib.MarshallSyscall(refcnt))
}

var __imp_sk_nvrefcnt_unique bindlib.PreloadProc

func SkNvrefcntUnique(refcnt unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_nvrefcnt_unique.Addr(), bindlib.MarshallSyscall(refcnt))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_nvrefcnt_get_ref_count bindlib.PreloadProc

func SkNvrefcntGetRefCount(refcnt unsafe.Pointer) int32 {
	__res := bindlib.CCall1(__imp_sk_nvrefcnt_get_ref_count.Addr(), bindlib.MarshallSyscall(refcnt))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_nvrefcnt_safe_ref bindlib.PreloadProc

func SkNvrefcntSafeRef(refcnt unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_nvrefcnt_safe_ref.Addr(), bindlib.MarshallSyscall(refcnt))
}

var __imp_sk_nvrefcnt_safe_unref bindlib.PreloadProc

func SkNvrefcntSafeUnref(refcnt unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_nvrefcnt_safe_unref.Addr(), bindlib.MarshallSyscall(refcnt))
}

var __imp_sk_colortype_get_default_8888 bindlib.PreloadProc

func SkColortypeGetDefault8888() SkColortypeT {
	__res := bindlib.CCall0(__imp_sk_colortype_get_default_8888.Addr())
	return bindlib.UnmarshallSyscall[SkColortypeT](__res)
}

var __imp_sk_version_get_milestone bindlib.PreloadProc

func SkVersionGetMilestone() int32 {
	__res := bindlib.CCall0(__imp_sk_version_get_milestone.Addr())
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_version_get_increment bindlib.PreloadProc

func SkVersionGetIncrement() int32 {
	__res := bindlib.CCall0(__imp_sk_version_get_increment.Addr())
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_version_get_string bindlib.PreloadProc

func SkVersionGetString() *byte {
	__res := bindlib.CCall0(__imp_sk_version_get_string.Addr())
	return bindlib.UnmarshallSyscall[*byte](__res)
}

var __imp_sk_graphics_init bindlib.PreloadProc

func SkGraphicsInit() { bindlib.CCall0(__imp_sk_graphics_init.Addr()) }

var __imp_sk_graphics_purge_font_cache bindlib.PreloadProc

func SkGraphicsPurgeFontCache() { bindlib.CCall0(__imp_sk_graphics_purge_font_cache.Addr()) }

var __imp_sk_graphics_purge_resource_cache bindlib.PreloadProc

func SkGraphicsPurgeResourceCache() { bindlib.CCall0(__imp_sk_graphics_purge_resource_cache.Addr()) }

var __imp_sk_graphics_purge_all_caches bindlib.PreloadProc

func SkGraphicsPurgeAllCaches() { bindlib.CCall0(__imp_sk_graphics_purge_all_caches.Addr()) }

var __imp_sk_graphics_get_font_cache_used bindlib.PreloadProc

func SkGraphicsGetFontCacheUsed() uint {
	__res := bindlib.CCall0(__imp_sk_graphics_get_font_cache_used.Addr())
	return bindlib.UnmarshallSyscall[uint](__res)
}

var __imp_sk_graphics_get_font_cache_limit bindlib.PreloadProc

func SkGraphicsGetFontCacheLimit() uint {
	__res := bindlib.CCall0(__imp_sk_graphics_get_font_cache_limit.Addr())
	return bindlib.UnmarshallSyscall[uint](__res)
}

var __imp_sk_graphics_set_font_cache_limit bindlib.PreloadProc

func SkGraphicsSetFontCacheLimit(bytes uint) uint {
	__res := bindlib.CCall1(__imp_sk_graphics_set_font_cache_limit.Addr(), bindlib.MarshallSyscall(bytes))
	return bindlib.UnmarshallSyscall[uint](__res)
}

var __imp_sk_graphics_get_font_cache_count_used bindlib.PreloadProc

func SkGraphicsGetFontCacheCountUsed() int32 {
	__res := bindlib.CCall0(__imp_sk_graphics_get_font_cache_count_used.Addr())
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_graphics_get_font_cache_count_limit bindlib.PreloadProc

func SkGraphicsGetFontCacheCountLimit() int32 {
	__res := bindlib.CCall0(__imp_sk_graphics_get_font_cache_count_limit.Addr())
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_graphics_set_font_cache_count_limit bindlib.PreloadProc

func SkGraphicsSetFontCacheCountLimit(count int32) int32 {
	__res := bindlib.CCall1(__imp_sk_graphics_set_font_cache_count_limit.Addr(), bindlib.MarshallSyscall(count))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_graphics_get_resource_cache_total_bytes_used bindlib.PreloadProc

func SkGraphicsGetResourceCacheTotalBytesUsed() uint {
	__res := bindlib.CCall0(__imp_sk_graphics_get_resource_cache_total_bytes_used.Addr())
	return bindlib.UnmarshallSyscall[uint](__res)
}

var __imp_sk_graphics_get_resource_cache_total_byte_limit bindlib.PreloadProc

func SkGraphicsGetResourceCacheTotalByteLimit() uint {
	__res := bindlib.CCall0(__imp_sk_graphics_get_resource_cache_total_byte_limit.Addr())
	return bindlib.UnmarshallSyscall[uint](__res)
}

var __imp_sk_graphics_set_resource_cache_total_byte_limit bindlib.PreloadProc

func SkGraphicsSetResourceCacheTotalByteLimit(newLimit uint) uint {
	__res := bindlib.CCall1(__imp_sk_graphics_set_resource_cache_total_byte_limit.Addr(), bindlib.MarshallSyscall(newLimit))
	return bindlib.UnmarshallSyscall[uint](__res)
}

var __imp_sk_graphics_get_resource_cache_single_allocation_byte_limit bindlib.PreloadProc

func SkGraphicsGetResourceCacheSingleAllocationByteLimit() uint {
	__res := bindlib.CCall0(__imp_sk_graphics_get_resource_cache_single_allocation_byte_limit.Addr())
	return bindlib.UnmarshallSyscall[uint](__res)
}

var __imp_sk_graphics_set_resource_cache_single_allocation_byte_limit bindlib.PreloadProc

func SkGraphicsSetResourceCacheSingleAllocationByteLimit(newLimit uint) uint {
	__res := bindlib.CCall1(__imp_sk_graphics_set_resource_cache_single_allocation_byte_limit.Addr(), bindlib.MarshallSyscall(newLimit))
	return bindlib.UnmarshallSyscall[uint](__res)
}

var __imp_sk_graphics_dump_memory_statistics bindlib.PreloadProc

func SkGraphicsDumpMemoryStatistics(dump unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_graphics_dump_memory_statistics.Addr(), bindlib.MarshallSyscall(dump))
}

var __imp_sk_image_ref bindlib.PreloadProc

func SkImageRef(cimage unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_image_ref.Addr(), bindlib.MarshallSyscall(cimage))
}

var __imp_sk_image_unref bindlib.PreloadProc

func SkImageUnref(cimage unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_image_unref.Addr(), bindlib.MarshallSyscall(cimage))
}

var __imp_sk_image_new_raster_copy bindlib.PreloadProc

func SkImageNewRasterCopy(cinfo *SkImageinfoT, pixels unsafe.Pointer, rowBytes uint) unsafe.Pointer {
	__res := bindlib.CCall3(__imp_sk_image_new_raster_copy.Addr(), bindlib.MarshallSyscall(cinfo), bindlib.MarshallSyscall(pixels), bindlib.MarshallSyscall(rowBytes))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_image_new_raster_copy_with_pixmap bindlib.PreloadProc

func SkImageNewRasterCopyWithPixmap(pixmap unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_image_new_raster_copy_with_pixmap.Addr(), bindlib.MarshallSyscall(pixmap))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_image_new_raster_data bindlib.PreloadProc

func SkImageNewRasterData(cinfo *SkImageinfoT, pixels unsafe.Pointer, rowBytes uint) unsafe.Pointer {
	__res := bindlib.CCall3(__imp_sk_image_new_raster_data.Addr(), bindlib.MarshallSyscall(cinfo), bindlib.MarshallSyscall(pixels), bindlib.MarshallSyscall(rowBytes))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_image_new_raster bindlib.PreloadProc

func SkImageNewRaster(pixmap unsafe.Pointer, releaseProc SkImageRasterReleaseProc, context unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall3(__imp_sk_image_new_raster.Addr(), bindlib.MarshallSyscall(pixmap), bindlib.MarshallSyscall(releaseProc), bindlib.MarshallSyscall(context))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_image_new_from_bitmap bindlib.PreloadProc

func SkImageNewFromBitmap(cbitmap unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_image_new_from_bitmap.Addr(), bindlib.MarshallSyscall(cbitmap))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_image_new_from_encoded bindlib.PreloadProc

func SkImageNewFromEncoded(cdata unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_image_new_from_encoded.Addr(), bindlib.MarshallSyscall(cdata))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_image_new_from_texture bindlib.PreloadProc

func SkImageNewFromTexture(context unsafe.Pointer, texture unsafe.Pointer, origin GrSurfaceoriginT, colorType SkColortypeT, alpha SkAlphatypeT, colorSpace unsafe.Pointer, releaseProc SkImageTextureReleaseProc, releaseContext unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall8(__imp_sk_image_new_from_texture.Addr(), bindlib.MarshallSyscall(context), bindlib.MarshallSyscall(texture), bindlib.MarshallSyscall(origin), bindlib.MarshallSyscall(colorType), bindlib.MarshallSyscall(alpha), bindlib.MarshallSyscall(colorSpace), bindlib.MarshallSyscall(releaseProc), bindlib.MarshallSyscall(releaseContext))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_image_new_from_adopted_texture bindlib.PreloadProc

func SkImageNewFromAdoptedTexture(context unsafe.Pointer, texture unsafe.Pointer, origin GrSurfaceoriginT, colorType SkColortypeT, alpha SkAlphatypeT, colorSpace unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall6(__imp_sk_image_new_from_adopted_texture.Addr(), bindlib.MarshallSyscall(context), bindlib.MarshallSyscall(texture), bindlib.MarshallSyscall(origin), bindlib.MarshallSyscall(colorType), bindlib.MarshallSyscall(alpha), bindlib.MarshallSyscall(colorSpace))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_image_new_from_picture bindlib.PreloadProc

func SkImageNewFromPicture(picture unsafe.Pointer, dimensions *SkIsizeT, cmatrix unsafe.Pointer, paint unsafe.Pointer, useFloatingPointBitDepth bool, colorSpace unsafe.Pointer, props unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall7(__imp_sk_image_new_from_picture.Addr(), bindlib.MarshallSyscall(picture), bindlib.MarshallSyscall(dimensions), bindlib.MarshallSyscall(cmatrix), bindlib.MarshallSyscall(paint), bindlib.MarshallSyscall(useFloatingPointBitDepth), bindlib.MarshallSyscall(colorSpace), bindlib.MarshallSyscall(props))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_image_get_width bindlib.PreloadProc

func SkImageGetWidth(cimage unsafe.Pointer) int32 {
	__res := bindlib.CCall1(__imp_sk_image_get_width.Addr(), bindlib.MarshallSyscall(cimage))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_image_get_height bindlib.PreloadProc

func SkImageGetHeight(cimage unsafe.Pointer) int32 {
	__res := bindlib.CCall1(__imp_sk_image_get_height.Addr(), bindlib.MarshallSyscall(cimage))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_image_get_unique_id bindlib.PreloadProc

func SkImageGetUniqueId(cimage unsafe.Pointer) int32 {
	__res := bindlib.CCall1(__imp_sk_image_get_unique_id.Addr(), bindlib.MarshallSyscall(cimage))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_image_get_alpha_type bindlib.PreloadProc

func SkImageGetAlphaType(image unsafe.Pointer) SkAlphatypeT {
	__res := bindlib.CCall1(__imp_sk_image_get_alpha_type.Addr(), bindlib.MarshallSyscall(image))
	return bindlib.UnmarshallSyscall[SkAlphatypeT](__res)
}

var __imp_sk_image_get_color_type bindlib.PreloadProc

func SkImageGetColorType(image unsafe.Pointer) SkColortypeT {
	__res := bindlib.CCall1(__imp_sk_image_get_color_type.Addr(), bindlib.MarshallSyscall(image))
	return bindlib.UnmarshallSyscall[SkColortypeT](__res)
}

var __imp_sk_image_get_colorspace bindlib.PreloadProc

func SkImageGetColorspace(image unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_image_get_colorspace.Addr(), bindlib.MarshallSyscall(image))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_image_is_alpha_only bindlib.PreloadProc

func SkImageIsAlphaOnly(image unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_image_is_alpha_only.Addr(), bindlib.MarshallSyscall(image))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_image_make_shader bindlib.PreloadProc

func SkImageMakeShader(image unsafe.Pointer, tileX SkShaderTilemodeT, tileY SkShaderTilemodeT, sampling unsafe.Pointer, cmatrix unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall5(__imp_sk_image_make_shader.Addr(), bindlib.MarshallSyscall(image), bindlib.MarshallSyscall(tileX), bindlib.MarshallSyscall(tileY), bindlib.MarshallSyscall(sampling), bindlib.MarshallSyscall(cmatrix))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_image_make_raw_shader bindlib.PreloadProc

func SkImageMakeRawShader(image unsafe.Pointer, tileX SkShaderTilemodeT, tileY SkShaderTilemodeT, sampling unsafe.Pointer, cmatrix unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall5(__imp_sk_image_make_raw_shader.Addr(), bindlib.MarshallSyscall(image), bindlib.MarshallSyscall(tileX), bindlib.MarshallSyscall(tileY), bindlib.MarshallSyscall(sampling), bindlib.MarshallSyscall(cmatrix))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_image_peek_pixels bindlib.PreloadProc

func SkImagePeekPixels(image unsafe.Pointer, pixmap unsafe.Pointer) bool {
	__res := bindlib.CCall2(__imp_sk_image_peek_pixels.Addr(), bindlib.MarshallSyscall(image), bindlib.MarshallSyscall(pixmap))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_image_is_texture_backed bindlib.PreloadProc

func SkImageIsTextureBacked(image unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_image_is_texture_backed.Addr(), bindlib.MarshallSyscall(image))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_image_is_lazy_generated bindlib.PreloadProc

func SkImageIsLazyGenerated(image unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_image_is_lazy_generated.Addr(), bindlib.MarshallSyscall(image))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_image_is_valid bindlib.PreloadProc

func SkImageIsValid(image unsafe.Pointer, context unsafe.Pointer) bool {
	__res := bindlib.CCall2(__imp_sk_image_is_valid.Addr(), bindlib.MarshallSyscall(image), bindlib.MarshallSyscall(context))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_image_read_pixels bindlib.PreloadProc

func SkImageReadPixels(image unsafe.Pointer, dstInfo *SkImageinfoT, dstPixels unsafe.Pointer, dstRowBytes uint, srcX int32, srcY int32, cachingHint SkImageCachingHintT) bool {
	__res := bindlib.CCall7(__imp_sk_image_read_pixels.Addr(), bindlib.MarshallSyscall(image), bindlib.MarshallSyscall(dstInfo), bindlib.MarshallSyscall(dstPixels), bindlib.MarshallSyscall(dstRowBytes), bindlib.MarshallSyscall(srcX), bindlib.MarshallSyscall(srcY), bindlib.MarshallSyscall(cachingHint))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_image_read_pixels_into_pixmap bindlib.PreloadProc

func SkImageReadPixelsIntoPixmap(image unsafe.Pointer, dst unsafe.Pointer, srcX int32, srcY int32, cachingHint SkImageCachingHintT) bool {
	__res := bindlib.CCall5(__imp_sk_image_read_pixels_into_pixmap.Addr(), bindlib.MarshallSyscall(image), bindlib.MarshallSyscall(dst), bindlib.MarshallSyscall(srcX), bindlib.MarshallSyscall(srcY), bindlib.MarshallSyscall(cachingHint))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_image_scale_pixels bindlib.PreloadProc

func SkImageScalePixels(image unsafe.Pointer, dst unsafe.Pointer, sampling unsafe.Pointer, cachingHint SkImageCachingHintT) bool {
	__res := bindlib.CCall4(__imp_sk_image_scale_pixels.Addr(), bindlib.MarshallSyscall(image), bindlib.MarshallSyscall(dst), bindlib.MarshallSyscall(sampling), bindlib.MarshallSyscall(cachingHint))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_image_ref_encoded bindlib.PreloadProc

func SkImageRefEncoded(cimage unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_image_ref_encoded.Addr(), bindlib.MarshallSyscall(cimage))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_image_make_subset_raster bindlib.PreloadProc

func SkImageMakeSubsetRaster(cimage unsafe.Pointer, subset *SkIrectT) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_image_make_subset_raster.Addr(), bindlib.MarshallSyscall(cimage), bindlib.MarshallSyscall(subset))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_image_make_subset bindlib.PreloadProc

func SkImageMakeSubset(cimage unsafe.Pointer, context unsafe.Pointer, subset *SkIrectT) unsafe.Pointer {
	__res := bindlib.CCall3(__imp_sk_image_make_subset.Addr(), bindlib.MarshallSyscall(cimage), bindlib.MarshallSyscall(context), bindlib.MarshallSyscall(subset))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_image_make_texture_image bindlib.PreloadProc

func SkImageMakeTextureImage(cimage unsafe.Pointer, context unsafe.Pointer, mipmapped bool, budgeted bool) unsafe.Pointer {
	__res := bindlib.CCall4(__imp_sk_image_make_texture_image.Addr(), bindlib.MarshallSyscall(cimage), bindlib.MarshallSyscall(context), bindlib.MarshallSyscall(mipmapped), bindlib.MarshallSyscall(budgeted))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_image_make_non_texture_image bindlib.PreloadProc

func SkImageMakeNonTextureImage(cimage unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_image_make_non_texture_image.Addr(), bindlib.MarshallSyscall(cimage))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_image_make_raster_image bindlib.PreloadProc

func SkImageMakeRasterImage(cimage unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_image_make_raster_image.Addr(), bindlib.MarshallSyscall(cimage))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_image_make_with_filter_raster bindlib.PreloadProc

func SkImageMakeWithFilterRaster(cimage unsafe.Pointer, filter unsafe.Pointer, subset *SkIrectT, clipBounds *SkIrectT, outSubset *SkIrectT, outOffset *SkIpointT) unsafe.Pointer {
	__res := bindlib.CCall6(__imp_sk_image_make_with_filter_raster.Addr(), bindlib.MarshallSyscall(cimage), bindlib.MarshallSyscall(filter), bindlib.MarshallSyscall(subset), bindlib.MarshallSyscall(clipBounds), bindlib.MarshallSyscall(outSubset), bindlib.MarshallSyscall(outOffset))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_image_make_with_filter bindlib.PreloadProc

func SkImageMakeWithFilter(cimage unsafe.Pointer, context unsafe.Pointer, filter unsafe.Pointer, subset *SkIrectT, clipBounds *SkIrectT, outSubset *SkIrectT, outOffset *SkIpointT) unsafe.Pointer {
	__res := bindlib.CCall7(__imp_sk_image_make_with_filter.Addr(), bindlib.MarshallSyscall(cimage), bindlib.MarshallSyscall(context), bindlib.MarshallSyscall(filter), bindlib.MarshallSyscall(subset), bindlib.MarshallSyscall(clipBounds), bindlib.MarshallSyscall(outSubset), bindlib.MarshallSyscall(outOffset))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_imagefilter_unref bindlib.PreloadProc

func SkImagefilterUnref(cfilter unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_imagefilter_unref.Addr(), bindlib.MarshallSyscall(cfilter))
}

var __imp_sk_imagefilter_new_arithmetic bindlib.PreloadProc

func SkImagefilterNewArithmetic(k1 float32, k2 float32, k3 float32, k4 float32, enforcePMColor bool, background unsafe.Pointer, foreground unsafe.Pointer, cropRect unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall8(__imp_sk_imagefilter_new_arithmetic.Addr(), bindlib.MarshallSyscall(k1), bindlib.MarshallSyscall(k2), bindlib.MarshallSyscall(k3), bindlib.MarshallSyscall(k4), bindlib.MarshallSyscall(enforcePMColor), bindlib.MarshallSyscall(background), bindlib.MarshallSyscall(foreground), bindlib.MarshallSyscall(cropRect))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_imagefilter_new_blend bindlib.PreloadProc

func SkImagefilterNewBlend(mode SkBlendmodeT, background unsafe.Pointer, foreground unsafe.Pointer, cropRect unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall4(__imp_sk_imagefilter_new_blend.Addr(), bindlib.MarshallSyscall(mode), bindlib.MarshallSyscall(background), bindlib.MarshallSyscall(foreground), bindlib.MarshallSyscall(cropRect))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_imagefilter_new_blender bindlib.PreloadProc

func SkImagefilterNewBlender(blender unsafe.Pointer, background unsafe.Pointer, foreground unsafe.Pointer, cropRect unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall4(__imp_sk_imagefilter_new_blender.Addr(), bindlib.MarshallSyscall(blender), bindlib.MarshallSyscall(background), bindlib.MarshallSyscall(foreground), bindlib.MarshallSyscall(cropRect))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_imagefilter_new_blur bindlib.PreloadProc

func SkImagefilterNewBlur(sigmaX float32, sigmaY float32, tileMode SkShaderTilemodeT, input unsafe.Pointer, cropRect unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall5(__imp_sk_imagefilter_new_blur.Addr(), bindlib.MarshallSyscall(sigmaX), bindlib.MarshallSyscall(sigmaY), bindlib.MarshallSyscall(tileMode), bindlib.MarshallSyscall(input), bindlib.MarshallSyscall(cropRect))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_imagefilter_new_color_filter bindlib.PreloadProc

func SkImagefilterNewColorFilter(cf unsafe.Pointer, input unsafe.Pointer, cropRect unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall3(__imp_sk_imagefilter_new_color_filter.Addr(), bindlib.MarshallSyscall(cf), bindlib.MarshallSyscall(input), bindlib.MarshallSyscall(cropRect))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_imagefilter_new_compose bindlib.PreloadProc

func SkImagefilterNewCompose(outer unsafe.Pointer, inner unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_imagefilter_new_compose.Addr(), bindlib.MarshallSyscall(outer), bindlib.MarshallSyscall(inner))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_imagefilter_new_displacement_map_effect bindlib.PreloadProc

func SkImagefilterNewDisplacementMapEffect(xChannelSelector SkColorChannelT, yChannelSelector SkColorChannelT, scale float32, displacement unsafe.Pointer, color unsafe.Pointer, cropRect unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall6(__imp_sk_imagefilter_new_displacement_map_effect.Addr(), bindlib.MarshallSyscall(xChannelSelector), bindlib.MarshallSyscall(yChannelSelector), bindlib.MarshallSyscall(scale), bindlib.MarshallSyscall(displacement), bindlib.MarshallSyscall(color), bindlib.MarshallSyscall(cropRect))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_imagefilter_new_drop_shadow bindlib.PreloadProc

func SkImagefilterNewDropShadow(dx float32, dy float32, sigmaX float32, sigmaY float32, color SkColorT, input unsafe.Pointer, cropRect unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall7(__imp_sk_imagefilter_new_drop_shadow.Addr(), bindlib.MarshallSyscall(dx), bindlib.MarshallSyscall(dy), bindlib.MarshallSyscall(sigmaX), bindlib.MarshallSyscall(sigmaY), bindlib.MarshallSyscall(color), bindlib.MarshallSyscall(input), bindlib.MarshallSyscall(cropRect))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_imagefilter_new_drop_shadow_only bindlib.PreloadProc

func SkImagefilterNewDropShadowOnly(dx float32, dy float32, sigmaX float32, sigmaY float32, color SkColorT, input unsafe.Pointer, cropRect unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall7(__imp_sk_imagefilter_new_drop_shadow_only.Addr(), bindlib.MarshallSyscall(dx), bindlib.MarshallSyscall(dy), bindlib.MarshallSyscall(sigmaX), bindlib.MarshallSyscall(sigmaY), bindlib.MarshallSyscall(color), bindlib.MarshallSyscall(input), bindlib.MarshallSyscall(cropRect))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_imagefilter_new_image bindlib.PreloadProc

func SkImagefilterNewImage(image unsafe.Pointer, srcRect unsafe.Pointer, dstRect unsafe.Pointer, sampling unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall4(__imp_sk_imagefilter_new_image.Addr(), bindlib.MarshallSyscall(image), bindlib.MarshallSyscall(srcRect), bindlib.MarshallSyscall(dstRect), bindlib.MarshallSyscall(sampling))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_imagefilter_new_image_simple bindlib.PreloadProc

func SkImagefilterNewImageSimple(image unsafe.Pointer, sampling unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_imagefilter_new_image_simple.Addr(), bindlib.MarshallSyscall(image), bindlib.MarshallSyscall(sampling))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_imagefilter_new_magnifier bindlib.PreloadProc

func SkImagefilterNewMagnifier(lensBounds unsafe.Pointer, zoomAmount float32, inset float32, sampling unsafe.Pointer, input unsafe.Pointer, cropRect unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall6(__imp_sk_imagefilter_new_magnifier.Addr(), bindlib.MarshallSyscall(lensBounds), bindlib.MarshallSyscall(zoomAmount), bindlib.MarshallSyscall(inset), bindlib.MarshallSyscall(sampling), bindlib.MarshallSyscall(input), bindlib.MarshallSyscall(cropRect))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_imagefilter_new_matrix_convolution bindlib.PreloadProc

func SkImagefilterNewMatrixConvolution(kernelSize *SkIsizeT, kernel *float32, gain float32, bias float32, kernelOffset *SkIpointT, ctileMode SkShaderTilemodeT, convolveAlpha bool, input unsafe.Pointer, cropRect unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall9(__imp_sk_imagefilter_new_matrix_convolution.Addr(), bindlib.MarshallSyscall(kernelSize), bindlib.MarshallSyscall(kernel), bindlib.MarshallSyscall(gain), bindlib.MarshallSyscall(bias), bindlib.MarshallSyscall(kernelOffset), bindlib.MarshallSyscall(ctileMode), bindlib.MarshallSyscall(convolveAlpha), bindlib.MarshallSyscall(input), bindlib.MarshallSyscall(cropRect))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_imagefilter_new_matrix_transform bindlib.PreloadProc

func SkImagefilterNewMatrixTransform(cmatrix unsafe.Pointer, sampling unsafe.Pointer, input unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall3(__imp_sk_imagefilter_new_matrix_transform.Addr(), bindlib.MarshallSyscall(cmatrix), bindlib.MarshallSyscall(sampling), bindlib.MarshallSyscall(input))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_imagefilter_new_merge bindlib.PreloadProc

func SkImagefilterNewMerge(cfilters *unsafe.Pointer, count int32, cropRect unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall3(__imp_sk_imagefilter_new_merge.Addr(), bindlib.MarshallSyscall(cfilters), bindlib.MarshallSyscall(count), bindlib.MarshallSyscall(cropRect))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_imagefilter_new_merge_simple bindlib.PreloadProc

func SkImagefilterNewMergeSimple(first unsafe.Pointer, second unsafe.Pointer, cropRect unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall3(__imp_sk_imagefilter_new_merge_simple.Addr(), bindlib.MarshallSyscall(first), bindlib.MarshallSyscall(second), bindlib.MarshallSyscall(cropRect))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_imagefilter_new_offset bindlib.PreloadProc

func SkImagefilterNewOffset(dx float32, dy float32, input unsafe.Pointer, cropRect unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall4(__imp_sk_imagefilter_new_offset.Addr(), bindlib.MarshallSyscall(dx), bindlib.MarshallSyscall(dy), bindlib.MarshallSyscall(input), bindlib.MarshallSyscall(cropRect))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_imagefilter_new_picture bindlib.PreloadProc

func SkImagefilterNewPicture(picture unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_imagefilter_new_picture.Addr(), bindlib.MarshallSyscall(picture))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_imagefilter_new_picture_with_rect bindlib.PreloadProc

func SkImagefilterNewPictureWithRect(picture unsafe.Pointer, targetRect unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_imagefilter_new_picture_with_rect.Addr(), bindlib.MarshallSyscall(picture), bindlib.MarshallSyscall(targetRect))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_imagefilter_new_shader bindlib.PreloadProc

func SkImagefilterNewShader(shader unsafe.Pointer, dither bool, cropRect unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall3(__imp_sk_imagefilter_new_shader.Addr(), bindlib.MarshallSyscall(shader), bindlib.MarshallSyscall(dither), bindlib.MarshallSyscall(cropRect))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_imagefilter_new_tile bindlib.PreloadProc

func SkImagefilterNewTile(src unsafe.Pointer, dst unsafe.Pointer, input unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall3(__imp_sk_imagefilter_new_tile.Addr(), bindlib.MarshallSyscall(src), bindlib.MarshallSyscall(dst), bindlib.MarshallSyscall(input))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_imagefilter_new_dilate bindlib.PreloadProc

func SkImagefilterNewDilate(radiusX float32, radiusY float32, input unsafe.Pointer, cropRect unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall4(__imp_sk_imagefilter_new_dilate.Addr(), bindlib.MarshallSyscall(radiusX), bindlib.MarshallSyscall(radiusY), bindlib.MarshallSyscall(input), bindlib.MarshallSyscall(cropRect))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_imagefilter_new_erode bindlib.PreloadProc

func SkImagefilterNewErode(radiusX float32, radiusY float32, input unsafe.Pointer, cropRect unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall4(__imp_sk_imagefilter_new_erode.Addr(), bindlib.MarshallSyscall(radiusX), bindlib.MarshallSyscall(radiusY), bindlib.MarshallSyscall(input), bindlib.MarshallSyscall(cropRect))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_imagefilter_new_distant_lit_diffuse bindlib.PreloadProc

func SkImagefilterNewDistantLitDiffuse(direction unsafe.Pointer, lightColor SkColorT, surfaceScale float32, kd float32, input unsafe.Pointer, cropRect unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall6(__imp_sk_imagefilter_new_distant_lit_diffuse.Addr(), bindlib.MarshallSyscall(direction), bindlib.MarshallSyscall(lightColor), bindlib.MarshallSyscall(surfaceScale), bindlib.MarshallSyscall(kd), bindlib.MarshallSyscall(input), bindlib.MarshallSyscall(cropRect))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_imagefilter_new_point_lit_diffuse bindlib.PreloadProc

func SkImagefilterNewPointLitDiffuse(location unsafe.Pointer, lightColor SkColorT, surfaceScale float32, kd float32, input unsafe.Pointer, cropRect unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall6(__imp_sk_imagefilter_new_point_lit_diffuse.Addr(), bindlib.MarshallSyscall(location), bindlib.MarshallSyscall(lightColor), bindlib.MarshallSyscall(surfaceScale), bindlib.MarshallSyscall(kd), bindlib.MarshallSyscall(input), bindlib.MarshallSyscall(cropRect))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_imagefilter_new_spot_lit_diffuse bindlib.PreloadProc

func SkImagefilterNewSpotLitDiffuse(location unsafe.Pointer, target unsafe.Pointer, specularExponent float32, cutoffAngle float32, lightColor SkColorT, surfaceScale float32, kd float32, input unsafe.Pointer, cropRect unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall9(__imp_sk_imagefilter_new_spot_lit_diffuse.Addr(), bindlib.MarshallSyscall(location), bindlib.MarshallSyscall(target), bindlib.MarshallSyscall(specularExponent), bindlib.MarshallSyscall(cutoffAngle), bindlib.MarshallSyscall(lightColor), bindlib.MarshallSyscall(surfaceScale), bindlib.MarshallSyscall(kd), bindlib.MarshallSyscall(input), bindlib.MarshallSyscall(cropRect))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_imagefilter_new_distant_lit_specular bindlib.PreloadProc

func SkImagefilterNewDistantLitSpecular(direction unsafe.Pointer, lightColor SkColorT, surfaceScale float32, ks float32, shininess float32, input unsafe.Pointer, cropRect unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall7(__imp_sk_imagefilter_new_distant_lit_specular.Addr(), bindlib.MarshallSyscall(direction), bindlib.MarshallSyscall(lightColor), bindlib.MarshallSyscall(surfaceScale), bindlib.MarshallSyscall(ks), bindlib.MarshallSyscall(shininess), bindlib.MarshallSyscall(input), bindlib.MarshallSyscall(cropRect))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_imagefilter_new_point_lit_specular bindlib.PreloadProc

func SkImagefilterNewPointLitSpecular(location unsafe.Pointer, lightColor SkColorT, surfaceScale float32, ks float32, shininess float32, input unsafe.Pointer, cropRect unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall7(__imp_sk_imagefilter_new_point_lit_specular.Addr(), bindlib.MarshallSyscall(location), bindlib.MarshallSyscall(lightColor), bindlib.MarshallSyscall(surfaceScale), bindlib.MarshallSyscall(ks), bindlib.MarshallSyscall(shininess), bindlib.MarshallSyscall(input), bindlib.MarshallSyscall(cropRect))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_imagefilter_new_spot_lit_specular bindlib.PreloadProc

func SkImagefilterNewSpotLitSpecular(location unsafe.Pointer, target unsafe.Pointer, specularExponent float32, cutoffAngle float32, lightColor SkColorT, surfaceScale float32, ks float32, shininess float32, input unsafe.Pointer, cropRect unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall10(__imp_sk_imagefilter_new_spot_lit_specular.Addr(), bindlib.MarshallSyscall(location), bindlib.MarshallSyscall(target), bindlib.MarshallSyscall(specularExponent), bindlib.MarshallSyscall(cutoffAngle), bindlib.MarshallSyscall(lightColor), bindlib.MarshallSyscall(surfaceScale), bindlib.MarshallSyscall(ks), bindlib.MarshallSyscall(shininess), bindlib.MarshallSyscall(input), bindlib.MarshallSyscall(cropRect))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_linker_keep_alive bindlib.PreloadProc

func SkLinkerKeepAlive() { bindlib.CCall0(__imp_sk_linker_keep_alive.Addr()) }

var __imp_sk_maskfilter_ref bindlib.PreloadProc

func SkMaskfilterRef( unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_maskfilter_ref.Addr(), bindlib.MarshallSyscall())
}

var __imp_sk_maskfilter_unref bindlib.PreloadProc

func SkMaskfilterUnref( unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_maskfilter_unref.Addr(), bindlib.MarshallSyscall())
}

var __imp_sk_maskfilter_new_blur bindlib.PreloadProc

func SkMaskfilterNewBlur( SkBlurstyleT, sigma float32) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_maskfilter_new_blur.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(sigma))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_maskfilter_new_blur_with_flags bindlib.PreloadProc

func SkMaskfilterNewBlurWithFlags( SkBlurstyleT, sigma float32, respectCTM bool) unsafe.Pointer {
	__res := bindlib.CCall3(__imp_sk_maskfilter_new_blur_with_flags.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(sigma), bindlib.MarshallSyscall(respectCTM))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_maskfilter_new_table bindlib.PreloadProc

func SkMaskfilterNewTable(table *int32) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_maskfilter_new_table.Addr(), bindlib.MarshallSyscall(table))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_maskfilter_new_gamma bindlib.PreloadProc

func SkMaskfilterNewGamma(gamma float32) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_maskfilter_new_gamma.Addr(), bindlib.MarshallSyscall(gamma))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_maskfilter_new_clip bindlib.PreloadProc

func SkMaskfilterNewClip(min int32, max int32) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_maskfilter_new_clip.Addr(), bindlib.MarshallSyscall(min), bindlib.MarshallSyscall(max))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_maskfilter_new_shader bindlib.PreloadProc

func SkMaskfilterNewShader(cshader unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_maskfilter_new_shader.Addr(), bindlib.MarshallSyscall(cshader))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_matrix_try_invert bindlib.PreloadProc

func SkMatrixTryInvert(matrix unsafe.Pointer, result unsafe.Pointer) bool {
	__res := bindlib.CCall2(__imp_sk_matrix_try_invert.Addr(), bindlib.MarshallSyscall(matrix), bindlib.MarshallSyscall(result))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_matrix_concat bindlib.PreloadProc

func SkMatrixConcat(result unsafe.Pointer, first unsafe.Pointer, second unsafe.Pointer) {
	bindlib.CCall3(__imp_sk_matrix_concat.Addr(), bindlib.MarshallSyscall(result), bindlib.MarshallSyscall(first), bindlib.MarshallSyscall(second))
}

var __imp_sk_matrix_pre_concat bindlib.PreloadProc

func SkMatrixPreConcat(result unsafe.Pointer, matrix unsafe.Pointer) {
	bindlib.CCall2(__imp_sk_matrix_pre_concat.Addr(), bindlib.MarshallSyscall(result), bindlib.MarshallSyscall(matrix))
}

var __imp_sk_matrix_post_concat bindlib.PreloadProc

func SkMatrixPostConcat(result unsafe.Pointer, matrix unsafe.Pointer) {
	bindlib.CCall2(__imp_sk_matrix_post_concat.Addr(), bindlib.MarshallSyscall(result), bindlib.MarshallSyscall(matrix))
}

var __imp_sk_matrix_map_rect bindlib.PreloadProc

func SkMatrixMapRect(matrix unsafe.Pointer, dest unsafe.Pointer, source unsafe.Pointer) {
	bindlib.CCall3(__imp_sk_matrix_map_rect.Addr(), bindlib.MarshallSyscall(matrix), bindlib.MarshallSyscall(dest), bindlib.MarshallSyscall(source))
}

var __imp_sk_matrix_map_points bindlib.PreloadProc

func SkMatrixMapPoints(matrix unsafe.Pointer, dst unsafe.Pointer, src unsafe.Pointer, count int32) {
	bindlib.CCall4(__imp_sk_matrix_map_points.Addr(), bindlib.MarshallSyscall(matrix), bindlib.MarshallSyscall(dst), bindlib.MarshallSyscall(src), bindlib.MarshallSyscall(count))
}

var __imp_sk_matrix_map_vectors bindlib.PreloadProc

func SkMatrixMapVectors(matrix unsafe.Pointer, dst unsafe.Pointer, src unsafe.Pointer, count int32) {
	bindlib.CCall4(__imp_sk_matrix_map_vectors.Addr(), bindlib.MarshallSyscall(matrix), bindlib.MarshallSyscall(dst), bindlib.MarshallSyscall(src), bindlib.MarshallSyscall(count))
}

var __imp_sk_matrix_map_xy bindlib.PreloadProc

func SkMatrixMapXy(matrix unsafe.Pointer, x float32, y float32, result unsafe.Pointer) {
	bindlib.CCall4(__imp_sk_matrix_map_xy.Addr(), bindlib.MarshallSyscall(matrix), bindlib.MarshallSyscall(x), bindlib.MarshallSyscall(y), bindlib.MarshallSyscall(result))
}

var __imp_sk_matrix_map_vector bindlib.PreloadProc

func SkMatrixMapVector(matrix unsafe.Pointer, x float32, y float32, result unsafe.Pointer) {
	bindlib.CCall4(__imp_sk_matrix_map_vector.Addr(), bindlib.MarshallSyscall(matrix), bindlib.MarshallSyscall(x), bindlib.MarshallSyscall(y), bindlib.MarshallSyscall(result))
}

var __imp_sk_matrix_map_radius bindlib.PreloadProc

func SkMatrixMapRadius(matrix unsafe.Pointer, radius float32) float32 {
	__res := bindlib.CCall2(__imp_sk_matrix_map_radius.Addr(), bindlib.MarshallSyscall(matrix), bindlib.MarshallSyscall(radius))
	return bindlib.UnmarshallSyscall[float32](__res)
}

var __imp_sk_paint_new bindlib.PreloadProc

func SkPaintNew() unsafe.Pointer {
	__res := bindlib.CCall0(__imp_sk_paint_new.Addr())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_paint_clone bindlib.PreloadProc

func SkPaintClone( unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_paint_clone.Addr(), bindlib.MarshallSyscall())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_paint_delete bindlib.PreloadProc

func SkPaintDelete( unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_paint_delete.Addr(), bindlib.MarshallSyscall())
}

var __imp_sk_paint_reset bindlib.PreloadProc

func SkPaintReset( unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_paint_reset.Addr(), bindlib.MarshallSyscall())
}

var __imp_sk_paint_is_antialias bindlib.PreloadProc

func SkPaintIsAntialias( unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_paint_is_antialias.Addr(), bindlib.MarshallSyscall())
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_paint_set_antialias bindlib.PreloadProc

func SkPaintSetAntialias( unsafe.Pointer,  bool) {
	bindlib.CCall2(__imp_sk_paint_set_antialias.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall())
}

var __imp_sk_paint_get_color bindlib.PreloadProc

func SkPaintGetColor( unsafe.Pointer) SkColorT {
	__res := bindlib.CCall1(__imp_sk_paint_get_color.Addr(), bindlib.MarshallSyscall())
	return bindlib.UnmarshallSyscall[SkColorT](__res)
}

var __imp_sk_paint_get_color4f bindlib.PreloadProc

func SkPaintGetColor4f(paint unsafe.Pointer, color unsafe.Pointer) {
	bindlib.CCall2(__imp_sk_paint_get_color4f.Addr(), bindlib.MarshallSyscall(paint), bindlib.MarshallSyscall(color))
}

var __imp_sk_paint_set_color bindlib.PreloadProc

func SkPaintSetColor( unsafe.Pointer,  SkColorT) {
	bindlib.CCall2(__imp_sk_paint_set_color.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall())
}

var __imp_sk_paint_set_color4f bindlib.PreloadProc

func SkPaintSetColor4f(paint unsafe.Pointer, color unsafe.Pointer, colorspace unsafe.Pointer) {
	bindlib.CCall3(__imp_sk_paint_set_color4f.Addr(), bindlib.MarshallSyscall(paint), bindlib.MarshallSyscall(color), bindlib.MarshallSyscall(colorspace))
}

var __imp_sk_paint_get_style bindlib.PreloadProc

func SkPaintGetStyle( unsafe.Pointer) SkPaintStyleT {
	__res := bindlib.CCall1(__imp_sk_paint_get_style.Addr(), bindlib.MarshallSyscall())
	return bindlib.UnmarshallSyscall[SkPaintStyleT](__res)
}

var __imp_sk_paint_set_style bindlib.PreloadProc

func SkPaintSetStyle( unsafe.Pointer,  SkPaintStyleT) {
	bindlib.CCall2(__imp_sk_paint_set_style.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall())
}

var __imp_sk_paint_get_stroke_width bindlib.PreloadProc

func SkPaintGetStrokeWidth( unsafe.Pointer) float32 {
	__res := bindlib.CCall1(__imp_sk_paint_get_stroke_width.Addr(), bindlib.MarshallSyscall())
	return bindlib.UnmarshallSyscall[float32](__res)
}

var __imp_sk_paint_set_stroke_width bindlib.PreloadProc

func SkPaintSetStrokeWidth( unsafe.Pointer, width float32) {
	bindlib.CCall2(__imp_sk_paint_set_stroke_width.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(width))
}

var __imp_sk_paint_get_stroke_miter bindlib.PreloadProc

func SkPaintGetStrokeMiter( unsafe.Pointer) float32 {
	__res := bindlib.CCall1(__imp_sk_paint_get_stroke_miter.Addr(), bindlib.MarshallSyscall())
	return bindlib.UnmarshallSyscall[float32](__res)
}

var __imp_sk_paint_set_stroke_miter bindlib.PreloadProc

func SkPaintSetStrokeMiter( unsafe.Pointer, miter float32) {
	bindlib.CCall2(__imp_sk_paint_set_stroke_miter.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(miter))
}

var __imp_sk_paint_get_stroke_cap bindlib.PreloadProc

func SkPaintGetStrokeCap( unsafe.Pointer) SkStrokeCapT {
	__res := bindlib.CCall1(__imp_sk_paint_get_stroke_cap.Addr(), bindlib.MarshallSyscall())
	return bindlib.UnmarshallSyscall[SkStrokeCapT](__res)
}

var __imp_sk_paint_set_stroke_cap bindlib.PreloadProc

func SkPaintSetStrokeCap( unsafe.Pointer,  SkStrokeCapT) {
	bindlib.CCall2(__imp_sk_paint_set_stroke_cap.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall())
}

var __imp_sk_paint_get_stroke_join bindlib.PreloadProc

func SkPaintGetStrokeJoin( unsafe.Pointer) SkStrokeJoinT {
	__res := bindlib.CCall1(__imp_sk_paint_get_stroke_join.Addr(), bindlib.MarshallSyscall())
	return bindlib.UnmarshallSyscall[SkStrokeJoinT](__res)
}

var __imp_sk_paint_set_stroke_join bindlib.PreloadProc

func SkPaintSetStrokeJoin( unsafe.Pointer,  SkStrokeJoinT) {
	bindlib.CCall2(__imp_sk_paint_set_stroke_join.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall())
}

var __imp_sk_paint_set_shader bindlib.PreloadProc

func SkPaintSetShader( unsafe.Pointer,  unsafe.Pointer) {
	bindlib.CCall2(__imp_sk_paint_set_shader.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall())
}

var __imp_sk_paint_set_maskfilter bindlib.PreloadProc

func SkPaintSetMaskfilter( unsafe.Pointer,  unsafe.Pointer) {
	bindlib.CCall2(__imp_sk_paint_set_maskfilter.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall())
}

var __imp_sk_paint_set_blendmode bindlib.PreloadProc

func SkPaintSetBlendmode( unsafe.Pointer,  SkBlendmodeT) {
	bindlib.CCall2(__imp_sk_paint_set_blendmode.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall())
}

var __imp_sk_paint_set_blender bindlib.PreloadProc

func SkPaintSetBlender(paint unsafe.Pointer, blender unsafe.Pointer) {
	bindlib.CCall2(__imp_sk_paint_set_blender.Addr(), bindlib.MarshallSyscall(paint), bindlib.MarshallSyscall(blender))
}

var __imp_sk_paint_is_dither bindlib.PreloadProc

func SkPaintIsDither( unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_paint_is_dither.Addr(), bindlib.MarshallSyscall())
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_paint_set_dither bindlib.PreloadProc

func SkPaintSetDither( unsafe.Pointer,  bool) {
	bindlib.CCall2(__imp_sk_paint_set_dither.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall())
}

var __imp_sk_paint_get_shader bindlib.PreloadProc

func SkPaintGetShader( unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_paint_get_shader.Addr(), bindlib.MarshallSyscall())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_paint_get_maskfilter bindlib.PreloadProc

func SkPaintGetMaskfilter( unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_paint_get_maskfilter.Addr(), bindlib.MarshallSyscall())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_paint_set_colorfilter bindlib.PreloadProc

func SkPaintSetColorfilter( unsafe.Pointer,  unsafe.Pointer) {
	bindlib.CCall2(__imp_sk_paint_set_colorfilter.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall())
}

var __imp_sk_paint_get_colorfilter bindlib.PreloadProc

func SkPaintGetColorfilter( unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_paint_get_colorfilter.Addr(), bindlib.MarshallSyscall())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_paint_set_imagefilter bindlib.PreloadProc

func SkPaintSetImagefilter( unsafe.Pointer,  unsafe.Pointer) {
	bindlib.CCall2(__imp_sk_paint_set_imagefilter.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall())
}

var __imp_sk_paint_get_imagefilter bindlib.PreloadProc

func SkPaintGetImagefilter( unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_paint_get_imagefilter.Addr(), bindlib.MarshallSyscall())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_paint_get_blendmode bindlib.PreloadProc

func SkPaintGetBlendmode( unsafe.Pointer) SkBlendmodeT {
	__res := bindlib.CCall1(__imp_sk_paint_get_blendmode.Addr(), bindlib.MarshallSyscall())
	return bindlib.UnmarshallSyscall[SkBlendmodeT](__res)
}

var __imp_sk_paint_get_blender bindlib.PreloadProc

func SkPaintGetBlender(cpaint unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_paint_get_blender.Addr(), bindlib.MarshallSyscall(cpaint))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_paint_get_path_effect bindlib.PreloadProc

func SkPaintGetPathEffect(cpaint unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_paint_get_path_effect.Addr(), bindlib.MarshallSyscall(cpaint))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_paint_set_path_effect bindlib.PreloadProc

func SkPaintSetPathEffect(cpaint unsafe.Pointer, effect unsafe.Pointer) {
	bindlib.CCall2(__imp_sk_paint_set_path_effect.Addr(), bindlib.MarshallSyscall(cpaint), bindlib.MarshallSyscall(effect))
}

var __imp_sk_paint_get_fill_path bindlib.PreloadProc

func SkPaintGetFillPath(cpaint unsafe.Pointer, src unsafe.Pointer, dst unsafe.Pointer, cullRect unsafe.Pointer, cmatrix unsafe.Pointer) bool {
	__res := bindlib.CCall5(__imp_sk_paint_get_fill_path.Addr(), bindlib.MarshallSyscall(cpaint), bindlib.MarshallSyscall(src), bindlib.MarshallSyscall(dst), bindlib.MarshallSyscall(cullRect), bindlib.MarshallSyscall(cmatrix))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_path_new bindlib.PreloadProc

func SkPathNew() unsafe.Pointer {
	__res := bindlib.CCall0(__imp_sk_path_new.Addr())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_path_delete bindlib.PreloadProc

func SkPathDelete( unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_path_delete.Addr(), bindlib.MarshallSyscall())
}

var __imp_sk_path_move_to bindlib.PreloadProc

func SkPathMoveTo( unsafe.Pointer, x float32, y float32) {
	bindlib.CCall3(__imp_sk_path_move_to.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(x), bindlib.MarshallSyscall(y))
}

var __imp_sk_path_line_to bindlib.PreloadProc

func SkPathLineTo( unsafe.Pointer, x float32, y float32) {
	bindlib.CCall3(__imp_sk_path_line_to.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(x), bindlib.MarshallSyscall(y))
}

var __imp_sk_path_quad_to bindlib.PreloadProc

func SkPathQuadTo( unsafe.Pointer, x0 float32, y0 float32, x1 float32, y1 float32) {
	bindlib.CCall5(__imp_sk_path_quad_to.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(x0), bindlib.MarshallSyscall(y0), bindlib.MarshallSyscall(x1), bindlib.MarshallSyscall(y1))
}

var __imp_sk_path_conic_to bindlib.PreloadProc

func SkPathConicTo( unsafe.Pointer, x0 float32, y0 float32, x1 float32, y1 float32, w float32) {
	bindlib.CCall6(__imp_sk_path_conic_to.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(x0), bindlib.MarshallSyscall(y0), bindlib.MarshallSyscall(x1), bindlib.MarshallSyscall(y1), bindlib.MarshallSyscall(w))
}

var __imp_sk_path_cubic_to bindlib.PreloadProc

func SkPathCubicTo( unsafe.Pointer, x0 float32, y0 float32, x1 float32, y1 float32, x2 float32, y2 float32) {
	bindlib.CCall7(__imp_sk_path_cubic_to.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(x0), bindlib.MarshallSyscall(y0), bindlib.MarshallSyscall(x1), bindlib.MarshallSyscall(y1), bindlib.MarshallSyscall(x2), bindlib.MarshallSyscall(y2))
}

var __imp_sk_path_arc_to bindlib.PreloadProc

func SkPathArcTo( unsafe.Pointer, rx float32, ry float32, xAxisRotate float32, largeArc SkPathArcSizeT, sweep SkPathDirectionT, x float32, y float32) {
	bindlib.CCall8(__imp_sk_path_arc_to.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(rx), bindlib.MarshallSyscall(ry), bindlib.MarshallSyscall(xAxisRotate), bindlib.MarshallSyscall(largeArc), bindlib.MarshallSyscall(sweep), bindlib.MarshallSyscall(x), bindlib.MarshallSyscall(y))
}

var __imp_sk_path_rarc_to bindlib.PreloadProc

func SkPathRarcTo( unsafe.Pointer, rx float32, ry float32, xAxisRotate float32, largeArc SkPathArcSizeT, sweep SkPathDirectionT, x float32, y float32) {
	bindlib.CCall8(__imp_sk_path_rarc_to.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(rx), bindlib.MarshallSyscall(ry), bindlib.MarshallSyscall(xAxisRotate), bindlib.MarshallSyscall(largeArc), bindlib.MarshallSyscall(sweep), bindlib.MarshallSyscall(x), bindlib.MarshallSyscall(y))
}

var __imp_sk_path_arc_to_with_oval bindlib.PreloadProc

func SkPathArcToWithOval( unsafe.Pointer, oval unsafe.Pointer, startAngle float32, sweepAngle float32, forceMoveTo bool) {
	bindlib.CCall5(__imp_sk_path_arc_to_with_oval.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(oval), bindlib.MarshallSyscall(startAngle), bindlib.MarshallSyscall(sweepAngle), bindlib.MarshallSyscall(forceMoveTo))
}

var __imp_sk_path_arc_to_with_points bindlib.PreloadProc

func SkPathArcToWithPoints( unsafe.Pointer, x1 float32, y1 float32, x2 float32, y2 float32, radius float32) {
	bindlib.CCall6(__imp_sk_path_arc_to_with_points.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(x1), bindlib.MarshallSyscall(y1), bindlib.MarshallSyscall(x2), bindlib.MarshallSyscall(y2), bindlib.MarshallSyscall(radius))
}

var __imp_sk_path_close bindlib.PreloadProc

func SkPathClose( unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_path_close.Addr(), bindlib.MarshallSyscall())
}

var __imp_sk_path_add_rect bindlib.PreloadProc

func SkPathAddRect( unsafe.Pointer,  unsafe.Pointer,  SkPathDirectionT) {
	bindlib.CCall3(__imp_sk_path_add_rect.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall())
}

var __imp_sk_path_add_rrect bindlib.PreloadProc

func SkPathAddRrect( unsafe.Pointer,  unsafe.Pointer,  SkPathDirectionT) {
	bindlib.CCall3(__imp_sk_path_add_rrect.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall())
}

var __imp_sk_path_add_rrect_start bindlib.PreloadProc

func SkPathAddRrectStart( unsafe.Pointer,  unsafe.Pointer,  SkPathDirectionT, uint32_t int32) {
	bindlib.CCall4(__imp_sk_path_add_rrect_start.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(uint32_t))
}

var __imp_sk_path_add_rounded_rect bindlib.PreloadProc

func SkPathAddRoundedRect( unsafe.Pointer,  unsafe.Pointer,  float32,  float32,  SkPathDirectionT) {
	bindlib.CCall5(__imp_sk_path_add_rounded_rect.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall())
}

var __imp_sk_path_add_oval bindlib.PreloadProc

func SkPathAddOval( unsafe.Pointer,  unsafe.Pointer,  SkPathDirectionT) {
	bindlib.CCall3(__imp_sk_path_add_oval.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall())
}

var __imp_sk_path_add_circle bindlib.PreloadProc

func SkPathAddCircle( unsafe.Pointer, x float32, y float32, radius float32, dir SkPathDirectionT) {
	bindlib.CCall5(__imp_sk_path_add_circle.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(x), bindlib.MarshallSyscall(y), bindlib.MarshallSyscall(radius), bindlib.MarshallSyscall(dir))
}

var __imp_sk_path_get_bounds bindlib.PreloadProc

func SkPathGetBounds( unsafe.Pointer,  unsafe.Pointer) {
	bindlib.CCall2(__imp_sk_path_get_bounds.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall())
}

var __imp_sk_path_compute_tight_bounds bindlib.PreloadProc

func SkPathComputeTightBounds( unsafe.Pointer,  unsafe.Pointer) {
	bindlib.CCall2(__imp_sk_path_compute_tight_bounds.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall())
}

var __imp_sk_path_rmove_to bindlib.PreloadProc

func SkPathRmoveTo( unsafe.Pointer, dx float32, dy float32) {
	bindlib.CCall3(__imp_sk_path_rmove_to.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(dx), bindlib.MarshallSyscall(dy))
}

var __imp_sk_path_rline_to bindlib.PreloadProc

func SkPathRlineTo( unsafe.Pointer, dx float32, yd float32) {
	bindlib.CCall3(__imp_sk_path_rline_to.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(dx), bindlib.MarshallSyscall(yd))
}

var __imp_sk_path_rquad_to bindlib.PreloadProc

func SkPathRquadTo( unsafe.Pointer, dx0 float32, dy0 float32, dx1 float32, dy1 float32) {
	bindlib.CCall5(__imp_sk_path_rquad_to.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(dx0), bindlib.MarshallSyscall(dy0), bindlib.MarshallSyscall(dx1), bindlib.MarshallSyscall(dy1))
}

var __imp_sk_path_rconic_to bindlib.PreloadProc

func SkPathRconicTo( unsafe.Pointer, dx0 float32, dy0 float32, dx1 float32, dy1 float32, w float32) {
	bindlib.CCall6(__imp_sk_path_rconic_to.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(dx0), bindlib.MarshallSyscall(dy0), bindlib.MarshallSyscall(dx1), bindlib.MarshallSyscall(dy1), bindlib.MarshallSyscall(w))
}

var __imp_sk_path_rcubic_to bindlib.PreloadProc

func SkPathRcubicTo( unsafe.Pointer, dx0 float32, dy0 float32, dx1 float32, dy1 float32, dx2 float32, dy2 float32) {
	bindlib.CCall7(__imp_sk_path_rcubic_to.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(dx0), bindlib.MarshallSyscall(dy0), bindlib.MarshallSyscall(dx1), bindlib.MarshallSyscall(dy1), bindlib.MarshallSyscall(dx2), bindlib.MarshallSyscall(dy2))
}

var __imp_sk_path_add_rect_start bindlib.PreloadProc

func SkPathAddRectStart(cpath unsafe.Pointer, crect unsafe.Pointer, cdir SkPathDirectionT, startIndex int32) {
	bindlib.CCall4(__imp_sk_path_add_rect_start.Addr(), bindlib.MarshallSyscall(cpath), bindlib.MarshallSyscall(crect), bindlib.MarshallSyscall(cdir), bindlib.MarshallSyscall(startIndex))
}

var __imp_sk_path_add_arc bindlib.PreloadProc

func SkPathAddArc(cpath unsafe.Pointer, crect unsafe.Pointer, startAngle float32, sweepAngle float32) {
	bindlib.CCall4(__imp_sk_path_add_arc.Addr(), bindlib.MarshallSyscall(cpath), bindlib.MarshallSyscall(crect), bindlib.MarshallSyscall(startAngle), bindlib.MarshallSyscall(sweepAngle))
}

var __imp_sk_path_get_filltype bindlib.PreloadProc

func SkPathGetFilltype( unsafe.Pointer) SkPathFilltypeT {
	__res := bindlib.CCall1(__imp_sk_path_get_filltype.Addr(), bindlib.MarshallSyscall())
	return bindlib.UnmarshallSyscall[SkPathFilltypeT](__res)
}

var __imp_sk_path_set_filltype bindlib.PreloadProc

func SkPathSetFilltype( unsafe.Pointer,  SkPathFilltypeT) {
	bindlib.CCall2(__imp_sk_path_set_filltype.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall())
}

var __imp_sk_path_transform bindlib.PreloadProc

func SkPathTransform(cpath unsafe.Pointer, cmatrix unsafe.Pointer) {
	bindlib.CCall2(__imp_sk_path_transform.Addr(), bindlib.MarshallSyscall(cpath), bindlib.MarshallSyscall(cmatrix))
}

var __imp_sk_path_transform_to_dest bindlib.PreloadProc

func SkPathTransformToDest(cpath unsafe.Pointer, cmatrix unsafe.Pointer, destination unsafe.Pointer) {
	bindlib.CCall3(__imp_sk_path_transform_to_dest.Addr(), bindlib.MarshallSyscall(cpath), bindlib.MarshallSyscall(cmatrix), bindlib.MarshallSyscall(destination))
}

var __imp_sk_path_clone bindlib.PreloadProc

func SkPathClone(cpath unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_path_clone.Addr(), bindlib.MarshallSyscall(cpath))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_path_add_path_offset bindlib.PreloadProc

func SkPathAddPathOffset(cpath unsafe.Pointer, other unsafe.Pointer, dx float32, dy float32, add_mode SkPathAddModeT) {
	bindlib.CCall5(__imp_sk_path_add_path_offset.Addr(), bindlib.MarshallSyscall(cpath), bindlib.MarshallSyscall(other), bindlib.MarshallSyscall(dx), bindlib.MarshallSyscall(dy), bindlib.MarshallSyscall(add_mode))
}

var __imp_sk_path_add_path_matrix bindlib.PreloadProc

func SkPathAddPathMatrix(cpath unsafe.Pointer, other unsafe.Pointer, matrix unsafe.Pointer, add_mode SkPathAddModeT) {
	bindlib.CCall4(__imp_sk_path_add_path_matrix.Addr(), bindlib.MarshallSyscall(cpath), bindlib.MarshallSyscall(other), bindlib.MarshallSyscall(matrix), bindlib.MarshallSyscall(add_mode))
}

var __imp_sk_path_add_path bindlib.PreloadProc

func SkPathAddPath(cpath unsafe.Pointer, other unsafe.Pointer, add_mode SkPathAddModeT) {
	bindlib.CCall3(__imp_sk_path_add_path.Addr(), bindlib.MarshallSyscall(cpath), bindlib.MarshallSyscall(other), bindlib.MarshallSyscall(add_mode))
}

var __imp_sk_path_add_path_reverse bindlib.PreloadProc

func SkPathAddPathReverse(cpath unsafe.Pointer, other unsafe.Pointer) {
	bindlib.CCall2(__imp_sk_path_add_path_reverse.Addr(), bindlib.MarshallSyscall(cpath), bindlib.MarshallSyscall(other))
}

var __imp_sk_path_reset bindlib.PreloadProc

func SkPathReset(cpath unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_path_reset.Addr(), bindlib.MarshallSyscall(cpath))
}

var __imp_sk_path_rewind bindlib.PreloadProc

func SkPathRewind(cpath unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_path_rewind.Addr(), bindlib.MarshallSyscall(cpath))
}

var __imp_sk_path_count_points bindlib.PreloadProc

func SkPathCountPoints(cpath unsafe.Pointer) int32 {
	__res := bindlib.CCall1(__imp_sk_path_count_points.Addr(), bindlib.MarshallSyscall(cpath))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_path_count_verbs bindlib.PreloadProc

func SkPathCountVerbs(cpath unsafe.Pointer) int32 {
	__res := bindlib.CCall1(__imp_sk_path_count_verbs.Addr(), bindlib.MarshallSyscall(cpath))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_path_get_point bindlib.PreloadProc

func SkPathGetPoint(cpath unsafe.Pointer, index int32, point unsafe.Pointer) {
	bindlib.CCall3(__imp_sk_path_get_point.Addr(), bindlib.MarshallSyscall(cpath), bindlib.MarshallSyscall(index), bindlib.MarshallSyscall(point))
}

var __imp_sk_path_get_points bindlib.PreloadProc

func SkPathGetPoints(cpath unsafe.Pointer, points unsafe.Pointer, max int32) int32 {
	__res := bindlib.CCall3(__imp_sk_path_get_points.Addr(), bindlib.MarshallSyscall(cpath), bindlib.MarshallSyscall(points), bindlib.MarshallSyscall(max))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_path_contains bindlib.PreloadProc

func SkPathContains(cpath unsafe.Pointer, x float32, y float32) bool {
	__res := bindlib.CCall3(__imp_sk_path_contains.Addr(), bindlib.MarshallSyscall(cpath), bindlib.MarshallSyscall(x), bindlib.MarshallSyscall(y))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_path_parse_svg_string bindlib.PreloadProc

func SkPathParseSvgString(cpath unsafe.Pointer, str *byte) bool {
	__res := bindlib.CCall2(__imp_sk_path_parse_svg_string.Addr(), bindlib.MarshallSyscall(cpath), bindlib.MarshallSyscall(str))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_path_to_svg_string bindlib.PreloadProc

func SkPathToSvgString(cpath unsafe.Pointer, str unsafe.Pointer) {
	bindlib.CCall2(__imp_sk_path_to_svg_string.Addr(), bindlib.MarshallSyscall(cpath), bindlib.MarshallSyscall(str))
}

var __imp_sk_path_get_last_point bindlib.PreloadProc

func SkPathGetLastPoint(cpath unsafe.Pointer, point unsafe.Pointer) bool {
	__res := bindlib.CCall2(__imp_sk_path_get_last_point.Addr(), bindlib.MarshallSyscall(cpath), bindlib.MarshallSyscall(point))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_path_convert_conic_to_quads bindlib.PreloadProc

func SkPathConvertConicToQuads(p0 unsafe.Pointer, p1 unsafe.Pointer, p2 unsafe.Pointer, w float32, pts unsafe.Pointer, pow2 int32) int32 {
	__res := bindlib.CCall6(__imp_sk_path_convert_conic_to_quads.Addr(), bindlib.MarshallSyscall(p0), bindlib.MarshallSyscall(p1), bindlib.MarshallSyscall(p2), bindlib.MarshallSyscall(w), bindlib.MarshallSyscall(pts), bindlib.MarshallSyscall(pow2))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_path_add_poly bindlib.PreloadProc

func SkPathAddPoly(cpath unsafe.Pointer, points unsafe.Pointer, count int32, _close bool) {
	bindlib.CCall4(__imp_sk_path_add_poly.Addr(), bindlib.MarshallSyscall(cpath), bindlib.MarshallSyscall(points), bindlib.MarshallSyscall(count), bindlib.MarshallSyscall(_close))
}

var __imp_sk_path_get_segment_masks bindlib.PreloadProc

func SkPathGetSegmentMasks(cpath unsafe.Pointer) int32 {
	__res := bindlib.CCall1(__imp_sk_path_get_segment_masks.Addr(), bindlib.MarshallSyscall(cpath))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_path_is_oval bindlib.PreloadProc

func SkPathIsOval(cpath unsafe.Pointer, bounds unsafe.Pointer) bool {
	__res := bindlib.CCall2(__imp_sk_path_is_oval.Addr(), bindlib.MarshallSyscall(cpath), bindlib.MarshallSyscall(bounds))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_path_is_rrect bindlib.PreloadProc

func SkPathIsRrect(cpath unsafe.Pointer, bounds unsafe.Pointer) bool {
	__res := bindlib.CCall2(__imp_sk_path_is_rrect.Addr(), bindlib.MarshallSyscall(cpath), bindlib.MarshallSyscall(bounds))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_path_is_line bindlib.PreloadProc

func SkPathIsLine(cpath unsafe.Pointer, line unsafe.Pointer) bool {
	__res := bindlib.CCall2(__imp_sk_path_is_line.Addr(), bindlib.MarshallSyscall(cpath), bindlib.MarshallSyscall(line))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_path_is_rect bindlib.PreloadProc

func SkPathIsRect(cpath unsafe.Pointer, rect unsafe.Pointer, isClosed *bool, direction *SkPathDirectionT) bool {
	__res := bindlib.CCall4(__imp_sk_path_is_rect.Addr(), bindlib.MarshallSyscall(cpath), bindlib.MarshallSyscall(rect), bindlib.MarshallSyscall(isClosed), bindlib.MarshallSyscall(direction))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_path_is_convex bindlib.PreloadProc

func SkPathIsConvex(cpath unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_path_is_convex.Addr(), bindlib.MarshallSyscall(cpath))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_path_create_iter bindlib.PreloadProc

func SkPathCreateIter(cpath unsafe.Pointer, forceClose int32) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_path_create_iter.Addr(), bindlib.MarshallSyscall(cpath), bindlib.MarshallSyscall(forceClose))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_path_iter_next bindlib.PreloadProc

func SkPathIterNext(iterator unsafe.Pointer, points unsafe.Pointer) SkPathVerbT {
	__res := bindlib.CCall2(__imp_sk_path_iter_next.Addr(), bindlib.MarshallSyscall(iterator), bindlib.MarshallSyscall(points))
	return bindlib.UnmarshallSyscall[SkPathVerbT](__res)
}

var __imp_sk_path_iter_conic_weight bindlib.PreloadProc

func SkPathIterConicWeight(iterator unsafe.Pointer) float32 {
	__res := bindlib.CCall1(__imp_sk_path_iter_conic_weight.Addr(), bindlib.MarshallSyscall(iterator))
	return bindlib.UnmarshallSyscall[float32](__res)
}

var __imp_sk_path_iter_is_close_line bindlib.PreloadProc

func SkPathIterIsCloseLine(iterator unsafe.Pointer) int32 {
	__res := bindlib.CCall1(__imp_sk_path_iter_is_close_line.Addr(), bindlib.MarshallSyscall(iterator))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_path_iter_is_closed_contour bindlib.PreloadProc

func SkPathIterIsClosedContour(iterator unsafe.Pointer) int32 {
	__res := bindlib.CCall1(__imp_sk_path_iter_is_closed_contour.Addr(), bindlib.MarshallSyscall(iterator))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_path_iter_destroy bindlib.PreloadProc

func SkPathIterDestroy(iterator unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_path_iter_destroy.Addr(), bindlib.MarshallSyscall(iterator))
}

var __imp_sk_path_create_rawiter bindlib.PreloadProc

func SkPathCreateRawiter(cpath unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_path_create_rawiter.Addr(), bindlib.MarshallSyscall(cpath))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_path_rawiter_peek bindlib.PreloadProc

func SkPathRawiterPeek(iterator unsafe.Pointer) SkPathVerbT {
	__res := bindlib.CCall1(__imp_sk_path_rawiter_peek.Addr(), bindlib.MarshallSyscall(iterator))
	return bindlib.UnmarshallSyscall[SkPathVerbT](__res)
}

var __imp_sk_path_rawiter_next bindlib.PreloadProc

func SkPathRawiterNext(iterator unsafe.Pointer, points unsafe.Pointer) SkPathVerbT {
	__res := bindlib.CCall2(__imp_sk_path_rawiter_next.Addr(), bindlib.MarshallSyscall(iterator), bindlib.MarshallSyscall(points))
	return bindlib.UnmarshallSyscall[SkPathVerbT](__res)
}

var __imp_sk_path_rawiter_conic_weight bindlib.PreloadProc

func SkPathRawiterConicWeight(iterator unsafe.Pointer) float32 {
	__res := bindlib.CCall1(__imp_sk_path_rawiter_conic_weight.Addr(), bindlib.MarshallSyscall(iterator))
	return bindlib.UnmarshallSyscall[float32](__res)
}

var __imp_sk_path_rawiter_destroy bindlib.PreloadProc

func SkPathRawiterDestroy(iterator unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_path_rawiter_destroy.Addr(), bindlib.MarshallSyscall(iterator))
}

var __imp_sk_pathop_op bindlib.PreloadProc

func SkPathopOp(one unsafe.Pointer, two unsafe.Pointer, op SkPathopT, result unsafe.Pointer) bool {
	__res := bindlib.CCall4(__imp_sk_pathop_op.Addr(), bindlib.MarshallSyscall(one), bindlib.MarshallSyscall(two), bindlib.MarshallSyscall(op), bindlib.MarshallSyscall(result))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_pathop_simplify bindlib.PreloadProc

func SkPathopSimplify(path unsafe.Pointer, result unsafe.Pointer) bool {
	__res := bindlib.CCall2(__imp_sk_pathop_simplify.Addr(), bindlib.MarshallSyscall(path), bindlib.MarshallSyscall(result))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_pathop_tight_bounds bindlib.PreloadProc

func SkPathopTightBounds(path unsafe.Pointer, result unsafe.Pointer) bool {
	__res := bindlib.CCall2(__imp_sk_pathop_tight_bounds.Addr(), bindlib.MarshallSyscall(path), bindlib.MarshallSyscall(result))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_pathop_as_winding bindlib.PreloadProc

func SkPathopAsWinding(path unsafe.Pointer, result unsafe.Pointer) bool {
	__res := bindlib.CCall2(__imp_sk_pathop_as_winding.Addr(), bindlib.MarshallSyscall(path), bindlib.MarshallSyscall(result))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_opbuilder_new bindlib.PreloadProc

func SkOpbuilderNew() unsafe.Pointer {
	__res := bindlib.CCall0(__imp_sk_opbuilder_new.Addr())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_opbuilder_destroy bindlib.PreloadProc

func SkOpbuilderDestroy(builder unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_opbuilder_destroy.Addr(), bindlib.MarshallSyscall(builder))
}

var __imp_sk_opbuilder_add bindlib.PreloadProc

func SkOpbuilderAdd(builder unsafe.Pointer, path unsafe.Pointer, op SkPathopT) {
	bindlib.CCall3(__imp_sk_opbuilder_add.Addr(), bindlib.MarshallSyscall(builder), bindlib.MarshallSyscall(path), bindlib.MarshallSyscall(op))
}

var __imp_sk_opbuilder_resolve bindlib.PreloadProc

func SkOpbuilderResolve(builder unsafe.Pointer, result unsafe.Pointer) bool {
	__res := bindlib.CCall2(__imp_sk_opbuilder_resolve.Addr(), bindlib.MarshallSyscall(builder), bindlib.MarshallSyscall(result))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_pathmeasure_new bindlib.PreloadProc

func SkPathmeasureNew() unsafe.Pointer {
	__res := bindlib.CCall0(__imp_sk_pathmeasure_new.Addr())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_pathmeasure_new_with_path bindlib.PreloadProc

func SkPathmeasureNewWithPath(path unsafe.Pointer, forceClosed bool, resScale float32) unsafe.Pointer {
	__res := bindlib.CCall3(__imp_sk_pathmeasure_new_with_path.Addr(), bindlib.MarshallSyscall(path), bindlib.MarshallSyscall(forceClosed), bindlib.MarshallSyscall(resScale))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_pathmeasure_destroy bindlib.PreloadProc

func SkPathmeasureDestroy(pathMeasure unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_pathmeasure_destroy.Addr(), bindlib.MarshallSyscall(pathMeasure))
}

var __imp_sk_pathmeasure_set_path bindlib.PreloadProc

func SkPathmeasureSetPath(pathMeasure unsafe.Pointer, path unsafe.Pointer, forceClosed bool) {
	bindlib.CCall3(__imp_sk_pathmeasure_set_path.Addr(), bindlib.MarshallSyscall(pathMeasure), bindlib.MarshallSyscall(path), bindlib.MarshallSyscall(forceClosed))
}

var __imp_sk_pathmeasure_get_length bindlib.PreloadProc

func SkPathmeasureGetLength(pathMeasure unsafe.Pointer) float32 {
	__res := bindlib.CCall1(__imp_sk_pathmeasure_get_length.Addr(), bindlib.MarshallSyscall(pathMeasure))
	return bindlib.UnmarshallSyscall[float32](__res)
}

var __imp_sk_pathmeasure_get_pos_tan bindlib.PreloadProc

func SkPathmeasureGetPosTan(pathMeasure unsafe.Pointer, distance float32, position unsafe.Pointer, tangent *SkVectorT) bool {
	__res := bindlib.CCall4(__imp_sk_pathmeasure_get_pos_tan.Addr(), bindlib.MarshallSyscall(pathMeasure), bindlib.MarshallSyscall(distance), bindlib.MarshallSyscall(position), bindlib.MarshallSyscall(tangent))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_pathmeasure_get_matrix bindlib.PreloadProc

func SkPathmeasureGetMatrix(pathMeasure unsafe.Pointer, distance float32, matrix unsafe.Pointer, flags SkPathmeasureMatrixflagsT) bool {
	__res := bindlib.CCall4(__imp_sk_pathmeasure_get_matrix.Addr(), bindlib.MarshallSyscall(pathMeasure), bindlib.MarshallSyscall(distance), bindlib.MarshallSyscall(matrix), bindlib.MarshallSyscall(flags))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_pathmeasure_get_segment bindlib.PreloadProc

func SkPathmeasureGetSegment(pathMeasure unsafe.Pointer, start float32, stop float32, dst unsafe.Pointer, startWithMoveTo bool) bool {
	__res := bindlib.CCall5(__imp_sk_pathmeasure_get_segment.Addr(), bindlib.MarshallSyscall(pathMeasure), bindlib.MarshallSyscall(start), bindlib.MarshallSyscall(stop), bindlib.MarshallSyscall(dst), bindlib.MarshallSyscall(startWithMoveTo))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_pathmeasure_is_closed bindlib.PreloadProc

func SkPathmeasureIsClosed(pathMeasure unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_pathmeasure_is_closed.Addr(), bindlib.MarshallSyscall(pathMeasure))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_pathmeasure_next_contour bindlib.PreloadProc

func SkPathmeasureNextContour(pathMeasure unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_pathmeasure_next_contour.Addr(), bindlib.MarshallSyscall(pathMeasure))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_path_effect_unref bindlib.PreloadProc

func SkPathEffectUnref(t unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_path_effect_unref.Addr(), bindlib.MarshallSyscall(t))
}

var __imp_sk_path_effect_create_compose bindlib.PreloadProc

func SkPathEffectCreateCompose(outer unsafe.Pointer, inner unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_path_effect_create_compose.Addr(), bindlib.MarshallSyscall(outer), bindlib.MarshallSyscall(inner))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_path_effect_create_sum bindlib.PreloadProc

func SkPathEffectCreateSum(first unsafe.Pointer, second unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_path_effect_create_sum.Addr(), bindlib.MarshallSyscall(first), bindlib.MarshallSyscall(second))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_path_effect_create_discrete bindlib.PreloadProc

func SkPathEffectCreateDiscrete(segLength float32, deviation float32, seedAssist int32) unsafe.Pointer {
	__res := bindlib.CCall3(__imp_sk_path_effect_create_discrete.Addr(), bindlib.MarshallSyscall(segLength), bindlib.MarshallSyscall(deviation), bindlib.MarshallSyscall(seedAssist))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_path_effect_create_corner bindlib.PreloadProc

func SkPathEffectCreateCorner(radius float32) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_path_effect_create_corner.Addr(), bindlib.MarshallSyscall(radius))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_path_effect_create_1d_path bindlib.PreloadProc

func SkPathEffectCreate1dPath(path unsafe.Pointer, advance float32, phase float32, style SkPathEffect1dStyleT) unsafe.Pointer {
	__res := bindlib.CCall4(__imp_sk_path_effect_create_1d_path.Addr(), bindlib.MarshallSyscall(path), bindlib.MarshallSyscall(advance), bindlib.MarshallSyscall(phase), bindlib.MarshallSyscall(style))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_path_effect_create_2d_line bindlib.PreloadProc

func SkPathEffectCreate2dLine(width float32, matrix unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_path_effect_create_2d_line.Addr(), bindlib.MarshallSyscall(width), bindlib.MarshallSyscall(matrix))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_path_effect_create_2d_path bindlib.PreloadProc

func SkPathEffectCreate2dPath(matrix unsafe.Pointer, path unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_path_effect_create_2d_path.Addr(), bindlib.MarshallSyscall(matrix), bindlib.MarshallSyscall(path))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_path_effect_create_dash bindlib.PreloadProc

func SkPathEffectCreateDash(intervals *float32, count int32, phase float32) unsafe.Pointer {
	__res := bindlib.CCall3(__imp_sk_path_effect_create_dash.Addr(), bindlib.MarshallSyscall(intervals), bindlib.MarshallSyscall(count), bindlib.MarshallSyscall(phase))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_path_effect_create_trim bindlib.PreloadProc

func SkPathEffectCreateTrim(start float32, stop float32, mode SkPathEffectTrimModeT) unsafe.Pointer {
	__res := bindlib.CCall3(__imp_sk_path_effect_create_trim.Addr(), bindlib.MarshallSyscall(start), bindlib.MarshallSyscall(stop), bindlib.MarshallSyscall(mode))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_picture_recorder_new bindlib.PreloadProc

func SkPictureRecorderNew() unsafe.Pointer {
	__res := bindlib.CCall0(__imp_sk_picture_recorder_new.Addr())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_picture_recorder_delete bindlib.PreloadProc

func SkPictureRecorderDelete( unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_picture_recorder_delete.Addr(), bindlib.MarshallSyscall())
}

var __imp_sk_picture_recorder_begin_recording bindlib.PreloadProc

func SkPictureRecorderBeginRecording( unsafe.Pointer,  unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_picture_recorder_begin_recording.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_picture_recorder_begin_recording_with_bbh_factory bindlib.PreloadProc

func SkPictureRecorderBeginRecordingWithBbhFactory( unsafe.Pointer,  unsafe.Pointer,  unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall3(__imp_sk_picture_recorder_begin_recording_with_bbh_factory.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_picture_recorder_end_recording bindlib.PreloadProc

func SkPictureRecorderEndRecording( unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_picture_recorder_end_recording.Addr(), bindlib.MarshallSyscall())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_picture_recorder_end_recording_as_drawable bindlib.PreloadProc

func SkPictureRecorderEndRecordingAsDrawable( unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_picture_recorder_end_recording_as_drawable.Addr(), bindlib.MarshallSyscall())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_picture_get_recording_canvas bindlib.PreloadProc

func SkPictureGetRecordingCanvas(crec unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_picture_get_recording_canvas.Addr(), bindlib.MarshallSyscall(crec))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_picture_ref bindlib.PreloadProc

func SkPictureRef( unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_picture_ref.Addr(), bindlib.MarshallSyscall())
}

var __imp_sk_picture_unref bindlib.PreloadProc

func SkPictureUnref( unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_picture_unref.Addr(), bindlib.MarshallSyscall())
}

var __imp_sk_picture_get_unique_id bindlib.PreloadProc

func SkPictureGetUniqueId( unsafe.Pointer) int32 {
	__res := bindlib.CCall1(__imp_sk_picture_get_unique_id.Addr(), bindlib.MarshallSyscall())
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_picture_get_cull_rect bindlib.PreloadProc

func SkPictureGetCullRect( unsafe.Pointer,  unsafe.Pointer) {
	bindlib.CCall2(__imp_sk_picture_get_cull_rect.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall())
}

var __imp_sk_picture_make_shader bindlib.PreloadProc

func SkPictureMakeShader(src unsafe.Pointer, tmx SkShaderTilemodeT, tmy SkShaderTilemodeT, mode SkFilterModeT, localMatrix unsafe.Pointer, tile unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall6(__imp_sk_picture_make_shader.Addr(), bindlib.MarshallSyscall(src), bindlib.MarshallSyscall(tmx), bindlib.MarshallSyscall(tmy), bindlib.MarshallSyscall(mode), bindlib.MarshallSyscall(localMatrix), bindlib.MarshallSyscall(tile))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_picture_serialize_to_data bindlib.PreloadProc

func SkPictureSerializeToData(picture unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_picture_serialize_to_data.Addr(), bindlib.MarshallSyscall(picture))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_picture_serialize_to_stream bindlib.PreloadProc

func SkPictureSerializeToStream(picture unsafe.Pointer, stream unsafe.Pointer) {
	bindlib.CCall2(__imp_sk_picture_serialize_to_stream.Addr(), bindlib.MarshallSyscall(picture), bindlib.MarshallSyscall(stream))
}

var __imp_sk_picture_deserialize_from_stream bindlib.PreloadProc

func SkPictureDeserializeFromStream(stream unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_picture_deserialize_from_stream.Addr(), bindlib.MarshallSyscall(stream))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_picture_deserialize_from_data bindlib.PreloadProc

func SkPictureDeserializeFromData(data unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_picture_deserialize_from_data.Addr(), bindlib.MarshallSyscall(data))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_picture_deserialize_from_memory bindlib.PreloadProc

func SkPictureDeserializeFromMemory(buffer unsafe.Pointer, length uint) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_picture_deserialize_from_memory.Addr(), bindlib.MarshallSyscall(buffer), bindlib.MarshallSyscall(length))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_picture_playback bindlib.PreloadProc

func SkPicturePlayback(picture unsafe.Pointer, canvas unsafe.Pointer) {
	bindlib.CCall2(__imp_sk_picture_playback.Addr(), bindlib.MarshallSyscall(picture), bindlib.MarshallSyscall(canvas))
}

var __imp_sk_picture_approximate_op_count bindlib.PreloadProc

func SkPictureApproximateOpCount(picture unsafe.Pointer, nested bool) int32 {
	__res := bindlib.CCall2(__imp_sk_picture_approximate_op_count.Addr(), bindlib.MarshallSyscall(picture), bindlib.MarshallSyscall(nested))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_picture_approximate_bytes_used bindlib.PreloadProc

func SkPictureApproximateBytesUsed(picture unsafe.Pointer) uint {
	__res := bindlib.CCall1(__imp_sk_picture_approximate_bytes_used.Addr(), bindlib.MarshallSyscall(picture))
	return bindlib.UnmarshallSyscall[uint](__res)
}

var __imp_sk_rtree_factory_new bindlib.PreloadProc

func SkRtreeFactoryNew() unsafe.Pointer {
	__res := bindlib.CCall0(__imp_sk_rtree_factory_new.Addr())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_rtree_factory_delete bindlib.PreloadProc

func SkRtreeFactoryDelete( unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_rtree_factory_delete.Addr(), bindlib.MarshallSyscall())
}

var __imp_sk_pixmap_destructor bindlib.PreloadProc

func SkPixmapDestructor(cpixmap unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_pixmap_destructor.Addr(), bindlib.MarshallSyscall(cpixmap))
}

var __imp_sk_pixmap_new bindlib.PreloadProc

func SkPixmapNew() unsafe.Pointer {
	__res := bindlib.CCall0(__imp_sk_pixmap_new.Addr())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_pixmap_new_with_params bindlib.PreloadProc

func SkPixmapNewWithParams(cinfo *SkImageinfoT, addr unsafe.Pointer, rowBytes uint) unsafe.Pointer {
	__res := bindlib.CCall3(__imp_sk_pixmap_new_with_params.Addr(), bindlib.MarshallSyscall(cinfo), bindlib.MarshallSyscall(addr), bindlib.MarshallSyscall(rowBytes))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_pixmap_reset bindlib.PreloadProc

func SkPixmapReset(cpixmap unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_pixmap_reset.Addr(), bindlib.MarshallSyscall(cpixmap))
}

var __imp_sk_pixmap_reset_with_params bindlib.PreloadProc

func SkPixmapResetWithParams(cpixmap unsafe.Pointer, cinfo *SkImageinfoT, addr unsafe.Pointer, rowBytes uint) {
	bindlib.CCall4(__imp_sk_pixmap_reset_with_params.Addr(), bindlib.MarshallSyscall(cpixmap), bindlib.MarshallSyscall(cinfo), bindlib.MarshallSyscall(addr), bindlib.MarshallSyscall(rowBytes))
}

var __imp_sk_pixmap_set_colorspace bindlib.PreloadProc

func SkPixmapSetColorspace(cpixmap unsafe.Pointer, colorspace unsafe.Pointer) {
	bindlib.CCall2(__imp_sk_pixmap_set_colorspace.Addr(), bindlib.MarshallSyscall(cpixmap), bindlib.MarshallSyscall(colorspace))
}

var __imp_sk_pixmap_extract_subset bindlib.PreloadProc

func SkPixmapExtractSubset(cpixmap unsafe.Pointer, result unsafe.Pointer, subset *SkIrectT) bool {
	__res := bindlib.CCall3(__imp_sk_pixmap_extract_subset.Addr(), bindlib.MarshallSyscall(cpixmap), bindlib.MarshallSyscall(result), bindlib.MarshallSyscall(subset))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_pixmap_get_info bindlib.PreloadProc

func SkPixmapGetInfo(cpixmap unsafe.Pointer, cinfo *SkImageinfoT) {
	bindlib.CCall2(__imp_sk_pixmap_get_info.Addr(), bindlib.MarshallSyscall(cpixmap), bindlib.MarshallSyscall(cinfo))
}

var __imp_sk_pixmap_get_row_bytes bindlib.PreloadProc

func SkPixmapGetRowBytes(cpixmap unsafe.Pointer) uint {
	__res := bindlib.CCall1(__imp_sk_pixmap_get_row_bytes.Addr(), bindlib.MarshallSyscall(cpixmap))
	return bindlib.UnmarshallSyscall[uint](__res)
}

var __imp_sk_pixmap_get_colorspace bindlib.PreloadProc

func SkPixmapGetColorspace(cpixmap unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_pixmap_get_colorspace.Addr(), bindlib.MarshallSyscall(cpixmap))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_pixmap_compute_is_opaque bindlib.PreloadProc

func SkPixmapComputeIsOpaque(cpixmap unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_pixmap_compute_is_opaque.Addr(), bindlib.MarshallSyscall(cpixmap))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_pixmap_get_pixel_color bindlib.PreloadProc

func SkPixmapGetPixelColor(cpixmap unsafe.Pointer, x int32, y int32) SkColorT {
	__res := bindlib.CCall3(__imp_sk_pixmap_get_pixel_color.Addr(), bindlib.MarshallSyscall(cpixmap), bindlib.MarshallSyscall(x), bindlib.MarshallSyscall(y))
	return bindlib.UnmarshallSyscall[SkColorT](__res)
}

var __imp_sk_pixmap_get_pixel_color4f bindlib.PreloadProc

func SkPixmapGetPixelColor4f(cpixmap unsafe.Pointer, x int32, y int32, color unsafe.Pointer) {
	bindlib.CCall4(__imp_sk_pixmap_get_pixel_color4f.Addr(), bindlib.MarshallSyscall(cpixmap), bindlib.MarshallSyscall(x), bindlib.MarshallSyscall(y), bindlib.MarshallSyscall(color))
}

var __imp_sk_pixmap_get_pixel_alphaf bindlib.PreloadProc

func SkPixmapGetPixelAlphaf(cpixmap unsafe.Pointer, x int32, y int32) float32 {
	__res := bindlib.CCall3(__imp_sk_pixmap_get_pixel_alphaf.Addr(), bindlib.MarshallSyscall(cpixmap), bindlib.MarshallSyscall(x), bindlib.MarshallSyscall(y))
	return bindlib.UnmarshallSyscall[float32](__res)
}

var __imp_sk_pixmap_get_writable_addr bindlib.PreloadProc

func SkPixmapGetWritableAddr(cpixmap unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_pixmap_get_writable_addr.Addr(), bindlib.MarshallSyscall(cpixmap))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_pixmap_get_writeable_addr_with_xy bindlib.PreloadProc

func SkPixmapGetWriteableAddrWithXy(cpixmap unsafe.Pointer, x int32, y int32) unsafe.Pointer {
	__res := bindlib.CCall3(__imp_sk_pixmap_get_writeable_addr_with_xy.Addr(), bindlib.MarshallSyscall(cpixmap), bindlib.MarshallSyscall(x), bindlib.MarshallSyscall(y))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_pixmap_read_pixels bindlib.PreloadProc

func SkPixmapReadPixels(cpixmap unsafe.Pointer, dstInfo *SkImageinfoT, dstPixels unsafe.Pointer, dstRowBytes uint, srcX int32, srcY int32) bool {
	__res := bindlib.CCall6(__imp_sk_pixmap_read_pixels.Addr(), bindlib.MarshallSyscall(cpixmap), bindlib.MarshallSyscall(dstInfo), bindlib.MarshallSyscall(dstPixels), bindlib.MarshallSyscall(dstRowBytes), bindlib.MarshallSyscall(srcX), bindlib.MarshallSyscall(srcY))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_pixmap_scale_pixels bindlib.PreloadProc

func SkPixmapScalePixels(cpixmap unsafe.Pointer, dst unsafe.Pointer, sampling unsafe.Pointer) bool {
	__res := bindlib.CCall3(__imp_sk_pixmap_scale_pixels.Addr(), bindlib.MarshallSyscall(cpixmap), bindlib.MarshallSyscall(dst), bindlib.MarshallSyscall(sampling))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_pixmap_erase_color bindlib.PreloadProc

func SkPixmapEraseColor(cpixmap unsafe.Pointer, color SkColorT, subset *SkIrectT) bool {
	__res := bindlib.CCall3(__imp_sk_pixmap_erase_color.Addr(), bindlib.MarshallSyscall(cpixmap), bindlib.MarshallSyscall(color), bindlib.MarshallSyscall(subset))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_pixmap_erase_color4f bindlib.PreloadProc

func SkPixmapEraseColor4f(cpixmap unsafe.Pointer, color unsafe.Pointer, subset *SkIrectT) bool {
	__res := bindlib.CCall3(__imp_sk_pixmap_erase_color4f.Addr(), bindlib.MarshallSyscall(cpixmap), bindlib.MarshallSyscall(color), bindlib.MarshallSyscall(subset))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_webpencoder_encode bindlib.PreloadProc

func SkWebpencoderEncode(dst unsafe.Pointer, src unsafe.Pointer, options unsafe.Pointer) bool {
	__res := bindlib.CCall3(__imp_sk_webpencoder_encode.Addr(), bindlib.MarshallSyscall(dst), bindlib.MarshallSyscall(src), bindlib.MarshallSyscall(options))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_jpegencoder_encode bindlib.PreloadProc

func SkJpegencoderEncode(dst unsafe.Pointer, src unsafe.Pointer, options unsafe.Pointer) bool {
	__res := bindlib.CCall3(__imp_sk_jpegencoder_encode.Addr(), bindlib.MarshallSyscall(dst), bindlib.MarshallSyscall(src), bindlib.MarshallSyscall(options))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_pngencoder_encode bindlib.PreloadProc

func SkPngencoderEncode(dst unsafe.Pointer, src unsafe.Pointer, options unsafe.Pointer) bool {
	__res := bindlib.CCall3(__imp_sk_pngencoder_encode.Addr(), bindlib.MarshallSyscall(dst), bindlib.MarshallSyscall(src), bindlib.MarshallSyscall(options))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_swizzle_swap_rb bindlib.PreloadProc

func SkSwizzleSwapRb(dest *int32, src *int32, count int32) {
	bindlib.CCall3(__imp_sk_swizzle_swap_rb.Addr(), bindlib.MarshallSyscall(dest), bindlib.MarshallSyscall(src), bindlib.MarshallSyscall(count))
}

var __imp_sk_color_unpremultiply bindlib.PreloadProc

func SkColorUnpremultiply(pmcolor SkPmcolorT) SkColorT {
	__res := bindlib.CCall1(__imp_sk_color_unpremultiply.Addr(), bindlib.MarshallSyscall(pmcolor))
	return bindlib.UnmarshallSyscall[SkColorT](__res)
}

var __imp_sk_color_premultiply bindlib.PreloadProc

func SkColorPremultiply(color SkColorT) SkPmcolorT {
	__res := bindlib.CCall1(__imp_sk_color_premultiply.Addr(), bindlib.MarshallSyscall(color))
	return bindlib.UnmarshallSyscall[SkPmcolorT](__res)
}

var __imp_sk_color_unpremultiply_array bindlib.PreloadProc

func SkColorUnpremultiplyArray(pmcolors *SkPmcolorT, size int32, colors *SkColorT) {
	bindlib.CCall3(__imp_sk_color_unpremultiply_array.Addr(), bindlib.MarshallSyscall(pmcolors), bindlib.MarshallSyscall(size), bindlib.MarshallSyscall(colors))
}

var __imp_sk_color_premultiply_array bindlib.PreloadProc

func SkColorPremultiplyArray(colors *SkColorT, size int32, pmcolors *SkPmcolorT) {
	bindlib.CCall3(__imp_sk_color_premultiply_array.Addr(), bindlib.MarshallSyscall(colors), bindlib.MarshallSyscall(size), bindlib.MarshallSyscall(pmcolors))
}

var __imp_sk_color_get_bit_shift bindlib.PreloadProc

func SkColorGetBitShift(a *int32, r *int32, g *int32, b *int32) {
	bindlib.CCall4(__imp_sk_color_get_bit_shift.Addr(), bindlib.MarshallSyscall(a), bindlib.MarshallSyscall(r), bindlib.MarshallSyscall(g), bindlib.MarshallSyscall(b))
}

var __imp_sk_region_new bindlib.PreloadProc

func SkRegionNew() unsafe.Pointer {
	__res := bindlib.CCall0(__imp_sk_region_new.Addr())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_region_delete bindlib.PreloadProc

func SkRegionDelete(r unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_region_delete.Addr(), bindlib.MarshallSyscall(r))
}

var __imp_sk_region_is_empty bindlib.PreloadProc

func SkRegionIsEmpty(r unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_region_is_empty.Addr(), bindlib.MarshallSyscall(r))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_region_is_rect bindlib.PreloadProc

func SkRegionIsRect(r unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_region_is_rect.Addr(), bindlib.MarshallSyscall(r))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_region_is_complex bindlib.PreloadProc

func SkRegionIsComplex(r unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_region_is_complex.Addr(), bindlib.MarshallSyscall(r))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_region_get_bounds bindlib.PreloadProc

func SkRegionGetBounds(r unsafe.Pointer, rect *SkIrectT) {
	bindlib.CCall2(__imp_sk_region_get_bounds.Addr(), bindlib.MarshallSyscall(r), bindlib.MarshallSyscall(rect))
}

var __imp_sk_region_get_boundary_path bindlib.PreloadProc

func SkRegionGetBoundaryPath(r unsafe.Pointer, path unsafe.Pointer) bool {
	__res := bindlib.CCall2(__imp_sk_region_get_boundary_path.Addr(), bindlib.MarshallSyscall(r), bindlib.MarshallSyscall(path))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_region_set_empty bindlib.PreloadProc

func SkRegionSetEmpty(r unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_region_set_empty.Addr(), bindlib.MarshallSyscall(r))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_region_set_rect bindlib.PreloadProc

func SkRegionSetRect(r unsafe.Pointer, rect *SkIrectT) bool {
	__res := bindlib.CCall2(__imp_sk_region_set_rect.Addr(), bindlib.MarshallSyscall(r), bindlib.MarshallSyscall(rect))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_region_set_rects bindlib.PreloadProc

func SkRegionSetRects(r unsafe.Pointer, rects *SkIrectT, count int32) bool {
	__res := bindlib.CCall3(__imp_sk_region_set_rects.Addr(), bindlib.MarshallSyscall(r), bindlib.MarshallSyscall(rects), bindlib.MarshallSyscall(count))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_region_set_region bindlib.PreloadProc

func SkRegionSetRegion(r unsafe.Pointer, region unsafe.Pointer) bool {
	__res := bindlib.CCall2(__imp_sk_region_set_region.Addr(), bindlib.MarshallSyscall(r), bindlib.MarshallSyscall(region))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_region_set_path bindlib.PreloadProc

func SkRegionSetPath(r unsafe.Pointer, t unsafe.Pointer, clip unsafe.Pointer) bool {
	__res := bindlib.CCall3(__imp_sk_region_set_path.Addr(), bindlib.MarshallSyscall(r), bindlib.MarshallSyscall(t), bindlib.MarshallSyscall(clip))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_region_intersects_rect bindlib.PreloadProc

func SkRegionIntersectsRect(r unsafe.Pointer, rect *SkIrectT) bool {
	__res := bindlib.CCall2(__imp_sk_region_intersects_rect.Addr(), bindlib.MarshallSyscall(r), bindlib.MarshallSyscall(rect))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_region_intersects bindlib.PreloadProc

func SkRegionIntersects(r unsafe.Pointer, src unsafe.Pointer) bool {
	__res := bindlib.CCall2(__imp_sk_region_intersects.Addr(), bindlib.MarshallSyscall(r), bindlib.MarshallSyscall(src))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_region_contains_point bindlib.PreloadProc

func SkRegionContainsPoint(r unsafe.Pointer, x int32, y int32) bool {
	__res := bindlib.CCall3(__imp_sk_region_contains_point.Addr(), bindlib.MarshallSyscall(r), bindlib.MarshallSyscall(x), bindlib.MarshallSyscall(y))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_region_contains_rect bindlib.PreloadProc

func SkRegionContainsRect(r unsafe.Pointer, rect *SkIrectT) bool {
	__res := bindlib.CCall2(__imp_sk_region_contains_rect.Addr(), bindlib.MarshallSyscall(r), bindlib.MarshallSyscall(rect))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_region_contains bindlib.PreloadProc

func SkRegionContains(r unsafe.Pointer, region unsafe.Pointer) bool {
	__res := bindlib.CCall2(__imp_sk_region_contains.Addr(), bindlib.MarshallSyscall(r), bindlib.MarshallSyscall(region))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_region_quick_contains bindlib.PreloadProc

func SkRegionQuickContains(r unsafe.Pointer, rect *SkIrectT) bool {
	__res := bindlib.CCall2(__imp_sk_region_quick_contains.Addr(), bindlib.MarshallSyscall(r), bindlib.MarshallSyscall(rect))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_region_quick_reject_rect bindlib.PreloadProc

func SkRegionQuickRejectRect(r unsafe.Pointer, rect *SkIrectT) bool {
	__res := bindlib.CCall2(__imp_sk_region_quick_reject_rect.Addr(), bindlib.MarshallSyscall(r), bindlib.MarshallSyscall(rect))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_region_quick_reject bindlib.PreloadProc

func SkRegionQuickReject(r unsafe.Pointer, region unsafe.Pointer) bool {
	__res := bindlib.CCall2(__imp_sk_region_quick_reject.Addr(), bindlib.MarshallSyscall(r), bindlib.MarshallSyscall(region))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_region_translate bindlib.PreloadProc

func SkRegionTranslate(r unsafe.Pointer, x int32, y int32) {
	bindlib.CCall3(__imp_sk_region_translate.Addr(), bindlib.MarshallSyscall(r), bindlib.MarshallSyscall(x), bindlib.MarshallSyscall(y))
}

var __imp_sk_region_op_rect bindlib.PreloadProc

func SkRegionOpRect(r unsafe.Pointer, rect *SkIrectT, op SkRegionOpT) bool {
	__res := bindlib.CCall3(__imp_sk_region_op_rect.Addr(), bindlib.MarshallSyscall(r), bindlib.MarshallSyscall(rect), bindlib.MarshallSyscall(op))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_region_op bindlib.PreloadProc

func SkRegionOp(r unsafe.Pointer, region unsafe.Pointer, op SkRegionOpT) bool {
	__res := bindlib.CCall3(__imp_sk_region_op.Addr(), bindlib.MarshallSyscall(r), bindlib.MarshallSyscall(region), bindlib.MarshallSyscall(op))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_region_iterator_new bindlib.PreloadProc

func SkRegionIteratorNew(region unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_region_iterator_new.Addr(), bindlib.MarshallSyscall(region))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_region_iterator_delete bindlib.PreloadProc

func SkRegionIteratorDelete(iter unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_region_iterator_delete.Addr(), bindlib.MarshallSyscall(iter))
}

var __imp_sk_region_iterator_rewind bindlib.PreloadProc

func SkRegionIteratorRewind(iter unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_region_iterator_rewind.Addr(), bindlib.MarshallSyscall(iter))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_region_iterator_done bindlib.PreloadProc

func SkRegionIteratorDone(iter unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_region_iterator_done.Addr(), bindlib.MarshallSyscall(iter))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_region_iterator_next bindlib.PreloadProc

func SkRegionIteratorNext(iter unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_region_iterator_next.Addr(), bindlib.MarshallSyscall(iter))
}

var __imp_sk_region_iterator_rect bindlib.PreloadProc

func SkRegionIteratorRect(iter unsafe.Pointer, rect *SkIrectT) {
	bindlib.CCall2(__imp_sk_region_iterator_rect.Addr(), bindlib.MarshallSyscall(iter), bindlib.MarshallSyscall(rect))
}

var __imp_sk_region_cliperator_new bindlib.PreloadProc

func SkRegionCliperatorNew(region unsafe.Pointer, clip *SkIrectT) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_region_cliperator_new.Addr(), bindlib.MarshallSyscall(region), bindlib.MarshallSyscall(clip))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_region_cliperator_delete bindlib.PreloadProc

func SkRegionCliperatorDelete(iter unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_region_cliperator_delete.Addr(), bindlib.MarshallSyscall(iter))
}

var __imp_sk_region_cliperator_done bindlib.PreloadProc

func SkRegionCliperatorDone(iter unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_region_cliperator_done.Addr(), bindlib.MarshallSyscall(iter))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_region_cliperator_next bindlib.PreloadProc

func SkRegionCliperatorNext(iter unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_region_cliperator_next.Addr(), bindlib.MarshallSyscall(iter))
}

var __imp_sk_region_cliperator_rect bindlib.PreloadProc

func SkRegionCliperatorRect(iter unsafe.Pointer, rect *SkIrectT) {
	bindlib.CCall2(__imp_sk_region_cliperator_rect.Addr(), bindlib.MarshallSyscall(iter), bindlib.MarshallSyscall(rect))
}

var __imp_sk_region_spanerator_new bindlib.PreloadProc

func SkRegionSpaneratorNew(region unsafe.Pointer, y int32, left int32, right int32) unsafe.Pointer {
	__res := bindlib.CCall4(__imp_sk_region_spanerator_new.Addr(), bindlib.MarshallSyscall(region), bindlib.MarshallSyscall(y), bindlib.MarshallSyscall(left), bindlib.MarshallSyscall(right))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_region_spanerator_delete bindlib.PreloadProc

func SkRegionSpaneratorDelete(iter unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_region_spanerator_delete.Addr(), bindlib.MarshallSyscall(iter))
}

var __imp_sk_region_spanerator_next bindlib.PreloadProc

func SkRegionSpaneratorNext(iter unsafe.Pointer, left *int32, right *int32) bool {
	__res := bindlib.CCall3(__imp_sk_region_spanerator_next.Addr(), bindlib.MarshallSyscall(iter), bindlib.MarshallSyscall(left), bindlib.MarshallSyscall(right))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_rrect_new bindlib.PreloadProc

func SkRrectNew() unsafe.Pointer {
	__res := bindlib.CCall0(__imp_sk_rrect_new.Addr())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_rrect_new_copy bindlib.PreloadProc

func SkRrectNewCopy(rrect unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_rrect_new_copy.Addr(), bindlib.MarshallSyscall(rrect))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_rrect_delete bindlib.PreloadProc

func SkRrectDelete(rrect unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_rrect_delete.Addr(), bindlib.MarshallSyscall(rrect))
}

var __imp_sk_rrect_get_type bindlib.PreloadProc

func SkRrectGetType(rrect unsafe.Pointer) SkRrectTypeT {
	__res := bindlib.CCall1(__imp_sk_rrect_get_type.Addr(), bindlib.MarshallSyscall(rrect))
	return bindlib.UnmarshallSyscall[SkRrectTypeT](__res)
}

var __imp_sk_rrect_get_rect bindlib.PreloadProc

func SkRrectGetRect(rrect unsafe.Pointer, rect unsafe.Pointer) {
	bindlib.CCall2(__imp_sk_rrect_get_rect.Addr(), bindlib.MarshallSyscall(rrect), bindlib.MarshallSyscall(rect))
}

var __imp_sk_rrect_get_radii bindlib.PreloadProc

func SkRrectGetRadii(rrect unsafe.Pointer, corner SkRrectCornerT, radii *SkVectorT) {
	bindlib.CCall3(__imp_sk_rrect_get_radii.Addr(), bindlib.MarshallSyscall(rrect), bindlib.MarshallSyscall(corner), bindlib.MarshallSyscall(radii))
}

var __imp_sk_rrect_get_width bindlib.PreloadProc

func SkRrectGetWidth(rrect unsafe.Pointer) float32 {
	__res := bindlib.CCall1(__imp_sk_rrect_get_width.Addr(), bindlib.MarshallSyscall(rrect))
	return bindlib.UnmarshallSyscall[float32](__res)
}

var __imp_sk_rrect_get_height bindlib.PreloadProc

func SkRrectGetHeight(rrect unsafe.Pointer) float32 {
	__res := bindlib.CCall1(__imp_sk_rrect_get_height.Addr(), bindlib.MarshallSyscall(rrect))
	return bindlib.UnmarshallSyscall[float32](__res)
}

var __imp_sk_rrect_set_empty bindlib.PreloadProc

func SkRrectSetEmpty(rrect unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_rrect_set_empty.Addr(), bindlib.MarshallSyscall(rrect))
}

var __imp_sk_rrect_set_rect bindlib.PreloadProc

func SkRrectSetRect(rrect unsafe.Pointer, rect unsafe.Pointer) {
	bindlib.CCall2(__imp_sk_rrect_set_rect.Addr(), bindlib.MarshallSyscall(rrect), bindlib.MarshallSyscall(rect))
}

var __imp_sk_rrect_set_oval bindlib.PreloadProc

func SkRrectSetOval(rrect unsafe.Pointer, rect unsafe.Pointer) {
	bindlib.CCall2(__imp_sk_rrect_set_oval.Addr(), bindlib.MarshallSyscall(rrect), bindlib.MarshallSyscall(rect))
}

var __imp_sk_rrect_set_rect_xy bindlib.PreloadProc

func SkRrectSetRectXy(rrect unsafe.Pointer, rect unsafe.Pointer, xRad float32, yRad float32) {
	bindlib.CCall4(__imp_sk_rrect_set_rect_xy.Addr(), bindlib.MarshallSyscall(rrect), bindlib.MarshallSyscall(rect), bindlib.MarshallSyscall(xRad), bindlib.MarshallSyscall(yRad))
}

var __imp_sk_rrect_set_nine_patch bindlib.PreloadProc

func SkRrectSetNinePatch(rrect unsafe.Pointer, rect unsafe.Pointer, leftRad float32, topRad float32, rightRad float32, bottomRad float32) {
	bindlib.CCall6(__imp_sk_rrect_set_nine_patch.Addr(), bindlib.MarshallSyscall(rrect), bindlib.MarshallSyscall(rect), bindlib.MarshallSyscall(leftRad), bindlib.MarshallSyscall(topRad), bindlib.MarshallSyscall(rightRad), bindlib.MarshallSyscall(bottomRad))
}

var __imp_sk_rrect_set_rect_radii bindlib.PreloadProc

func SkRrectSetRectRadii(rrect unsafe.Pointer, rect unsafe.Pointer, radii *SkVectorT) {
	bindlib.CCall3(__imp_sk_rrect_set_rect_radii.Addr(), bindlib.MarshallSyscall(rrect), bindlib.MarshallSyscall(rect), bindlib.MarshallSyscall(radii))
}

var __imp_sk_rrect_inset bindlib.PreloadProc

func SkRrectInset(rrect unsafe.Pointer, dx float32, dy float32) {
	bindlib.CCall3(__imp_sk_rrect_inset.Addr(), bindlib.MarshallSyscall(rrect), bindlib.MarshallSyscall(dx), bindlib.MarshallSyscall(dy))
}

var __imp_sk_rrect_outset bindlib.PreloadProc

func SkRrectOutset(rrect unsafe.Pointer, dx float32, dy float32) {
	bindlib.CCall3(__imp_sk_rrect_outset.Addr(), bindlib.MarshallSyscall(rrect), bindlib.MarshallSyscall(dx), bindlib.MarshallSyscall(dy))
}

var __imp_sk_rrect_offset bindlib.PreloadProc

func SkRrectOffset(rrect unsafe.Pointer, dx float32, dy float32) {
	bindlib.CCall3(__imp_sk_rrect_offset.Addr(), bindlib.MarshallSyscall(rrect), bindlib.MarshallSyscall(dx), bindlib.MarshallSyscall(dy))
}

var __imp_sk_rrect_contains bindlib.PreloadProc

func SkRrectContains(rrect unsafe.Pointer, rect unsafe.Pointer) bool {
	__res := bindlib.CCall2(__imp_sk_rrect_contains.Addr(), bindlib.MarshallSyscall(rrect), bindlib.MarshallSyscall(rect))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_rrect_is_valid bindlib.PreloadProc

func SkRrectIsValid(rrect unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_rrect_is_valid.Addr(), bindlib.MarshallSyscall(rrect))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_rrect_transform bindlib.PreloadProc

func SkRrectTransform(rrect unsafe.Pointer, matrix unsafe.Pointer, dest unsafe.Pointer) bool {
	__res := bindlib.CCall3(__imp_sk_rrect_transform.Addr(), bindlib.MarshallSyscall(rrect), bindlib.MarshallSyscall(matrix), bindlib.MarshallSyscall(dest))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_runtimeeffect_make_for_color_filter bindlib.PreloadProc

func SkRuntimeeffectMakeForColorFilter(sksl unsafe.Pointer, _error unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_runtimeeffect_make_for_color_filter.Addr(), bindlib.MarshallSyscall(sksl), bindlib.MarshallSyscall(_error))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_runtimeeffect_make_for_shader bindlib.PreloadProc

func SkRuntimeeffectMakeForShader(sksl unsafe.Pointer, _error unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_runtimeeffect_make_for_shader.Addr(), bindlib.MarshallSyscall(sksl), bindlib.MarshallSyscall(_error))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_runtimeeffect_make_for_blender bindlib.PreloadProc

func SkRuntimeeffectMakeForBlender(sksl unsafe.Pointer, _error unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_runtimeeffect_make_for_blender.Addr(), bindlib.MarshallSyscall(sksl), bindlib.MarshallSyscall(_error))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_runtimeeffect_unref bindlib.PreloadProc

func SkRuntimeeffectUnref(effect unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_runtimeeffect_unref.Addr(), bindlib.MarshallSyscall(effect))
}

var __imp_sk_runtimeeffect_make_shader bindlib.PreloadProc

func SkRuntimeeffectMakeShader(effect unsafe.Pointer, uniforms unsafe.Pointer, children *unsafe.Pointer, childCount uint, localMatrix unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall5(__imp_sk_runtimeeffect_make_shader.Addr(), bindlib.MarshallSyscall(effect), bindlib.MarshallSyscall(uniforms), bindlib.MarshallSyscall(children), bindlib.MarshallSyscall(childCount), bindlib.MarshallSyscall(localMatrix))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_runtimeeffect_make_color_filter bindlib.PreloadProc

func SkRuntimeeffectMakeColorFilter(effect unsafe.Pointer, uniforms unsafe.Pointer, children *unsafe.Pointer, childCount uint) unsafe.Pointer {
	__res := bindlib.CCall4(__imp_sk_runtimeeffect_make_color_filter.Addr(), bindlib.MarshallSyscall(effect), bindlib.MarshallSyscall(uniforms), bindlib.MarshallSyscall(children), bindlib.MarshallSyscall(childCount))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_runtimeeffect_make_blender bindlib.PreloadProc

func SkRuntimeeffectMakeBlender(effect unsafe.Pointer, uniforms unsafe.Pointer, children *unsafe.Pointer, childCount uint) unsafe.Pointer {
	__res := bindlib.CCall4(__imp_sk_runtimeeffect_make_blender.Addr(), bindlib.MarshallSyscall(effect), bindlib.MarshallSyscall(uniforms), bindlib.MarshallSyscall(children), bindlib.MarshallSyscall(childCount))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_runtimeeffect_get_uniform_byte_size bindlib.PreloadProc

func SkRuntimeeffectGetUniformByteSize(effect unsafe.Pointer) uint {
	__res := bindlib.CCall1(__imp_sk_runtimeeffect_get_uniform_byte_size.Addr(), bindlib.MarshallSyscall(effect))
	return bindlib.UnmarshallSyscall[uint](__res)
}

var __imp_sk_runtimeeffect_get_uniforms_size bindlib.PreloadProc

func SkRuntimeeffectGetUniformsSize(effect unsafe.Pointer) uint {
	__res := bindlib.CCall1(__imp_sk_runtimeeffect_get_uniforms_size.Addr(), bindlib.MarshallSyscall(effect))
	return bindlib.UnmarshallSyscall[uint](__res)
}

var __imp_sk_runtimeeffect_get_uniform_name bindlib.PreloadProc

func SkRuntimeeffectGetUniformName(effect unsafe.Pointer, index int32, name unsafe.Pointer) {
	bindlib.CCall3(__imp_sk_runtimeeffect_get_uniform_name.Addr(), bindlib.MarshallSyscall(effect), bindlib.MarshallSyscall(index), bindlib.MarshallSyscall(name))
}

var __imp_sk_runtimeeffect_get_uniform_from_index bindlib.PreloadProc

func SkRuntimeeffectGetUniformFromIndex(effect unsafe.Pointer, index int32, cuniform unsafe.Pointer) {
	bindlib.CCall3(__imp_sk_runtimeeffect_get_uniform_from_index.Addr(), bindlib.MarshallSyscall(effect), bindlib.MarshallSyscall(index), bindlib.MarshallSyscall(cuniform))
}

var __imp_sk_runtimeeffect_get_uniform_from_name bindlib.PreloadProc

func SkRuntimeeffectGetUniformFromName(effect unsafe.Pointer, name *byte, _len uint, cuniform unsafe.Pointer) {
	bindlib.CCall4(__imp_sk_runtimeeffect_get_uniform_from_name.Addr(), bindlib.MarshallSyscall(effect), bindlib.MarshallSyscall(name), bindlib.MarshallSyscall(_len), bindlib.MarshallSyscall(cuniform))
}

var __imp_sk_runtimeeffect_get_children_size bindlib.PreloadProc

func SkRuntimeeffectGetChildrenSize(effect unsafe.Pointer) uint {
	__res := bindlib.CCall1(__imp_sk_runtimeeffect_get_children_size.Addr(), bindlib.MarshallSyscall(effect))
	return bindlib.UnmarshallSyscall[uint](__res)
}

var __imp_sk_runtimeeffect_get_child_name bindlib.PreloadProc

func SkRuntimeeffectGetChildName(effect unsafe.Pointer, index int32, name unsafe.Pointer) {
	bindlib.CCall3(__imp_sk_runtimeeffect_get_child_name.Addr(), bindlib.MarshallSyscall(effect), bindlib.MarshallSyscall(index), bindlib.MarshallSyscall(name))
}

var __imp_sk_runtimeeffect_get_child_from_index bindlib.PreloadProc

func SkRuntimeeffectGetChildFromIndex(effect unsafe.Pointer, index int32, cchild unsafe.Pointer) {
	bindlib.CCall3(__imp_sk_runtimeeffect_get_child_from_index.Addr(), bindlib.MarshallSyscall(effect), bindlib.MarshallSyscall(index), bindlib.MarshallSyscall(cchild))
}

var __imp_sk_runtimeeffect_get_child_from_name bindlib.PreloadProc

func SkRuntimeeffectGetChildFromName(effect unsafe.Pointer, name *byte, _len uint, cchild unsafe.Pointer) {
	bindlib.CCall4(__imp_sk_runtimeeffect_get_child_from_name.Addr(), bindlib.MarshallSyscall(effect), bindlib.MarshallSyscall(name), bindlib.MarshallSyscall(_len), bindlib.MarshallSyscall(cchild))
}

var __imp_sk_shader_ref bindlib.PreloadProc

func SkShaderRef(shader unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_shader_ref.Addr(), bindlib.MarshallSyscall(shader))
}

var __imp_sk_shader_unref bindlib.PreloadProc

func SkShaderUnref(shader unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_shader_unref.Addr(), bindlib.MarshallSyscall(shader))
}

var __imp_sk_shader_with_local_matrix bindlib.PreloadProc

func SkShaderWithLocalMatrix(shader unsafe.Pointer, localMatrix unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_shader_with_local_matrix.Addr(), bindlib.MarshallSyscall(shader), bindlib.MarshallSyscall(localMatrix))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_shader_with_color_filter bindlib.PreloadProc

func SkShaderWithColorFilter(shader unsafe.Pointer, filter unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_shader_with_color_filter.Addr(), bindlib.MarshallSyscall(shader), bindlib.MarshallSyscall(filter))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_shader_new_empty bindlib.PreloadProc

func SkShaderNewEmpty() unsafe.Pointer {
	__res := bindlib.CCall0(__imp_sk_shader_new_empty.Addr())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_shader_new_color bindlib.PreloadProc

func SkShaderNewColor(color SkColorT) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_shader_new_color.Addr(), bindlib.MarshallSyscall(color))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_shader_new_color4f bindlib.PreloadProc

func SkShaderNewColor4f(color unsafe.Pointer, colorspace unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_shader_new_color4f.Addr(), bindlib.MarshallSyscall(color), bindlib.MarshallSyscall(colorspace))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_shader_new_blend bindlib.PreloadProc

func SkShaderNewBlend(mode SkBlendmodeT, dst unsafe.Pointer, src unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall3(__imp_sk_shader_new_blend.Addr(), bindlib.MarshallSyscall(mode), bindlib.MarshallSyscall(dst), bindlib.MarshallSyscall(src))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_shader_new_blender bindlib.PreloadProc

func SkShaderNewBlender(blender unsafe.Pointer, dst unsafe.Pointer, src unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall3(__imp_sk_shader_new_blender.Addr(), bindlib.MarshallSyscall(blender), bindlib.MarshallSyscall(dst), bindlib.MarshallSyscall(src))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_shader_new_linear_gradient bindlib.PreloadProc

func SkShaderNewLinearGradient(points unsafe.Pointer, colors *SkColorT, colorPos *float32, colorCount int32, tileMode SkShaderTilemodeT, localMatrix unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall6(__imp_sk_shader_new_linear_gradient.Addr(), bindlib.MarshallSyscall(points), bindlib.MarshallSyscall(colors), bindlib.MarshallSyscall(colorPos), bindlib.MarshallSyscall(colorCount), bindlib.MarshallSyscall(tileMode), bindlib.MarshallSyscall(localMatrix))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_shader_new_linear_gradient_color4f bindlib.PreloadProc

func SkShaderNewLinearGradientColor4f(points unsafe.Pointer, colors unsafe.Pointer, colorspace unsafe.Pointer, colorPos *float32, colorCount int32, tileMode SkShaderTilemodeT, localMatrix unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall7(__imp_sk_shader_new_linear_gradient_color4f.Addr(), bindlib.MarshallSyscall(points), bindlib.MarshallSyscall(colors), bindlib.MarshallSyscall(colorspace), bindlib.MarshallSyscall(colorPos), bindlib.MarshallSyscall(colorCount), bindlib.MarshallSyscall(tileMode), bindlib.MarshallSyscall(localMatrix))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_shader_new_radial_gradient bindlib.PreloadProc

func SkShaderNewRadialGradient(center unsafe.Pointer, radius float32, colors *SkColorT, colorPos *float32, colorCount int32, tileMode SkShaderTilemodeT, localMatrix unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall7(__imp_sk_shader_new_radial_gradient.Addr(), bindlib.MarshallSyscall(center), bindlib.MarshallSyscall(radius), bindlib.MarshallSyscall(colors), bindlib.MarshallSyscall(colorPos), bindlib.MarshallSyscall(colorCount), bindlib.MarshallSyscall(tileMode), bindlib.MarshallSyscall(localMatrix))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_shader_new_radial_gradient_color4f bindlib.PreloadProc

func SkShaderNewRadialGradientColor4f(center unsafe.Pointer, radius float32, colors unsafe.Pointer, colorspace unsafe.Pointer, colorPos *float32, colorCount int32, tileMode SkShaderTilemodeT, localMatrix unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall8(__imp_sk_shader_new_radial_gradient_color4f.Addr(), bindlib.MarshallSyscall(center), bindlib.MarshallSyscall(radius), bindlib.MarshallSyscall(colors), bindlib.MarshallSyscall(colorspace), bindlib.MarshallSyscall(colorPos), bindlib.MarshallSyscall(colorCount), bindlib.MarshallSyscall(tileMode), bindlib.MarshallSyscall(localMatrix))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_shader_new_sweep_gradient bindlib.PreloadProc

func SkShaderNewSweepGradient(center unsafe.Pointer, colors *SkColorT, colorPos *float32, colorCount int32, tileMode SkShaderTilemodeT, startAngle float32, endAngle float32, localMatrix unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall8(__imp_sk_shader_new_sweep_gradient.Addr(), bindlib.MarshallSyscall(center), bindlib.MarshallSyscall(colors), bindlib.MarshallSyscall(colorPos), bindlib.MarshallSyscall(colorCount), bindlib.MarshallSyscall(tileMode), bindlib.MarshallSyscall(startAngle), bindlib.MarshallSyscall(endAngle), bindlib.MarshallSyscall(localMatrix))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_shader_new_sweep_gradient_color4f bindlib.PreloadProc

func SkShaderNewSweepGradientColor4f(center unsafe.Pointer, colors unsafe.Pointer, colorspace unsafe.Pointer, colorPos *float32, colorCount int32, tileMode SkShaderTilemodeT, startAngle float32, endAngle float32, localMatrix unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall9(__imp_sk_shader_new_sweep_gradient_color4f.Addr(), bindlib.MarshallSyscall(center), bindlib.MarshallSyscall(colors), bindlib.MarshallSyscall(colorspace), bindlib.MarshallSyscall(colorPos), bindlib.MarshallSyscall(colorCount), bindlib.MarshallSyscall(tileMode), bindlib.MarshallSyscall(startAngle), bindlib.MarshallSyscall(endAngle), bindlib.MarshallSyscall(localMatrix))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_shader_new_two_point_conical_gradient bindlib.PreloadProc

func SkShaderNewTwoPointConicalGradient(start unsafe.Pointer, startRadius float32, end unsafe.Pointer, endRadius float32, colors *SkColorT, colorPos *float32, colorCount int32, tileMode SkShaderTilemodeT, localMatrix unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall9(__imp_sk_shader_new_two_point_conical_gradient.Addr(), bindlib.MarshallSyscall(start), bindlib.MarshallSyscall(startRadius), bindlib.MarshallSyscall(end), bindlib.MarshallSyscall(endRadius), bindlib.MarshallSyscall(colors), bindlib.MarshallSyscall(colorPos), bindlib.MarshallSyscall(colorCount), bindlib.MarshallSyscall(tileMode), bindlib.MarshallSyscall(localMatrix))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_shader_new_two_point_conical_gradient_color4f bindlib.PreloadProc

func SkShaderNewTwoPointConicalGradientColor4f(start unsafe.Pointer, startRadius float32, end unsafe.Pointer, endRadius float32, colors unsafe.Pointer, colorspace unsafe.Pointer, colorPos *float32, colorCount int32, tileMode SkShaderTilemodeT, localMatrix unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall10(__imp_sk_shader_new_two_point_conical_gradient_color4f.Addr(), bindlib.MarshallSyscall(start), bindlib.MarshallSyscall(startRadius), bindlib.MarshallSyscall(end), bindlib.MarshallSyscall(endRadius), bindlib.MarshallSyscall(colors), bindlib.MarshallSyscall(colorspace), bindlib.MarshallSyscall(colorPos), bindlib.MarshallSyscall(colorCount), bindlib.MarshallSyscall(tileMode), bindlib.MarshallSyscall(localMatrix))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_shader_new_perlin_noise_fractal_noise bindlib.PreloadProc

func SkShaderNewPerlinNoiseFractalNoise(baseFrequencyX float32, baseFrequencyY float32, numOctaves int32, seed float32, tileSize *SkIsizeT) unsafe.Pointer {
	__res := bindlib.CCall5(__imp_sk_shader_new_perlin_noise_fractal_noise.Addr(), bindlib.MarshallSyscall(baseFrequencyX), bindlib.MarshallSyscall(baseFrequencyY), bindlib.MarshallSyscall(numOctaves), bindlib.MarshallSyscall(seed), bindlib.MarshallSyscall(tileSize))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_shader_new_perlin_noise_turbulence bindlib.PreloadProc

func SkShaderNewPerlinNoiseTurbulence(baseFrequencyX float32, baseFrequencyY float32, numOctaves int32, seed float32, tileSize *SkIsizeT) unsafe.Pointer {
	__res := bindlib.CCall5(__imp_sk_shader_new_perlin_noise_turbulence.Addr(), bindlib.MarshallSyscall(baseFrequencyX), bindlib.MarshallSyscall(baseFrequencyY), bindlib.MarshallSyscall(numOctaves), bindlib.MarshallSyscall(seed), bindlib.MarshallSyscall(tileSize))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_stream_asset_destroy bindlib.PreloadProc

func SkStreamAssetDestroy(cstream unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_stream_asset_destroy.Addr(), bindlib.MarshallSyscall(cstream))
}

var __imp_sk_filestream_new bindlib.PreloadProc

// /////////////////////////////////////////////////////////////////////////////
func SkFilestreamNew(path *byte) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_filestream_new.Addr(), bindlib.MarshallSyscall(path))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_filestream_destroy bindlib.PreloadProc

func SkFilestreamDestroy(cstream unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_filestream_destroy.Addr(), bindlib.MarshallSyscall(cstream))
}

var __imp_sk_filestream_is_valid bindlib.PreloadProc

func SkFilestreamIsValid(cstream unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_filestream_is_valid.Addr(), bindlib.MarshallSyscall(cstream))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_memorystream_new bindlib.PreloadProc

// /////////////////////////////////////////////////////////////////////////////
func SkMemorystreamNew() unsafe.Pointer {
	__res := bindlib.CCall0(__imp_sk_memorystream_new.Addr())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_memorystream_new_with_length bindlib.PreloadProc

func SkMemorystreamNewWithLength(length uint) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_memorystream_new_with_length.Addr(), bindlib.MarshallSyscall(length))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_memorystream_new_with_data bindlib.PreloadProc

func SkMemorystreamNewWithData(data unsafe.Pointer, length uint, copyData bool) unsafe.Pointer {
	__res := bindlib.CCall3(__imp_sk_memorystream_new_with_data.Addr(), bindlib.MarshallSyscall(data), bindlib.MarshallSyscall(length), bindlib.MarshallSyscall(copyData))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_memorystream_new_with_skdata bindlib.PreloadProc

func SkMemorystreamNewWithSkdata(data unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_memorystream_new_with_skdata.Addr(), bindlib.MarshallSyscall(data))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_memorystream_set_memory bindlib.PreloadProc

func SkMemorystreamSetMemory(cmemorystream unsafe.Pointer, data unsafe.Pointer, length uint, copyData bool) {
	bindlib.CCall4(__imp_sk_memorystream_set_memory.Addr(), bindlib.MarshallSyscall(cmemorystream), bindlib.MarshallSyscall(data), bindlib.MarshallSyscall(length), bindlib.MarshallSyscall(copyData))
}

var __imp_sk_memorystream_destroy bindlib.PreloadProc

func SkMemorystreamDestroy(cstream unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_memorystream_destroy.Addr(), bindlib.MarshallSyscall(cstream))
}

var __imp_sk_stream_read bindlib.PreloadProc

// /////////////////////////////////////////////////////////////////////////////
func SkStreamRead(cstream unsafe.Pointer, buffer unsafe.Pointer, size uint) uint {
	__res := bindlib.CCall3(__imp_sk_stream_read.Addr(), bindlib.MarshallSyscall(cstream), bindlib.MarshallSyscall(buffer), bindlib.MarshallSyscall(size))
	return bindlib.UnmarshallSyscall[uint](__res)
}

var __imp_sk_stream_peek bindlib.PreloadProc

func SkStreamPeek(cstream unsafe.Pointer, buffer unsafe.Pointer, size uint) uint {
	__res := bindlib.CCall3(__imp_sk_stream_peek.Addr(), bindlib.MarshallSyscall(cstream), bindlib.MarshallSyscall(buffer), bindlib.MarshallSyscall(size))
	return bindlib.UnmarshallSyscall[uint](__res)
}

var __imp_sk_stream_skip bindlib.PreloadProc

func SkStreamSkip(cstream unsafe.Pointer, size uint) uint {
	__res := bindlib.CCall2(__imp_sk_stream_skip.Addr(), bindlib.MarshallSyscall(cstream), bindlib.MarshallSyscall(size))
	return bindlib.UnmarshallSyscall[uint](__res)
}

var __imp_sk_stream_is_at_end bindlib.PreloadProc

func SkStreamIsAtEnd(cstream unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_stream_is_at_end.Addr(), bindlib.MarshallSyscall(cstream))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_stream_read_s8 bindlib.PreloadProc

func SkStreamReadS8(cstream unsafe.Pointer, buffer *int32) bool {
	__res := bindlib.CCall2(__imp_sk_stream_read_s8.Addr(), bindlib.MarshallSyscall(cstream), bindlib.MarshallSyscall(buffer))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_stream_read_s16 bindlib.PreloadProc

func SkStreamReadS16(cstream unsafe.Pointer, buffer *int32) bool {
	__res := bindlib.CCall2(__imp_sk_stream_read_s16.Addr(), bindlib.MarshallSyscall(cstream), bindlib.MarshallSyscall(buffer))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_stream_read_s32 bindlib.PreloadProc

func SkStreamReadS32(cstream unsafe.Pointer, buffer *int32) bool {
	__res := bindlib.CCall2(__imp_sk_stream_read_s32.Addr(), bindlib.MarshallSyscall(cstream), bindlib.MarshallSyscall(buffer))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_stream_read_u8 bindlib.PreloadProc

func SkStreamReadU8(cstream unsafe.Pointer, buffer *int32) bool {
	__res := bindlib.CCall2(__imp_sk_stream_read_u8.Addr(), bindlib.MarshallSyscall(cstream), bindlib.MarshallSyscall(buffer))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_stream_read_u16 bindlib.PreloadProc

func SkStreamReadU16(cstream unsafe.Pointer, buffer *int32) bool {
	__res := bindlib.CCall2(__imp_sk_stream_read_u16.Addr(), bindlib.MarshallSyscall(cstream), bindlib.MarshallSyscall(buffer))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_stream_read_u32 bindlib.PreloadProc

func SkStreamReadU32(cstream unsafe.Pointer, buffer *int32) bool {
	__res := bindlib.CCall2(__imp_sk_stream_read_u32.Addr(), bindlib.MarshallSyscall(cstream), bindlib.MarshallSyscall(buffer))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_stream_read_bool bindlib.PreloadProc

func SkStreamReadBool(cstream unsafe.Pointer, buffer *bool) bool {
	__res := bindlib.CCall2(__imp_sk_stream_read_bool.Addr(), bindlib.MarshallSyscall(cstream), bindlib.MarshallSyscall(buffer))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_stream_rewind bindlib.PreloadProc

func SkStreamRewind(cstream unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_stream_rewind.Addr(), bindlib.MarshallSyscall(cstream))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_stream_has_position bindlib.PreloadProc

func SkStreamHasPosition(cstream unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_stream_has_position.Addr(), bindlib.MarshallSyscall(cstream))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_stream_get_position bindlib.PreloadProc

func SkStreamGetPosition(cstream unsafe.Pointer) uint {
	__res := bindlib.CCall1(__imp_sk_stream_get_position.Addr(), bindlib.MarshallSyscall(cstream))
	return bindlib.UnmarshallSyscall[uint](__res)
}

var __imp_sk_stream_seek bindlib.PreloadProc

func SkStreamSeek(cstream unsafe.Pointer, position uint) bool {
	__res := bindlib.CCall2(__imp_sk_stream_seek.Addr(), bindlib.MarshallSyscall(cstream), bindlib.MarshallSyscall(position))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_stream_move bindlib.PreloadProc

func SkStreamMove(cstream unsafe.Pointer, offset int64) bool {
	__res := bindlib.CCall2(__imp_sk_stream_move.Addr(), bindlib.MarshallSyscall(cstream), bindlib.MarshallSyscall(offset))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_stream_has_length bindlib.PreloadProc

func SkStreamHasLength(cstream unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_stream_has_length.Addr(), bindlib.MarshallSyscall(cstream))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_stream_get_length bindlib.PreloadProc

func SkStreamGetLength(cstream unsafe.Pointer) uint {
	__res := bindlib.CCall1(__imp_sk_stream_get_length.Addr(), bindlib.MarshallSyscall(cstream))
	return bindlib.UnmarshallSyscall[uint](__res)
}

var __imp_sk_stream_get_memory_base bindlib.PreloadProc

func SkStreamGetMemoryBase(cstream unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_stream_get_memory_base.Addr(), bindlib.MarshallSyscall(cstream))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_stream_fork bindlib.PreloadProc

func SkStreamFork(cstream unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_stream_fork.Addr(), bindlib.MarshallSyscall(cstream))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_stream_duplicate bindlib.PreloadProc

func SkStreamDuplicate(cstream unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_stream_duplicate.Addr(), bindlib.MarshallSyscall(cstream))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_stream_destroy bindlib.PreloadProc

func SkStreamDestroy(cstream unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_stream_destroy.Addr(), bindlib.MarshallSyscall(cstream))
}

var __imp_sk_filewstream_new bindlib.PreloadProc

// /////////////////////////////////////////////////////////////////////////////
func SkFilewstreamNew(path *byte) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_filewstream_new.Addr(), bindlib.MarshallSyscall(path))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_filewstream_destroy bindlib.PreloadProc

func SkFilewstreamDestroy(cstream unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_filewstream_destroy.Addr(), bindlib.MarshallSyscall(cstream))
}

var __imp_sk_filewstream_is_valid bindlib.PreloadProc

func SkFilewstreamIsValid(cstream unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_filewstream_is_valid.Addr(), bindlib.MarshallSyscall(cstream))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_dynamicmemorywstream_new bindlib.PreloadProc

func SkDynamicmemorywstreamNew() unsafe.Pointer {
	__res := bindlib.CCall0(__imp_sk_dynamicmemorywstream_new.Addr())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_dynamicmemorywstream_detach_as_stream bindlib.PreloadProc

func SkDynamicmemorywstreamDetachAsStream(cstream unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_dynamicmemorywstream_detach_as_stream.Addr(), bindlib.MarshallSyscall(cstream))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_dynamicmemorywstream_detach_as_data bindlib.PreloadProc

func SkDynamicmemorywstreamDetachAsData(cstream unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_dynamicmemorywstream_detach_as_data.Addr(), bindlib.MarshallSyscall(cstream))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_dynamicmemorywstream_copy_to bindlib.PreloadProc

func SkDynamicmemorywstreamCopyTo(cstream unsafe.Pointer, data unsafe.Pointer) {
	bindlib.CCall2(__imp_sk_dynamicmemorywstream_copy_to.Addr(), bindlib.MarshallSyscall(cstream), bindlib.MarshallSyscall(data))
}

var __imp_sk_dynamicmemorywstream_write_to_stream bindlib.PreloadProc

func SkDynamicmemorywstreamWriteToStream(cstream unsafe.Pointer, dst unsafe.Pointer) bool {
	__res := bindlib.CCall2(__imp_sk_dynamicmemorywstream_write_to_stream.Addr(), bindlib.MarshallSyscall(cstream), bindlib.MarshallSyscall(dst))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_dynamicmemorywstream_destroy bindlib.PreloadProc

func SkDynamicmemorywstreamDestroy(cstream unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_dynamicmemorywstream_destroy.Addr(), bindlib.MarshallSyscall(cstream))
}

var __imp_sk_wstream_write bindlib.PreloadProc

// /////////////////////////////////////////////////////////////////////////////
func SkWstreamWrite(cstream unsafe.Pointer, buffer unsafe.Pointer, size uint) bool {
	__res := bindlib.CCall3(__imp_sk_wstream_write.Addr(), bindlib.MarshallSyscall(cstream), bindlib.MarshallSyscall(buffer), bindlib.MarshallSyscall(size))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_wstream_newline bindlib.PreloadProc

func SkWstreamNewline(cstream unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_wstream_newline.Addr(), bindlib.MarshallSyscall(cstream))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_wstream_flush bindlib.PreloadProc

func SkWstreamFlush(cstream unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_wstream_flush.Addr(), bindlib.MarshallSyscall(cstream))
}

var __imp_sk_wstream_bytes_written bindlib.PreloadProc

func SkWstreamBytesWritten(cstream unsafe.Pointer) uint {
	__res := bindlib.CCall1(__imp_sk_wstream_bytes_written.Addr(), bindlib.MarshallSyscall(cstream))
	return bindlib.UnmarshallSyscall[uint](__res)
}

var __imp_sk_wstream_write_8 bindlib.PreloadProc

func SkWstreamWrite8(cstream unsafe.Pointer, value int32) bool {
	__res := bindlib.CCall2(__imp_sk_wstream_write_8.Addr(), bindlib.MarshallSyscall(cstream), bindlib.MarshallSyscall(value))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_wstream_write_16 bindlib.PreloadProc

func SkWstreamWrite16(cstream unsafe.Pointer, value int32) bool {
	__res := bindlib.CCall2(__imp_sk_wstream_write_16.Addr(), bindlib.MarshallSyscall(cstream), bindlib.MarshallSyscall(value))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_wstream_write_32 bindlib.PreloadProc

func SkWstreamWrite32(cstream unsafe.Pointer, value int32) bool {
	__res := bindlib.CCall2(__imp_sk_wstream_write_32.Addr(), bindlib.MarshallSyscall(cstream), bindlib.MarshallSyscall(value))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_wstream_write_text bindlib.PreloadProc

func SkWstreamWriteText(cstream unsafe.Pointer, value *byte) bool {
	__res := bindlib.CCall2(__imp_sk_wstream_write_text.Addr(), bindlib.MarshallSyscall(cstream), bindlib.MarshallSyscall(value))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_wstream_write_dec_as_text bindlib.PreloadProc

func SkWstreamWriteDecAsText(cstream unsafe.Pointer, value int32) bool {
	__res := bindlib.CCall2(__imp_sk_wstream_write_dec_as_text.Addr(), bindlib.MarshallSyscall(cstream), bindlib.MarshallSyscall(value))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_wstream_write_bigdec_as_text bindlib.PreloadProc

func SkWstreamWriteBigdecAsText(cstream unsafe.Pointer, value int32, minDigits int32) bool {
	__res := bindlib.CCall3(__imp_sk_wstream_write_bigdec_as_text.Addr(), bindlib.MarshallSyscall(cstream), bindlib.MarshallSyscall(value), bindlib.MarshallSyscall(minDigits))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_wstream_write_hex_as_text bindlib.PreloadProc

func SkWstreamWriteHexAsText(cstream unsafe.Pointer, value int32, minDigits int32) bool {
	__res := bindlib.CCall3(__imp_sk_wstream_write_hex_as_text.Addr(), bindlib.MarshallSyscall(cstream), bindlib.MarshallSyscall(value), bindlib.MarshallSyscall(minDigits))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_wstream_write_scalar_as_text bindlib.PreloadProc

func SkWstreamWriteScalarAsText(cstream unsafe.Pointer, value float32) bool {
	__res := bindlib.CCall2(__imp_sk_wstream_write_scalar_as_text.Addr(), bindlib.MarshallSyscall(cstream), bindlib.MarshallSyscall(value))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_wstream_write_bool bindlib.PreloadProc

func SkWstreamWriteBool(cstream unsafe.Pointer, value bool) bool {
	__res := bindlib.CCall2(__imp_sk_wstream_write_bool.Addr(), bindlib.MarshallSyscall(cstream), bindlib.MarshallSyscall(value))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_wstream_write_scalar bindlib.PreloadProc

func SkWstreamWriteScalar(cstream unsafe.Pointer, value float32) bool {
	__res := bindlib.CCall2(__imp_sk_wstream_write_scalar.Addr(), bindlib.MarshallSyscall(cstream), bindlib.MarshallSyscall(value))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_wstream_write_packed_uint bindlib.PreloadProc

func SkWstreamWritePackedUint(cstream unsafe.Pointer, value uint) bool {
	__res := bindlib.CCall2(__imp_sk_wstream_write_packed_uint.Addr(), bindlib.MarshallSyscall(cstream), bindlib.MarshallSyscall(value))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_wstream_write_stream bindlib.PreloadProc

func SkWstreamWriteStream(cstream unsafe.Pointer, input unsafe.Pointer, length uint) bool {
	__res := bindlib.CCall3(__imp_sk_wstream_write_stream.Addr(), bindlib.MarshallSyscall(cstream), bindlib.MarshallSyscall(input), bindlib.MarshallSyscall(length))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_wstream_get_size_of_packed_uint bindlib.PreloadProc

func SkWstreamGetSizeOfPackedUint(value uint) int32 {
	__res := bindlib.CCall1(__imp_sk_wstream_get_size_of_packed_uint.Addr(), bindlib.MarshallSyscall(value))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_string_new_empty bindlib.PreloadProc

func SkStringNewEmpty() unsafe.Pointer {
	__res := bindlib.CCall0(__imp_sk_string_new_empty.Addr())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_string_new_with_copy bindlib.PreloadProc

func SkStringNewWithCopy(src *byte, length uint) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_string_new_with_copy.Addr(), bindlib.MarshallSyscall(src), bindlib.MarshallSyscall(length))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_string_destructor bindlib.PreloadProc

func SkStringDestructor( unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_string_destructor.Addr(), bindlib.MarshallSyscall())
}

var __imp_sk_string_get_size bindlib.PreloadProc

func SkStringGetSize( unsafe.Pointer) uint {
	__res := bindlib.CCall1(__imp_sk_string_get_size.Addr(), bindlib.MarshallSyscall())
	return bindlib.UnmarshallSyscall[uint](__res)
}

var __imp_sk_string_get_c_str bindlib.PreloadProc

func SkStringGetCStr( unsafe.Pointer) *byte {
	__res := bindlib.CCall1(__imp_sk_string_get_c_str.Addr(), bindlib.MarshallSyscall())
	return bindlib.UnmarshallSyscall[*byte](__res)
}

var __imp_sk_surface_new_null bindlib.PreloadProc

func SkSurfaceNewNull(width int32, height int32) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_surface_new_null.Addr(), bindlib.MarshallSyscall(width), bindlib.MarshallSyscall(height))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_surface_new_raster bindlib.PreloadProc

func SkSurfaceNewRaster( *SkImageinfoT, rowBytes uint,  unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall3(__imp_sk_surface_new_raster.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(rowBytes), bindlib.MarshallSyscall())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_surface_new_raster_direct bindlib.PreloadProc

func SkSurfaceNewRasterDirect( *SkImageinfoT, pixels unsafe.Pointer, rowBytes uint, releaseProc SkSurfaceRasterReleaseProc, context unsafe.Pointer, props unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall6(__imp_sk_surface_new_raster_direct.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(pixels), bindlib.MarshallSyscall(rowBytes), bindlib.MarshallSyscall(releaseProc), bindlib.MarshallSyscall(context), bindlib.MarshallSyscall(props))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_surface_new_backend_texture bindlib.PreloadProc

func SkSurfaceNewBackendTexture(context unsafe.Pointer, texture unsafe.Pointer, origin GrSurfaceoriginT, samples int32, colorType SkColortypeT, colorspace unsafe.Pointer, props unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall7(__imp_sk_surface_new_backend_texture.Addr(), bindlib.MarshallSyscall(context), bindlib.MarshallSyscall(texture), bindlib.MarshallSyscall(origin), bindlib.MarshallSyscall(samples), bindlib.MarshallSyscall(colorType), bindlib.MarshallSyscall(colorspace), bindlib.MarshallSyscall(props))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_surface_new_backend_render_target bindlib.PreloadProc

func SkSurfaceNewBackendRenderTarget(context unsafe.Pointer, target unsafe.Pointer, origin GrSurfaceoriginT, colorType SkColortypeT, colorspace unsafe.Pointer, props unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall6(__imp_sk_surface_new_backend_render_target.Addr(), bindlib.MarshallSyscall(context), bindlib.MarshallSyscall(target), bindlib.MarshallSyscall(origin), bindlib.MarshallSyscall(colorType), bindlib.MarshallSyscall(colorspace), bindlib.MarshallSyscall(props))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_surface_new_render_target bindlib.PreloadProc

func SkSurfaceNewRenderTarget(context unsafe.Pointer, budgeted bool, cinfo *SkImageinfoT, sampleCount int32, origin GrSurfaceoriginT, props unsafe.Pointer, shouldCreateWithMips bool) unsafe.Pointer {
	__res := bindlib.CCall7(__imp_sk_surface_new_render_target.Addr(), bindlib.MarshallSyscall(context), bindlib.MarshallSyscall(budgeted), bindlib.MarshallSyscall(cinfo), bindlib.MarshallSyscall(sampleCount), bindlib.MarshallSyscall(origin), bindlib.MarshallSyscall(props), bindlib.MarshallSyscall(shouldCreateWithMips))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_surface_new_metal_layer bindlib.PreloadProc

func SkSurfaceNewMetalLayer(context unsafe.Pointer, layer unsafe.Pointer, origin GrSurfaceoriginT, sampleCount int32, colorType SkColortypeT, colorspace unsafe.Pointer, props unsafe.Pointer, drawable *unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall8(__imp_sk_surface_new_metal_layer.Addr(), bindlib.MarshallSyscall(context), bindlib.MarshallSyscall(layer), bindlib.MarshallSyscall(origin), bindlib.MarshallSyscall(sampleCount), bindlib.MarshallSyscall(colorType), bindlib.MarshallSyscall(colorspace), bindlib.MarshallSyscall(props), bindlib.MarshallSyscall(drawable))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_surface_new_metal_view bindlib.PreloadProc

func SkSurfaceNewMetalView(context unsafe.Pointer, mtkView unsafe.Pointer, origin GrSurfaceoriginT, sampleCount int32, colorType SkColortypeT, colorspace unsafe.Pointer, props unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall7(__imp_sk_surface_new_metal_view.Addr(), bindlib.MarshallSyscall(context), bindlib.MarshallSyscall(mtkView), bindlib.MarshallSyscall(origin), bindlib.MarshallSyscall(sampleCount), bindlib.MarshallSyscall(colorType), bindlib.MarshallSyscall(colorspace), bindlib.MarshallSyscall(props))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_surface_unref bindlib.PreloadProc

func SkSurfaceUnref( unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_surface_unref.Addr(), bindlib.MarshallSyscall())
}

var __imp_sk_surface_get_canvas bindlib.PreloadProc

func SkSurfaceGetCanvas( unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_surface_get_canvas.Addr(), bindlib.MarshallSyscall())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_surface_new_image_snapshot bindlib.PreloadProc

func SkSurfaceNewImageSnapshot( unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_surface_new_image_snapshot.Addr(), bindlib.MarshallSyscall())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_surface_new_image_snapshot_with_crop bindlib.PreloadProc

func SkSurfaceNewImageSnapshotWithCrop(surface unsafe.Pointer, bounds *SkIrectT) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_surface_new_image_snapshot_with_crop.Addr(), bindlib.MarshallSyscall(surface), bindlib.MarshallSyscall(bounds))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_surface_draw bindlib.PreloadProc

func SkSurfaceDraw(surface unsafe.Pointer, canvas unsafe.Pointer, x float32, y float32, paint unsafe.Pointer) {
	bindlib.CCall5(__imp_sk_surface_draw.Addr(), bindlib.MarshallSyscall(surface), bindlib.MarshallSyscall(canvas), bindlib.MarshallSyscall(x), bindlib.MarshallSyscall(y), bindlib.MarshallSyscall(paint))
}

var __imp_sk_surface_peek_pixels bindlib.PreloadProc

func SkSurfacePeekPixels(surface unsafe.Pointer, pixmap unsafe.Pointer) bool {
	__res := bindlib.CCall2(__imp_sk_surface_peek_pixels.Addr(), bindlib.MarshallSyscall(surface), bindlib.MarshallSyscall(pixmap))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_surface_read_pixels bindlib.PreloadProc

func SkSurfaceReadPixels(surface unsafe.Pointer, dstInfo *SkImageinfoT, dstPixels unsafe.Pointer, dstRowBytes uint, srcX int32, srcY int32) bool {
	__res := bindlib.CCall6(__imp_sk_surface_read_pixels.Addr(), bindlib.MarshallSyscall(surface), bindlib.MarshallSyscall(dstInfo), bindlib.MarshallSyscall(dstPixels), bindlib.MarshallSyscall(dstRowBytes), bindlib.MarshallSyscall(srcX), bindlib.MarshallSyscall(srcY))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_surface_get_props bindlib.PreloadProc

func SkSurfaceGetProps(surface unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_surface_get_props.Addr(), bindlib.MarshallSyscall(surface))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_surface_flush bindlib.PreloadProc

func SkSurfaceFlush(surface unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_surface_flush.Addr(), bindlib.MarshallSyscall(surface))
}

var __imp_sk_surface_flush_and_submit bindlib.PreloadProc

func SkSurfaceFlushAndSubmit(surface unsafe.Pointer, syncCpu bool) {
	bindlib.CCall2(__imp_sk_surface_flush_and_submit.Addr(), bindlib.MarshallSyscall(surface), bindlib.MarshallSyscall(syncCpu))
}

var __imp_sk_surface_get_recording_context bindlib.PreloadProc

func SkSurfaceGetRecordingContext(surface unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_surface_get_recording_context.Addr(), bindlib.MarshallSyscall(surface))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_surfaceprops_new bindlib.PreloadProc

func SkSurfacepropsNew(flags int32, geometry SkPixelgeometryT) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_surfaceprops_new.Addr(), bindlib.MarshallSyscall(flags), bindlib.MarshallSyscall(geometry))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_surfaceprops_delete bindlib.PreloadProc

func SkSurfacepropsDelete(props unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_surfaceprops_delete.Addr(), bindlib.MarshallSyscall(props))
}

var __imp_sk_surfaceprops_get_flags bindlib.PreloadProc

func SkSurfacepropsGetFlags(props unsafe.Pointer) int32 {
	__res := bindlib.CCall1(__imp_sk_surfaceprops_get_flags.Addr(), bindlib.MarshallSyscall(props))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_surfaceprops_get_pixel_geometry bindlib.PreloadProc

func SkSurfacepropsGetPixelGeometry(props unsafe.Pointer) SkPixelgeometryT {
	__res := bindlib.CCall1(__imp_sk_surfaceprops_get_pixel_geometry.Addr(), bindlib.MarshallSyscall(props))
	return bindlib.UnmarshallSyscall[SkPixelgeometryT](__res)
}

var __imp_sk_svgcanvas_create_with_stream bindlib.PreloadProc

func SkSvgcanvasCreateWithStream(bounds unsafe.Pointer, stream unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_svgcanvas_create_with_stream.Addr(), bindlib.MarshallSyscall(bounds), bindlib.MarshallSyscall(stream))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_textblob_ref bindlib.PreloadProc

func SkTextblobRef(blob unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_textblob_ref.Addr(), bindlib.MarshallSyscall(blob))
}

var __imp_sk_textblob_unref bindlib.PreloadProc

func SkTextblobUnref(blob unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_textblob_unref.Addr(), bindlib.MarshallSyscall(blob))
}

var __imp_sk_textblob_get_unique_id bindlib.PreloadProc

func SkTextblobGetUniqueId(blob unsafe.Pointer) int32 {
	__res := bindlib.CCall1(__imp_sk_textblob_get_unique_id.Addr(), bindlib.MarshallSyscall(blob))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_textblob_get_bounds bindlib.PreloadProc

func SkTextblobGetBounds(blob unsafe.Pointer, bounds unsafe.Pointer) {
	bindlib.CCall2(__imp_sk_textblob_get_bounds.Addr(), bindlib.MarshallSyscall(blob), bindlib.MarshallSyscall(bounds))
}

var __imp_sk_textblob_get_intercepts bindlib.PreloadProc

func SkTextblobGetIntercepts(blob unsafe.Pointer, bounds *float32, intervals *float32, paint unsafe.Pointer) int32 {
	__res := bindlib.CCall4(__imp_sk_textblob_get_intercepts.Addr(), bindlib.MarshallSyscall(blob), bindlib.MarshallSyscall(bounds), bindlib.MarshallSyscall(intervals), bindlib.MarshallSyscall(paint))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_textblob_builder_new bindlib.PreloadProc

func SkTextblobBuilderNew() unsafe.Pointer {
	__res := bindlib.CCall0(__imp_sk_textblob_builder_new.Addr())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_textblob_builder_delete bindlib.PreloadProc

func SkTextblobBuilderDelete(builder unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_textblob_builder_delete.Addr(), bindlib.MarshallSyscall(builder))
}

var __imp_sk_textblob_builder_make bindlib.PreloadProc

func SkTextblobBuilderMake(builder unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_textblob_builder_make.Addr(), bindlib.MarshallSyscall(builder))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_textblob_builder_alloc_run bindlib.PreloadProc

func SkTextblobBuilderAllocRun(builder unsafe.Pointer, font unsafe.Pointer, count int32, x float32, y float32, bounds unsafe.Pointer, runbuffer unsafe.Pointer) {
	bindlib.CCall7(__imp_sk_textblob_builder_alloc_run.Addr(), bindlib.MarshallSyscall(builder), bindlib.MarshallSyscall(font), bindlib.MarshallSyscall(count), bindlib.MarshallSyscall(x), bindlib.MarshallSyscall(y), bindlib.MarshallSyscall(bounds), bindlib.MarshallSyscall(runbuffer))
}

var __imp_sk_textblob_builder_alloc_run_pos_h bindlib.PreloadProc

func SkTextblobBuilderAllocRunPosH(builder unsafe.Pointer, font unsafe.Pointer, count int32, y float32, bounds unsafe.Pointer, runbuffer unsafe.Pointer) {
	bindlib.CCall6(__imp_sk_textblob_builder_alloc_run_pos_h.Addr(), bindlib.MarshallSyscall(builder), bindlib.MarshallSyscall(font), bindlib.MarshallSyscall(count), bindlib.MarshallSyscall(y), bindlib.MarshallSyscall(bounds), bindlib.MarshallSyscall(runbuffer))
}

var __imp_sk_textblob_builder_alloc_run_pos bindlib.PreloadProc

func SkTextblobBuilderAllocRunPos(builder unsafe.Pointer, font unsafe.Pointer, count int32, bounds unsafe.Pointer, runbuffer unsafe.Pointer) {
	bindlib.CCall5(__imp_sk_textblob_builder_alloc_run_pos.Addr(), bindlib.MarshallSyscall(builder), bindlib.MarshallSyscall(font), bindlib.MarshallSyscall(count), bindlib.MarshallSyscall(bounds), bindlib.MarshallSyscall(runbuffer))
}

var __imp_sk_textblob_builder_alloc_run_rsxform bindlib.PreloadProc

func SkTextblobBuilderAllocRunRsxform(builder unsafe.Pointer, font unsafe.Pointer, count int32, bounds unsafe.Pointer, runbuffer unsafe.Pointer) {
	bindlib.CCall5(__imp_sk_textblob_builder_alloc_run_rsxform.Addr(), bindlib.MarshallSyscall(builder), bindlib.MarshallSyscall(font), bindlib.MarshallSyscall(count), bindlib.MarshallSyscall(bounds), bindlib.MarshallSyscall(runbuffer))
}

var __imp_sk_textblob_builder_alloc_run_text bindlib.PreloadProc

func SkTextblobBuilderAllocRunText(builder unsafe.Pointer, font unsafe.Pointer, count int32, x float32, y float32, textByteCount int32, bounds unsafe.Pointer, runbuffer unsafe.Pointer) {
	bindlib.CCall8(__imp_sk_textblob_builder_alloc_run_text.Addr(), bindlib.MarshallSyscall(builder), bindlib.MarshallSyscall(font), bindlib.MarshallSyscall(count), bindlib.MarshallSyscall(x), bindlib.MarshallSyscall(y), bindlib.MarshallSyscall(textByteCount), bindlib.MarshallSyscall(bounds), bindlib.MarshallSyscall(runbuffer))
}

var __imp_sk_textblob_builder_alloc_run_text_pos_h bindlib.PreloadProc

func SkTextblobBuilderAllocRunTextPosH(builder unsafe.Pointer, font unsafe.Pointer, count int32, y float32, textByteCount int32, bounds unsafe.Pointer, runbuffer unsafe.Pointer) {
	bindlib.CCall7(__imp_sk_textblob_builder_alloc_run_text_pos_h.Addr(), bindlib.MarshallSyscall(builder), bindlib.MarshallSyscall(font), bindlib.MarshallSyscall(count), bindlib.MarshallSyscall(y), bindlib.MarshallSyscall(textByteCount), bindlib.MarshallSyscall(bounds), bindlib.MarshallSyscall(runbuffer))
}

var __imp_sk_textblob_builder_alloc_run_text_pos bindlib.PreloadProc

func SkTextblobBuilderAllocRunTextPos(builder unsafe.Pointer, font unsafe.Pointer, count int32, textByteCount int32, bounds unsafe.Pointer, runbuffer unsafe.Pointer) {
	bindlib.CCall6(__imp_sk_textblob_builder_alloc_run_text_pos.Addr(), bindlib.MarshallSyscall(builder), bindlib.MarshallSyscall(font), bindlib.MarshallSyscall(count), bindlib.MarshallSyscall(textByteCount), bindlib.MarshallSyscall(bounds), bindlib.MarshallSyscall(runbuffer))
}

var __imp_sk_textblob_builder_alloc_run_text_rsxform bindlib.PreloadProc

func SkTextblobBuilderAllocRunTextRsxform(builder unsafe.Pointer, font unsafe.Pointer, count int32, textByteCount int32, bounds unsafe.Pointer, runbuffer unsafe.Pointer) {
	bindlib.CCall6(__imp_sk_textblob_builder_alloc_run_text_rsxform.Addr(), bindlib.MarshallSyscall(builder), bindlib.MarshallSyscall(font), bindlib.MarshallSyscall(count), bindlib.MarshallSyscall(textByteCount), bindlib.MarshallSyscall(bounds), bindlib.MarshallSyscall(runbuffer))
}

var __imp_sk_typeface_unref bindlib.PreloadProc

func SkTypefaceUnref(typeface unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_typeface_unref.Addr(), bindlib.MarshallSyscall(typeface))
}

var __imp_sk_typeface_get_fontstyle bindlib.PreloadProc

func SkTypefaceGetFontstyle(typeface unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_typeface_get_fontstyle.Addr(), bindlib.MarshallSyscall(typeface))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_typeface_get_font_weight bindlib.PreloadProc

func SkTypefaceGetFontWeight(typeface unsafe.Pointer) int32 {
	__res := bindlib.CCall1(__imp_sk_typeface_get_font_weight.Addr(), bindlib.MarshallSyscall(typeface))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_typeface_get_font_width bindlib.PreloadProc

func SkTypefaceGetFontWidth(typeface unsafe.Pointer) int32 {
	__res := bindlib.CCall1(__imp_sk_typeface_get_font_width.Addr(), bindlib.MarshallSyscall(typeface))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_typeface_get_font_slant bindlib.PreloadProc

func SkTypefaceGetFontSlant(typeface unsafe.Pointer) SkFontStyleSlantT {
	__res := bindlib.CCall1(__imp_sk_typeface_get_font_slant.Addr(), bindlib.MarshallSyscall(typeface))
	return bindlib.UnmarshallSyscall[SkFontStyleSlantT](__res)
}

var __imp_sk_typeface_is_fixed_pitch bindlib.PreloadProc

func SkTypefaceIsFixedPitch(typeface unsafe.Pointer) bool {
	__res := bindlib.CCall1(__imp_sk_typeface_is_fixed_pitch.Addr(), bindlib.MarshallSyscall(typeface))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_typeface_create_default bindlib.PreloadProc

func SkTypefaceCreateDefault() unsafe.Pointer {
	__res := bindlib.CCall0(__imp_sk_typeface_create_default.Addr())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_typeface_ref_default bindlib.PreloadProc

func SkTypefaceRefDefault() unsafe.Pointer {
	__res := bindlib.CCall0(__imp_sk_typeface_ref_default.Addr())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_typeface_create_from_name bindlib.PreloadProc

func SkTypefaceCreateFromName(familyName *byte, style unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_typeface_create_from_name.Addr(), bindlib.MarshallSyscall(familyName), bindlib.MarshallSyscall(style))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_typeface_create_from_file bindlib.PreloadProc

func SkTypefaceCreateFromFile(path *byte, index int32) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_typeface_create_from_file.Addr(), bindlib.MarshallSyscall(path), bindlib.MarshallSyscall(index))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_typeface_create_from_stream bindlib.PreloadProc

func SkTypefaceCreateFromStream(stream unsafe.Pointer, index int32) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_typeface_create_from_stream.Addr(), bindlib.MarshallSyscall(stream), bindlib.MarshallSyscall(index))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_typeface_create_from_data bindlib.PreloadProc

func SkTypefaceCreateFromData(data unsafe.Pointer, index int32) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_typeface_create_from_data.Addr(), bindlib.MarshallSyscall(data), bindlib.MarshallSyscall(index))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_typeface_unichars_to_glyphs bindlib.PreloadProc

func SkTypefaceUnicharsToGlyphs(typeface unsafe.Pointer, unichars *int32, count int32, glyphs *int32) {
	bindlib.CCall4(__imp_sk_typeface_unichars_to_glyphs.Addr(), bindlib.MarshallSyscall(typeface), bindlib.MarshallSyscall(unichars), bindlib.MarshallSyscall(count), bindlib.MarshallSyscall(glyphs))
}

var __imp_sk_typeface_unichar_to_glyph bindlib.PreloadProc

func SkTypefaceUnicharToGlyph(typeface unsafe.Pointer, unichar int32) int32 {
	__res := bindlib.CCall2(__imp_sk_typeface_unichar_to_glyph.Addr(), bindlib.MarshallSyscall(typeface), bindlib.MarshallSyscall(unichar))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_typeface_count_glyphs bindlib.PreloadProc

func SkTypefaceCountGlyphs(typeface unsafe.Pointer) int32 {
	__res := bindlib.CCall1(__imp_sk_typeface_count_glyphs.Addr(), bindlib.MarshallSyscall(typeface))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_typeface_count_tables bindlib.PreloadProc

func SkTypefaceCountTables(typeface unsafe.Pointer) int32 {
	__res := bindlib.CCall1(__imp_sk_typeface_count_tables.Addr(), bindlib.MarshallSyscall(typeface))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_typeface_get_table_tags bindlib.PreloadProc

func SkTypefaceGetTableTags(typeface unsafe.Pointer, tags *SkFontTableTagT) int32 {
	__res := bindlib.CCall2(__imp_sk_typeface_get_table_tags.Addr(), bindlib.MarshallSyscall(typeface), bindlib.MarshallSyscall(tags))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_typeface_get_table_size bindlib.PreloadProc

func SkTypefaceGetTableSize(typeface unsafe.Pointer, tag SkFontTableTagT) uint {
	__res := bindlib.CCall2(__imp_sk_typeface_get_table_size.Addr(), bindlib.MarshallSyscall(typeface), bindlib.MarshallSyscall(tag))
	return bindlib.UnmarshallSyscall[uint](__res)
}

var __imp_sk_typeface_get_table_data bindlib.PreloadProc

func SkTypefaceGetTableData(typeface unsafe.Pointer, tag SkFontTableTagT, offset uint, length uint, data unsafe.Pointer) uint {
	__res := bindlib.CCall5(__imp_sk_typeface_get_table_data.Addr(), bindlib.MarshallSyscall(typeface), bindlib.MarshallSyscall(tag), bindlib.MarshallSyscall(offset), bindlib.MarshallSyscall(length), bindlib.MarshallSyscall(data))
	return bindlib.UnmarshallSyscall[uint](__res)
}

var __imp_sk_typeface_copy_table_data bindlib.PreloadProc

func SkTypefaceCopyTableData(typeface unsafe.Pointer, tag SkFontTableTagT) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_typeface_copy_table_data.Addr(), bindlib.MarshallSyscall(typeface), bindlib.MarshallSyscall(tag))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_typeface_get_units_per_em bindlib.PreloadProc

func SkTypefaceGetUnitsPerEm(typeface unsafe.Pointer) int32 {
	__res := bindlib.CCall1(__imp_sk_typeface_get_units_per_em.Addr(), bindlib.MarshallSyscall(typeface))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_typeface_get_kerning_pair_adjustments bindlib.PreloadProc

func SkTypefaceGetKerningPairAdjustments(typeface unsafe.Pointer, glyphs *int32, count int32, adjustments *int32) bool {
	__res := bindlib.CCall4(__imp_sk_typeface_get_kerning_pair_adjustments.Addr(), bindlib.MarshallSyscall(typeface), bindlib.MarshallSyscall(glyphs), bindlib.MarshallSyscall(count), bindlib.MarshallSyscall(adjustments))
	return bindlib.UnmarshallSyscall[bool](__res)
}

var __imp_sk_typeface_get_family_name bindlib.PreloadProc

func SkTypefaceGetFamilyName(typeface unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_sk_typeface_get_family_name.Addr(), bindlib.MarshallSyscall(typeface))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_typeface_open_stream bindlib.PreloadProc

func SkTypefaceOpenStream(typeface unsafe.Pointer, ttcIndex *int32) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_typeface_open_stream.Addr(), bindlib.MarshallSyscall(typeface), bindlib.MarshallSyscall(ttcIndex))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_fontmgr_create_default bindlib.PreloadProc

func SkFontmgrCreateDefault() unsafe.Pointer {
	__res := bindlib.CCall0(__imp_sk_fontmgr_create_default.Addr())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_fontmgr_ref_default bindlib.PreloadProc

func SkFontmgrRefDefault() unsafe.Pointer {
	__res := bindlib.CCall0(__imp_sk_fontmgr_ref_default.Addr())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_fontmgr_unref bindlib.PreloadProc

func SkFontmgrUnref( unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_fontmgr_unref.Addr(), bindlib.MarshallSyscall())
}

var __imp_sk_fontmgr_count_families bindlib.PreloadProc

func SkFontmgrCountFamilies( unsafe.Pointer) int32 {
	__res := bindlib.CCall1(__imp_sk_fontmgr_count_families.Addr(), bindlib.MarshallSyscall())
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_fontmgr_get_family_name bindlib.PreloadProc

func SkFontmgrGetFamilyName( unsafe.Pointer, index int32, familyName unsafe.Pointer) {
	bindlib.CCall3(__imp_sk_fontmgr_get_family_name.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(index), bindlib.MarshallSyscall(familyName))
}

var __imp_sk_fontmgr_create_styleset bindlib.PreloadProc

func SkFontmgrCreateStyleset( unsafe.Pointer, index int32) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_fontmgr_create_styleset.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(index))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_fontmgr_match_family bindlib.PreloadProc

func SkFontmgrMatchFamily( unsafe.Pointer, familyName *byte) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_fontmgr_match_family.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(familyName))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_fontmgr_match_family_style bindlib.PreloadProc

func SkFontmgrMatchFamilyStyle( unsafe.Pointer, familyName *byte, style unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall3(__imp_sk_fontmgr_match_family_style.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(familyName), bindlib.MarshallSyscall(style))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_fontmgr_match_family_style_character bindlib.PreloadProc

func SkFontmgrMatchFamilyStyleCharacter( unsafe.Pointer, familyName *byte, style unsafe.Pointer, bcp47 **byte, bcp47Count int32, character int32) unsafe.Pointer {
	__res := bindlib.CCall6(__imp_sk_fontmgr_match_family_style_character.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(familyName), bindlib.MarshallSyscall(style), bindlib.MarshallSyscall(bcp47), bindlib.MarshallSyscall(bcp47Count), bindlib.MarshallSyscall(character))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_fontmgr_create_from_data bindlib.PreloadProc

func SkFontmgrCreateFromData( unsafe.Pointer, data unsafe.Pointer, index int32) unsafe.Pointer {
	__res := bindlib.CCall3(__imp_sk_fontmgr_create_from_data.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(data), bindlib.MarshallSyscall(index))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_fontmgr_create_from_stream bindlib.PreloadProc

func SkFontmgrCreateFromStream( unsafe.Pointer, stream unsafe.Pointer, index int32) unsafe.Pointer {
	__res := bindlib.CCall3(__imp_sk_fontmgr_create_from_stream.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(stream), bindlib.MarshallSyscall(index))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_fontmgr_create_from_file bindlib.PreloadProc

func SkFontmgrCreateFromFile( unsafe.Pointer, path *byte, index int32) unsafe.Pointer {
	__res := bindlib.CCall3(__imp_sk_fontmgr_create_from_file.Addr(), bindlib.MarshallSyscall(), bindlib.MarshallSyscall(path), bindlib.MarshallSyscall(index))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_fontstyle_new bindlib.PreloadProc

func SkFontstyleNew(weight int32, width int32, slant SkFontStyleSlantT) unsafe.Pointer {
	__res := bindlib.CCall3(__imp_sk_fontstyle_new.Addr(), bindlib.MarshallSyscall(weight), bindlib.MarshallSyscall(width), bindlib.MarshallSyscall(slant))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_fontstyle_delete bindlib.PreloadProc

func SkFontstyleDelete(fs unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_fontstyle_delete.Addr(), bindlib.MarshallSyscall(fs))
}

var __imp_sk_fontstyle_get_weight bindlib.PreloadProc

func SkFontstyleGetWeight(fs unsafe.Pointer) int32 {
	__res := bindlib.CCall1(__imp_sk_fontstyle_get_weight.Addr(), bindlib.MarshallSyscall(fs))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_fontstyle_get_width bindlib.PreloadProc

func SkFontstyleGetWidth(fs unsafe.Pointer) int32 {
	__res := bindlib.CCall1(__imp_sk_fontstyle_get_width.Addr(), bindlib.MarshallSyscall(fs))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_fontstyle_get_slant bindlib.PreloadProc

func SkFontstyleGetSlant(fs unsafe.Pointer) SkFontStyleSlantT {
	__res := bindlib.CCall1(__imp_sk_fontstyle_get_slant.Addr(), bindlib.MarshallSyscall(fs))
	return bindlib.UnmarshallSyscall[SkFontStyleSlantT](__res)
}

var __imp_sk_fontstyleset_create_empty bindlib.PreloadProc

func SkFontstylesetCreateEmpty() unsafe.Pointer {
	__res := bindlib.CCall0(__imp_sk_fontstyleset_create_empty.Addr())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_fontstyleset_unref bindlib.PreloadProc

func SkFontstylesetUnref(fss unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_fontstyleset_unref.Addr(), bindlib.MarshallSyscall(fss))
}

var __imp_sk_fontstyleset_get_count bindlib.PreloadProc

func SkFontstylesetGetCount(fss unsafe.Pointer) int32 {
	__res := bindlib.CCall1(__imp_sk_fontstyleset_get_count.Addr(), bindlib.MarshallSyscall(fss))
	return bindlib.UnmarshallSyscall[int32](__res)
}

var __imp_sk_fontstyleset_get_style bindlib.PreloadProc

func SkFontstylesetGetStyle(fss unsafe.Pointer, index int32, fs unsafe.Pointer, style unsafe.Pointer) {
	bindlib.CCall4(__imp_sk_fontstyleset_get_style.Addr(), bindlib.MarshallSyscall(fss), bindlib.MarshallSyscall(index), bindlib.MarshallSyscall(fs), bindlib.MarshallSyscall(style))
}

var __imp_sk_fontstyleset_create_typeface bindlib.PreloadProc

func SkFontstylesetCreateTypeface(fss unsafe.Pointer, index int32) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_fontstyleset_create_typeface.Addr(), bindlib.MarshallSyscall(fss), bindlib.MarshallSyscall(index))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_fontstyleset_match_style bindlib.PreloadProc

func SkFontstylesetMatchStyle(fss unsafe.Pointer, style unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_sk_fontstyleset_match_style.Addr(), bindlib.MarshallSyscall(fss), bindlib.MarshallSyscall(style))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sk_vertices_unref bindlib.PreloadProc

func SkVerticesUnref(cvertices unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_vertices_unref.Addr(), bindlib.MarshallSyscall(cvertices))
}

var __imp_sk_vertices_ref bindlib.PreloadProc

func SkVerticesRef(cvertices unsafe.Pointer) {
	bindlib.CCall1(__imp_sk_vertices_ref.Addr(), bindlib.MarshallSyscall(cvertices))
}

var __imp_sk_vertices_make_copy bindlib.PreloadProc

func SkVerticesMakeCopy(vmode SkVerticesVertexModeT, vertexCount int32, positions unsafe.Pointer, texs unsafe.Pointer, colors *SkColorT, indexCount int32, indices *int32) unsafe.Pointer {
	__res := bindlib.CCall7(__imp_sk_vertices_make_copy.Addr(), bindlib.MarshallSyscall(vmode), bindlib.MarshallSyscall(vertexCount), bindlib.MarshallSyscall(positions), bindlib.MarshallSyscall(texs), bindlib.MarshallSyscall(colors), bindlib.MarshallSyscall(indexCount), bindlib.MarshallSyscall(indices))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_skottie_animation_make_from_string bindlib.PreloadProc

func SkottieAnimationMakeFromString(data *byte, length uint) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_skottie_animation_make_from_string.Addr(), bindlib.MarshallSyscall(data), bindlib.MarshallSyscall(length))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_skottie_animation_make_from_data bindlib.PreloadProc

func SkottieAnimationMakeFromData(data *byte, length uint) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_skottie_animation_make_from_data.Addr(), bindlib.MarshallSyscall(data), bindlib.MarshallSyscall(length))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_skottie_animation_make_from_stream bindlib.PreloadProc

func SkottieAnimationMakeFromStream(stream unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_skottie_animation_make_from_stream.Addr(), bindlib.MarshallSyscall(stream))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_skottie_animation_make_from_file bindlib.PreloadProc

func SkottieAnimationMakeFromFile(path *byte) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_skottie_animation_make_from_file.Addr(), bindlib.MarshallSyscall(path))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_skottie_animation_ref bindlib.PreloadProc

func SkottieAnimationRef(instance unsafe.Pointer) {
	bindlib.CCall1(__imp_skottie_animation_ref.Addr(), bindlib.MarshallSyscall(instance))
}

var __imp_skottie_animation_unref bindlib.PreloadProc

func SkottieAnimationUnref(instance unsafe.Pointer) {
	bindlib.CCall1(__imp_skottie_animation_unref.Addr(), bindlib.MarshallSyscall(instance))
}

var __imp_skottie_animation_delete bindlib.PreloadProc

func SkottieAnimationDelete(instance unsafe.Pointer) {
	bindlib.CCall1(__imp_skottie_animation_delete.Addr(), bindlib.MarshallSyscall(instance))
}

var __imp_skottie_animation_render bindlib.PreloadProc

func SkottieAnimationRender(instance unsafe.Pointer, canvas unsafe.Pointer, dst unsafe.Pointer) {
	bindlib.CCall3(__imp_skottie_animation_render.Addr(), bindlib.MarshallSyscall(instance), bindlib.MarshallSyscall(canvas), bindlib.MarshallSyscall(dst))
}

var __imp_skottie_animation_render_with_flags bindlib.PreloadProc

func SkottieAnimationRenderWithFlags(instance unsafe.Pointer, canvas unsafe.Pointer, dst unsafe.Pointer, flags SkottieAnimationRenderflagsT) {
	bindlib.CCall4(__imp_skottie_animation_render_with_flags.Addr(), bindlib.MarshallSyscall(instance), bindlib.MarshallSyscall(canvas), bindlib.MarshallSyscall(dst), bindlib.MarshallSyscall(flags))
}

var __imp_skottie_animation_seek bindlib.PreloadProc

func SkottieAnimationSeek(instance unsafe.Pointer, t float32, ic unsafe.Pointer) {
	bindlib.CCall3(__imp_skottie_animation_seek.Addr(), bindlib.MarshallSyscall(instance), bindlib.MarshallSyscall(t), bindlib.MarshallSyscall(ic))
}

var __imp_skottie_animation_seek_frame bindlib.PreloadProc

func SkottieAnimationSeekFrame(instance unsafe.Pointer, t float32, ic unsafe.Pointer) {
	bindlib.CCall3(__imp_skottie_animation_seek_frame.Addr(), bindlib.MarshallSyscall(instance), bindlib.MarshallSyscall(t), bindlib.MarshallSyscall(ic))
}

var __imp_skottie_animation_seek_frame_time bindlib.PreloadProc

func SkottieAnimationSeekFrameTime(instance unsafe.Pointer, t float32, ic unsafe.Pointer) {
	bindlib.CCall3(__imp_skottie_animation_seek_frame_time.Addr(), bindlib.MarshallSyscall(instance), bindlib.MarshallSyscall(t), bindlib.MarshallSyscall(ic))
}

var __imp_skottie_animation_get_duration bindlib.PreloadProc

func SkottieAnimationGetDuration(instance unsafe.Pointer) float64 {
	__res := bindlib.CCall1(__imp_skottie_animation_get_duration.Addr(), bindlib.MarshallSyscall(instance))
	return bindlib.UnmarshallSyscall[float64](__res)
}

var __imp_skottie_animation_get_fps bindlib.PreloadProc

func SkottieAnimationGetFps(instance unsafe.Pointer) float64 {
	__res := bindlib.CCall1(__imp_skottie_animation_get_fps.Addr(), bindlib.MarshallSyscall(instance))
	return bindlib.UnmarshallSyscall[float64](__res)
}

var __imp_skottie_animation_get_in_point bindlib.PreloadProc

func SkottieAnimationGetInPoint(instance unsafe.Pointer) float64 {
	__res := bindlib.CCall1(__imp_skottie_animation_get_in_point.Addr(), bindlib.MarshallSyscall(instance))
	return bindlib.UnmarshallSyscall[float64](__res)
}

var __imp_skottie_animation_get_out_point bindlib.PreloadProc

func SkottieAnimationGetOutPoint(instance unsafe.Pointer) float64 {
	__res := bindlib.CCall1(__imp_skottie_animation_get_out_point.Addr(), bindlib.MarshallSyscall(instance))
	return bindlib.UnmarshallSyscall[float64](__res)
}

var __imp_skottie_animation_get_version bindlib.PreloadProc

func SkottieAnimationGetVersion(instance unsafe.Pointer, version unsafe.Pointer) {
	bindlib.CCall2(__imp_skottie_animation_get_version.Addr(), bindlib.MarshallSyscall(instance), bindlib.MarshallSyscall(version))
}

var __imp_skottie_animation_get_size bindlib.PreloadProc

func SkottieAnimationGetSize(instance unsafe.Pointer, size unsafe.Pointer) {
	bindlib.CCall2(__imp_skottie_animation_get_size.Addr(), bindlib.MarshallSyscall(instance), bindlib.MarshallSyscall(size))
}

var __imp_skottie_animation_builder_new bindlib.PreloadProc

func SkottieAnimationBuilderNew(flags SkottieAnimationBuilderFlagsT) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_skottie_animation_builder_new.Addr(), bindlib.MarshallSyscall(flags))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_skottie_animation_builder_delete bindlib.PreloadProc

func SkottieAnimationBuilderDelete(instance unsafe.Pointer) {
	bindlib.CCall1(__imp_skottie_animation_builder_delete.Addr(), bindlib.MarshallSyscall(instance))
}

var __imp_skottie_animation_builder_get_stats bindlib.PreloadProc

func SkottieAnimationBuilderGetStats(instance unsafe.Pointer, stats unsafe.Pointer) {
	bindlib.CCall2(__imp_skottie_animation_builder_get_stats.Addr(), bindlib.MarshallSyscall(instance), bindlib.MarshallSyscall(stats))
}

var __imp_skottie_animation_builder_set_resource_provider bindlib.PreloadProc

func SkottieAnimationBuilderSetResourceProvider(instance unsafe.Pointer, resourceProvider unsafe.Pointer) {
	bindlib.CCall2(__imp_skottie_animation_builder_set_resource_provider.Addr(), bindlib.MarshallSyscall(instance), bindlib.MarshallSyscall(resourceProvider))
}

var __imp_skottie_animation_builder_set_font_manager bindlib.PreloadProc

func SkottieAnimationBuilderSetFontManager(instance unsafe.Pointer, fontManager unsafe.Pointer) {
	bindlib.CCall2(__imp_skottie_animation_builder_set_font_manager.Addr(), bindlib.MarshallSyscall(instance), bindlib.MarshallSyscall(fontManager))
}

var __imp_skottie_animation_builder_make_from_stream bindlib.PreloadProc

func SkottieAnimationBuilderMakeFromStream(instance unsafe.Pointer, stream unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_skottie_animation_builder_make_from_stream.Addr(), bindlib.MarshallSyscall(instance), bindlib.MarshallSyscall(stream))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_skottie_animation_builder_make_from_file bindlib.PreloadProc

func SkottieAnimationBuilderMakeFromFile(instance unsafe.Pointer, path *byte) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_skottie_animation_builder_make_from_file.Addr(), bindlib.MarshallSyscall(instance), bindlib.MarshallSyscall(path))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_skottie_animation_builder_make_from_string bindlib.PreloadProc

func SkottieAnimationBuilderMakeFromString(instance unsafe.Pointer, data *byte, length uint) unsafe.Pointer {
	__res := bindlib.CCall3(__imp_skottie_animation_builder_make_from_string.Addr(), bindlib.MarshallSyscall(instance), bindlib.MarshallSyscall(data), bindlib.MarshallSyscall(length))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_skottie_animation_builder_make_from_data bindlib.PreloadProc

func SkottieAnimationBuilderMakeFromData(instance unsafe.Pointer, data *byte, length uint) unsafe.Pointer {
	__res := bindlib.CCall3(__imp_skottie_animation_builder_make_from_data.Addr(), bindlib.MarshallSyscall(instance), bindlib.MarshallSyscall(data), bindlib.MarshallSyscall(length))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_skresources_resource_provider_ref bindlib.PreloadProc

func SkresourcesResourceProviderRef(instance unsafe.Pointer) {
	bindlib.CCall1(__imp_skresources_resource_provider_ref.Addr(), bindlib.MarshallSyscall(instance))
}

var __imp_skresources_resource_provider_unref bindlib.PreloadProc

func SkresourcesResourceProviderUnref(instance unsafe.Pointer) {
	bindlib.CCall1(__imp_skresources_resource_provider_unref.Addr(), bindlib.MarshallSyscall(instance))
}

var __imp_skresources_resource_provider_delete bindlib.PreloadProc

func SkresourcesResourceProviderDelete(instance unsafe.Pointer) {
	bindlib.CCall1(__imp_skresources_resource_provider_delete.Addr(), bindlib.MarshallSyscall(instance))
}

var __imp_skresources_resource_provider_load bindlib.PreloadProc

func SkresourcesResourceProviderLoad(instance unsafe.Pointer, path *byte, name *byte) unsafe.Pointer {
	__res := bindlib.CCall3(__imp_skresources_resource_provider_load.Addr(), bindlib.MarshallSyscall(instance), bindlib.MarshallSyscall(path), bindlib.MarshallSyscall(name))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_skresources_resource_provider_load_image_asset bindlib.PreloadProc

func SkresourcesResourceProviderLoadImageAsset(instance unsafe.Pointer, path *byte, name *byte, id *byte) unsafe.Pointer {
	__res := bindlib.CCall4(__imp_skresources_resource_provider_load_image_asset.Addr(), bindlib.MarshallSyscall(instance), bindlib.MarshallSyscall(path), bindlib.MarshallSyscall(name), bindlib.MarshallSyscall(id))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_skresources_resource_provider_load_audio_asset bindlib.PreloadProc

func SkresourcesResourceProviderLoadAudioAsset(instance unsafe.Pointer, path *byte, name *byte, id *byte) unsafe.Pointer {
	__res := bindlib.CCall4(__imp_skresources_resource_provider_load_audio_asset.Addr(), bindlib.MarshallSyscall(instance), bindlib.MarshallSyscall(path), bindlib.MarshallSyscall(name), bindlib.MarshallSyscall(id))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_skresources_resource_provider_load_typeface bindlib.PreloadProc

func SkresourcesResourceProviderLoadTypeface(instance unsafe.Pointer, name *byte, url *byte) unsafe.Pointer {
	__res := bindlib.CCall3(__imp_skresources_resource_provider_load_typeface.Addr(), bindlib.MarshallSyscall(instance), bindlib.MarshallSyscall(name), bindlib.MarshallSyscall(url))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_skresources_file_resource_provider_make bindlib.PreloadProc

func SkresourcesFileResourceProviderMake(base_dir unsafe.Pointer, predecode bool) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_skresources_file_resource_provider_make.Addr(), bindlib.MarshallSyscall(base_dir), bindlib.MarshallSyscall(predecode))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_skresources_caching_resource_provider_proxy_make bindlib.PreloadProc

func SkresourcesCachingResourceProviderProxyMake(rp unsafe.Pointer) unsafe.Pointer {
	__res := bindlib.CCall1(__imp_skresources_caching_resource_provider_proxy_make.Addr(), bindlib.MarshallSyscall(rp))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_skresources_data_uri_resource_provider_proxy_make bindlib.PreloadProc

func SkresourcesDataUriResourceProviderProxyMake(rp unsafe.Pointer, predecode bool) unsafe.Pointer {
	__res := bindlib.CCall2(__imp_skresources_data_uri_resource_provider_proxy_make.Addr(), bindlib.MarshallSyscall(rp), bindlib.MarshallSyscall(predecode))
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sksg_invalidation_controller_new bindlib.PreloadProc

func SksgInvalidationControllerNew() unsafe.Pointer {
	__res := bindlib.CCall0(__imp_sksg_invalidation_controller_new.Addr())
	return bindlib.UnmarshallSyscall[unsafe.Pointer](__res)
}

var __imp_sksg_invalidation_controller_delete bindlib.PreloadProc

func SksgInvalidationControllerDelete(instance unsafe.Pointer) {
	bindlib.CCall1(__imp_sksg_invalidation_controller_delete.Addr(), bindlib.MarshallSyscall(instance))
}

var __imp_sksg_invalidation_controller_inval bindlib.PreloadProc

func SksgInvalidationControllerInval(instance unsafe.Pointer, rect unsafe.Pointer, matrix unsafe.Pointer) {
	bindlib.CCall3(__imp_sksg_invalidation_controller_inval.Addr(), bindlib.MarshallSyscall(instance), bindlib.MarshallSyscall(rect), bindlib.MarshallSyscall(matrix))
}

var __imp_sksg_invalidation_controller_get_bounds bindlib.PreloadProc

func SksgInvalidationControllerGetBounds(instance unsafe.Pointer, bounds unsafe.Pointer) {
	bindlib.CCall2(__imp_sksg_invalidation_controller_get_bounds.Addr(), bindlib.MarshallSyscall(instance), bindlib.MarshallSyscall(bounds))
}

var __imp_sksg_invalidation_controller_begin bindlib.PreloadProc

func SksgInvalidationControllerBegin(instance unsafe.Pointer) {
	bindlib.CCall1(__imp_sksg_invalidation_controller_begin.Addr(), bindlib.MarshallSyscall(instance))
}

var __imp_sksg_invalidation_controller_end bindlib.PreloadProc

func SksgInvalidationControllerEnd(instance unsafe.Pointer) {
	bindlib.CCall1(__imp_sksg_invalidation_controller_end.Addr(), bindlib.MarshallSyscall(instance))
}

var __imp_sksg_invalidation_controller_reset bindlib.PreloadProc

func SksgInvalidationControllerReset(instance unsafe.Pointer) {
	bindlib.CCall1(__imp_sksg_invalidation_controller_reset.Addr(), bindlib.MarshallSyscall(instance))
}
